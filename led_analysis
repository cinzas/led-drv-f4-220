
libdistorm3-3/bionic 3.3.4-2 amd64
  powerful disassembler library for x86/AMD64 binary streams

libdistorm3-dev/bionic 3.3.4-2 amd64
  powerful disassembler library for x86/AMD64 binary streams (development files)

libdistorm64-1/bionic,now 1.7.30-1 amd64 [residual-config]
  ultimate disassembler library for x86 code

libdistorm64-dev/bionic 1.7.30-1 amd64
  ultimate disassembler library for x86 code - header files

libfcml-dev/bionic 1.1.3-2 amd64
--

libhsdis0-fcml/bionic 1.1.3-2 amd64
  HotSpot disassembler plugin using FCML

liblldb-3.9/bionic 1:3.9.1-19ubuntu1 amd64
--

libsmali-1-java/bionic,bionic 1.4.2-1 all
  assembler/disassembler for Android's dex format

libsmali-java/bionic,bionic 2.2.2-1 all
  assembler/disassembler for Android's dex format

libz80ex-dev/bionic 1.1.21-1 amd64
--

python-capstone/bionic 3.0.4-5 amd64
  lightweight multi-architecture disassembly framework - Python bindings

python-distorm3/bionic,bionic 3.3.4-2 all
  powerful disassembler library for x86/AMD64 binary streams (Python bindings)

python-lldb-3.9/bionic 1:3.9.1-19ubuntu1 amd64
--

python-pyip/bionic,bionic 0.7-2 all
  Python modules for raw ip packet assembling/disassembling

python-pysnmp4/bionic,bionic 4.4.3-1 all
--

python3-capstone/bionic 3.0.4-5 amd64
  lightweight multi-architecture disassembly framework - Python bindings

python3-pysnmp4/bionic,bionic 4.4.3-1 all
--

tar-split/bionic 0.10.2-1 amd64
  tar archive assembly/disassembly

x86dis/bionic 0.23-6build1 amd64
  Frontend to libdisasm

xul-ext-form-history-control/bionic,bionic 1.4.0.6-1 all
--

z80dasm/bionic 1.1.5-1 amd64
  disassembler for the Zilog Z80 microprocessor

$ clear
$ date
Thu Dec  6 12:23:21 MST 2018
$
$ apt search disas | grep  --color -E -2 disas'[ms]'

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.


fcml/bionic,now 1.1.3-2 amd64 [installed]
  single-line assembler and disassembler

flasm/bionic 1.62-10 amd64
  assembler and disassembler for Flash (SWF) bytecode

forensics-extra/bionic,bionic 1.13 all
--

golang-github-vbatts-tar-split-dev/bionic,bionic 0.10.2-1 all
  tar archive assembly/disassembly (source)

gpsim/bionic 0.30.0-1 amd64
--

hsail-tools/bionic 0~20170314-3 amd64
  tools for parsing, assembling, and disassembling HSAIL

ht/bionic 2.1.0+repack1-3 amd64
--

libcapstone-dev/bionic 3.0.4-5 amd64
  lightweight multi-architecture disassembly framework - devel files

libcapstone3/bionic 3.0.4-5 amd64
  lightweight multi-architecture disassembly framework - library

libdevel-callsite-perl/bionic 0.10-1 amd64
  Perl module to get caller return OP address and Perl interpreter context

libdisasm-dev/bionic 0.23-6build1 amd64
  disassembler library for x86 code (development files)

libdisasm0/bionic 0.23-6build1 amd64
  disassembler library for x86 code

libdistorm3-3/bionic 3.3.4-2 amd64
  powerful disassembler library for x86/AMD64 binary streams

libdistorm3-dev/bionic 3.3.4-2 amd64
  powerful disassembler library for x86/AMD64 binary streams (development files)

libdistorm64-1/bionic,now 1.7.30-1 amd64 [residual-config]
  ultimate disassembler library for x86 code

libdistorm64-dev/bionic 1.7.30-1 amd64
  ultimate disassembler library for x86 code - header files

libfcml-dev/bionic 1.1.3-2 amd64
--

libhsdis0-fcml/bionic 1.1.3-2 amd64
  HotSpot disassembler plugin using FCML

liblldb-3.9/bionic 1:3.9.1-19ubuntu1 amd64
--

libsmali-1-java/bionic,bionic 1.4.2-1 all
  assembler/disassembler for Android's dex format

libsmali-java/bionic,bionic 2.2.2-1 all
  assembler/disassembler for Android's dex format

libz80ex-dev/bionic 1.1.21-1 amd64
--

python-capstone/bionic 3.0.4-5 amd64
  lightweight multi-architecture disassembly framework - Python bindings

python-distorm3/bionic,bionic 3.3.4-2 all
  powerful disassembler library for x86/AMD64 binary streams (Python bindings)

python-lldb-3.9/bionic 1:3.9.1-19ubuntu1 amd64
--

python-pyip/bionic,bionic 0.7-2 all
  Python modules for raw ip packet assembling/disassembling

python-pysnmp4/bionic,bionic 4.4.3-1 all
--

python3-capstone/bionic 3.0.4-5 amd64
  lightweight multi-architecture disassembly framework - Python bindings

python3-pysnmp4/bionic,bionic 4.4.3-1 all
--

tar-split/bionic 0.10.2-1 amd64
  tar archive assembly/disassembly

x86dis/bionic 0.23-6build1 amd64
  Frontend to libdisasm

xul-ext-form-history-control/bionic,bionic 1.4.0.6-1 all
--

z80dasm/bionic 1.1.5-1 amd64
  disassembler for the Zilog Z80 microprocessor

$ apt rdepends libdistorm64-1
libdistorm64-1
Reverse Depends:
  Depends: libdistorm64-dev (= 1.7.30-1)
  Depends: pyew
$ apt show pyew
Package: pyew
Version: 2.0-4
Priority: extra
Section: universe/python
Origin: Ubuntu
Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>
Original-Maintainer: Debian QA Group <packages@qa.debian.org>
Bugs: https://bugs.launchpad.net/ubuntu/+filebug
Installed-Size: 1,903 kB
Depends: python (<< 2.8), python (>= 2.7), python:any (>= 2.6.6-7~), libdistorm64-1
Recommends: python-tk
Homepage: https://github.com/joxeankoret/pyew
Download-Size: 241 kB
APT-Sources: http://us.archive.ubuntu.com/ubuntu bionic/universe amd64 Packages
Description: Python tool like radare or *iew for malware analysis
 Pyew is a (command line) Python tool like radare and *iew, oriented, mainly,
 to analyze malware. It does have support for hexadecimal viewing, disassembly
 (Intel 16, 32 and 64 bits), PE and ELF file formats (it does code analysis
 the right way), following direct call/jmp instructions, OLE2 format, PDF
 format (limited) and more. It also supports plugins to add more features to
 the tool.

$ sudo apt install pyew
Reading package lists... Done
Building dependency tree
Reading state information... Done
The following packages were automatically installed and are no longer required:
  ttf-dejavu ttf-dejavu-extra
Use 'sudo apt autoremove' to remove them.
The following additional packages will be installed:
  libdistorm64-1
The following NEW packages will be installed:
  libdistorm64-1 pyew
0 upgraded, 2 newly installed, 0 to remove and 0 not upgraded.
Need to get 298 kB of archives.
After this operation, 2,140 kB of additional disk space will be used.
Do you want to continue? [Y/n]
Get:1 http://us.archive.ubuntu.com/ubuntu bionic/universe amd64 libdistorm64-1 amd64 1.7.30-1 [57.3 kB]
Get:2 http://us.archive.ubuntu.com/ubuntu bionic/universe amd64 pyew all 2.0-4 [241 kB]
Fetched 298 kB in 1s (541 kB/s)
Selecting previously unselected package libdistorm64-1.
(Reading database ... 288359 files and directories currently installed.)
Preparing to unpack .../libdistorm64-1_1.7.30-1_amd64.deb ...
Unpacking libdistorm64-1 (1.7.30-1) ...
Selecting previously unselected package pyew.
Preparing to unpack .../archives/pyew_2.0-4_all.deb ...
Unpacking pyew (2.0-4) ...
Setting up libdistorm64-1 (1.7.30-1) ...
Setting up pyew (2.0-4) ...
Processing triggers for libc-bin (2.27-3ubuntu1) ...
$ apt search radare
Sorting... Done
Full Text Search... Done
bokken/now 1.5-5 all [residual-config]
  (none)

libradare2-0.9/now 0.9-3 amd64 [residual-config]
  (none)

libradare2-0.9.6/now 0.9.6-3.1ubuntu1 amd64 [residual-config]
  (none)

libradare2-2.3/bionic 2.3.0+dfsg-2 amd64
  libraries from the radare2 suite

libradare2-common/bionic,bionic 2.3.0+dfsg-2 all
  arch independent files from the radare2 suite

libradare2-dev/bionic 2.3.0+dfsg-2 amd64
  devel files from the radare2 suite

pyew/bionic,bionic,now 2.0-4 all [installed]
  Python tool like radare or *iew for malware analysis

radare2/bionic 2.3.0+dfsg-2 amd64
  free and advanced command line hexadecimal editor

$ apt show radare2
Package: radare2
Version: 2.3.0+dfsg-2
Priority: extra
Section: universe/devel
Origin: Ubuntu
Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>
Original-Maintainer: Debian Security Tools Packaging Team <pkg-security-team@lists.alioth.debian.org>
Bugs: https://bugs.launchpad.net/ubuntu/+filebug
Installed-Size: 462 kB
Depends: libc6 (>= 2.14), libradare2-2.3
Recommends: libradare2-dev
Homepage: https://www.radare.org
Download-Size: 159 kB
APT-Sources: http://us.archive.ubuntu.com/ubuntu bionic/universe amd64 Packages
Description: free and advanced command line hexadecimal editor
 The project aims to create a complete, portable, multi-architecture,
 unix-like toolchain for reverse engineering.
 .
 It is composed by an hexadecimal editor (radare) with a wrapped IO
 layer supporting multiple backends for local/remote files, debugger
 (OS X, BSD, Linux, W32), stream analyzer, assembler/disassembler (rasm)
 for x86, ARM, PPC, m68k, Java, MSIL, SPARC, code analysis modules and
 scripting facilities. A bindiffer named radiff, base converter (rax),
 shellcode development helper (rasc), a binary information extractor
 supporting PE, mach0, ELF, class, etc. named rabin, and a block-based
 hash utility called rahash.

$ sudo apt install radare2
Reading package lists... Done
Building dependency tree
Reading state information... Done
The following packages were automatically installed and are no longer required:
  ttf-dejavu ttf-dejavu-extra
Use 'sudo apt autoremove' to remove them.
The following additional packages will be installed:
  libcapstone-dev libcapstone3 libmagic-dev libradare2-2.3 libradare2-common libradare2-dev libzip4
The following NEW packages will be installed:
  libcapstone-dev libcapstone3 libmagic-dev libradare2-2.3 libradare2-common libradare2-dev libzip4 radare2
0 upgraded, 8 newly installed, 0 to remove and 0 not upgraded.
Need to get 4,451 kB of archives.
After this operation, 25.7 MB of additional disk space will be used.
Do you want to continue? [Y/n]
Get:1 http://us.archive.ubuntu.com/ubuntu bionic/universe amd64 libcapstone3 amd64 3.0.4-5 [434 kB]
Get:2 http://us.archive.ubuntu.com/ubuntu bionic/universe amd64 libcapstone-dev amd64 3.0.4-5 [486 kB]
Get:3 http://us.archive.ubuntu.com/ubuntu bionic-updates/main amd64 libmagic-dev amd64 1:5.32-2ubuntu0.1 [79.4 kB]
Get:4 http://us.archive.ubuntu.com/ubuntu bionic/universe amd64 libzip4 amd64 1.1.2-1.1 [37.8 kB]
Get:5 http://us.archive.ubuntu.com/ubuntu bionic/universe amd64 libradare2-common all 2.3.0+dfsg-2 [670 kB]
Get:6 http://us.archive.ubuntu.com/ubuntu bionic/universe amd64 libradare2-2.3 amd64 2.3.0+dfsg-2 [2,435 kB]
Get:7 http://us.archive.ubuntu.com/ubuntu bionic/universe amd64 libradare2-dev amd64 2.3.0+dfsg-2 [150 kB]
Get:8 http://us.archive.ubuntu.com/ubuntu bionic/universe amd64 radare2 amd64 2.3.0+dfsg-2 [159 kB]
Fetched 4,451 kB in 1s (4,251 kB/s)
Selecting previously unselected package libcapstone3:amd64.
(Reading database ... 288443 files and directories currently installed.)
Preparing to unpack .../0-libcapstone3_3.0.4-5_amd64.deb ...
Unpacking libcapstone3:amd64 (3.0.4-5) ...
Selecting previously unselected package libcapstone-dev:amd64.
Preparing to unpack .../1-libcapstone-dev_3.0.4-5_amd64.deb ...
Unpacking libcapstone-dev:amd64 (3.0.4-5) ...
Selecting previously unselected package libmagic-dev:amd64.
Preparing to unpack .../2-libmagic-dev_1%3a5.32-2ubuntu0.1_amd64.deb ...
Unpacking libmagic-dev:amd64 (1:5.32-2ubuntu0.1) ...
Selecting previously unselected package libzip4:amd64.
Preparing to unpack .../3-libzip4_1.1.2-1.1_amd64.deb ...
Unpacking libzip4:amd64 (1.1.2-1.1) ...
Selecting previously unselected package libradare2-common.
Preparing to unpack .../4-libradare2-common_2.3.0+dfsg-2_all.deb ...
Unpacking libradare2-common (2.3.0+dfsg-2) ...
Selecting previously unselected package libradare2-2.3:amd64.
Preparing to unpack .../5-libradare2-2.3_2.3.0+dfsg-2_amd64.deb ...
Unpacking libradare2-2.3:amd64 (2.3.0+dfsg-2) ...
Selecting previously unselected package libradare2-dev.
Preparing to unpack .../6-libradare2-dev_2.3.0+dfsg-2_amd64.deb ...
Unpacking libradare2-dev (2.3.0+dfsg-2) ...
Selecting previously unselected package radare2.
Preparing to unpack .../7-radare2_2.3.0+dfsg-2_amd64.deb ...
Unpacking radare2 (2.3.0+dfsg-2) ...
Setting up libmagic-dev:amd64 (1:5.32-2ubuntu0.1) ...
Setting up libzip4:amd64 (1.1.2-1.1) ...
Processing triggers for libc-bin (2.27-3ubuntu1) ...
Processing triggers for man-db (2.8.3-2ubuntu0.1) ...
Setting up libcapstone3:amd64 (3.0.4-5) ...
Setting up libradare2-common (2.3.0+dfsg-2) ...
Setting up libradare2-2.3:amd64 (2.3.0+dfsg-2) ...
Setting up libcapstone-dev:amd64 (3.0.4-5) ...
Setting up radare2 (2.3.0+dfsg-2) ...
Setting up libradare2-dev (2.3.0+dfsg-2) ...
Processing triggers for libc-bin (2.27-3ubuntu1) ...
$ apt cache show cutter
E: Invalid operation cache
$ apt show cutter
Package: cutter
Version: 1.04-1
Priority: optional
Section: universe/net
Origin: Ubuntu
Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>
Original-Maintainer: Adilson dos Reis <adilsondosreis@yahoo.com.br>
Bugs: https://bugs.launchpad.net/ubuntu/+filebug
Installed-Size: 35.8 kB
Depends: libc6 (>= 2.15)
Homepage: http://www.digitage.co.uk/digitage/software/linux-security/cutter
Download-Size: 12.6 kB
APT-Sources: http://us.archive.ubuntu.com/ubuntu bionic/universe amd64 Packages
Description: disconnect routed IP connections
 Cutter will send packets to both ends of a TCP/IP connection to close
 the connection. It is designed to be used on a Linux router to disconnect
 unwanted connections.
 .
 Cutter can close all connections to or from a specified ip-address or
 ip-address/port pair, allowing, as example, close the specific service of a
 computer. It also can close the connections between two ip-address that
 use a specific port to deny a certain service to client. Other possibility
 is close a specific connection from ip-address/port to ip-address/port.
 .
 Cutter is not a firewall, but is part of a larger Linux firewall project.
 .
 Cutter 1.04 should be considered EXPERIMENTAL.

$ apt search cutter
Sorting... Done
Full Text Search... Done
b43-fwcutter/bionic 1:019-3 amd64
  utility for extracting Broadcom 43xx firmware

cookiecutter/bionic,bionic 1.6.0-2 all
  create projects from project templates

cutter/bionic 1.04-1 amd64
  disconnect routed IP connections

fonts-gfs-bodoni-classic/bionic,bionic 1.1-5 all
  smart greek typeface revival

fonts-gfs-didot-classic/bionic,bionic 1.1-5 all
  greek font family (Classic Didot revival)

fonts-gfs-solomos/bionic,bionic 1.1-5 all
  ancient Greek oblique font

liblibrary-callnumber-lc-perl/bionic,bionic 0.23-1 all
  utility functions to deal with Library-of-Congress call numbers

python-cookiecutter/bionic,bionic 1.6.0-2 all
  create projects from project templates (Python 2 module)

python-cookiecutter-doc/bionic,bionic 1.6.0-2 all
  create projects from project templates (documentation)

python-pytest-cookies/bionic,bionic 0.2.0-1 all
  wrapper for the cookiecutter API for generating projects (Python 2)

python3-api-hour/bionic,bionic 0.8.2-1 all
  lightweight daemon framework to write AsyncIO based applications

python3-cookiecutter/bionic,bionic 1.6.0-2 all
  create projects from project templates (Python 3 module)

python3-pytest-cookies/bionic,bionic 0.2.0-1 all
  wrapper for the cookiecutter API for generating projects (Python 3)

reposurgeon/bionic 3.42-2ubuntu1 amd64
  Tool for editing version-control repository history

robocut/bionic 1.0.11-1 amd64
  Control program for Graphtec cutting plotters

solvespace/bionic 2.3+repack1-3 amd64
  Parametric 2d/3d CAD

$ dpkg -L radare2
/.
/usr
/usr/bin
/usr/bin/r2agent
/usr/bin/r2pm
/usr/bin/rabin2
/usr/bin/radare2
/usr/bin/radiff2
/usr/bin/rafind2
/usr/bin/ragg2
/usr/bin/ragg2-cc
/usr/bin/rahash2
/usr/bin/rarun2
/usr/bin/rasm2
/usr/bin/rax2
/usr/share
/usr/share/doc
/usr/share/doc/radare2
/usr/share/doc/radare2/README.md.gz
/usr/share/doc/radare2/all68k.r2
/usr/share/doc/radare2/android
/usr/share/doc/radare2/avr
/usr/share/doc/radare2/bash_autocompletion.sh
/usr/share/doc/radare2/brainfuck
/usr/share/doc/radare2/calling-conventions.md
/usr/share/doc/radare2/capstone.md
/usr/share/doc/radare2/clang-format
/usr/share/doc/radare2/copyright
/usr/share/doc/radare2/crosscompile
/usr/share/doc/radare2/debug
/usr/share/doc/radare2/debug-internals.md.gz
/usr/share/doc/radare2/dexdump.sh
/usr/share/doc/radare2/dospart.gz
/usr/share/doc/radare2/dwarf-line.rsc
/usr/share/doc/radare2/emscripten
/usr/share/doc/radare2/esil.gz
/usr/share/doc/radare2/flirt
/usr/share/doc/radare2/fortunes.creepy
/usr/share/doc/radare2/fortunes.fun.gz
/usr/share/doc/radare2/fortunes.nsfw
/usr/share/doc/radare2/fortunes.tips.gz
/usr/share/doc/radare2/freebsd.md
/usr/share/doc/radare2/gdb
/usr/share/doc/radare2/haiku
/usr/share/doc/radare2/hud
/usr/share/doc/radare2/ida
/usr/share/doc/radare2/intro.md.gz
/usr/share/doc/radare2/io
/usr/share/doc/radare2/io-fixing
/usr/share/doc/radare2/iocache
/usr/share/doc/radare2/ios.md
/usr/share/doc/radare2/iphone.md
/usr/share/doc/radare2/kvast
/usr/share/doc/radare2/lang-plugins
/usr/share/doc/radare2/macos.md.gz
/usr/share/doc/radare2/macros
/usr/share/doc/radare2/maemo
/usr/share/doc/radare2/objc.pl
/usr/share/doc/radare2/oo
/usr/share/doc/radare2/plugins
/usr/share/doc/radare2/portscan.r2
/usr/share/doc/radare2/qnx
/usr/share/doc/radare2/r2ascii.txt
/usr/share/doc/radare2/rap
/usr/share/doc/radare2/rapatch.md
/usr/share/doc/radare2/releases
/usr/share/doc/radare2/repo
/usr/share/doc/radare2/rgraph
/usr/share/doc/radare2/sdb_ordinal.md
/usr/share/doc/radare2/siol.md
/usr/share/doc/radare2/solaris
/usr/share/doc/radare2/static
/usr/share/doc/radare2/static-plugins
/usr/share/doc/radare2/strings
/usr/share/doc/radare2/termux.md
/usr/share/doc/radare2/types.md.gz
/usr/share/doc/radare2/uncrustify.cfg.gz
/usr/share/doc/radare2/vim
/usr/share/doc/radare2/vim2r2.js
/usr/share/doc/radare2/windbg
/usr/share/doc/radare2/windows.md
/usr/share/doc/radare2/yara.md
/usr/share/man
/usr/share/man/man1
/usr/share/man/man1/r2-docker.1.gz
/usr/share/man/man1/r2agent.1.gz
/usr/share/man/man1/r2pm.1.gz
/usr/share/man/man1/rabin2.1.gz
/usr/share/man/man1/radare2.1.gz
/usr/share/man/man1/radiff2.1.gz
/usr/share/man/man1/rafind2.1.gz
/usr/share/man/man1/ragg2-cc.1.gz
/usr/share/man/man1/ragg2.1.gz
/usr/share/man/man1/rahash2.1.gz
/usr/share/man/man1/rarun2.1.gz
/usr/share/man/man1/rasm2.1.gz
/usr/share/man/man1/rax2.1.gz
/usr/share/man/man7
/usr/share/man/man7/esil.7.gz
/usr/share/zsh
/usr/share/zsh/vendor-completions
/usr/share/zsh/vendor-completions/_r2
/usr/share/zsh/vendor-completions/_rabin2
/usr/share/zsh/vendor-completions/_radiff2
/usr/share/zsh/vendor-completions/_rafind2
/usr/share/zsh/vendor-completions/_ragg2
/usr/share/zsh/vendor-completions/_ragg2-cc
/usr/share/zsh/vendor-completions/_rahash2
/usr/share/zsh/vendor-completions/_rasm2
/usr/share/zsh/vendor-completions/_rax2
/usr/bin/r2
/usr/share/doc/radare2/changelog.Debian.gz
/usr/share/man/man1/r2.1.gz
$ man r2
$ ll *ko
-rw-rw-r-- 1 mike mike 9927 Nov  5 14:58 led_drv.ko
$ r2 led_drv.ko
Warning: Cannot initialize program headers
Warning: Cannot initialize dynamic strings
Warning: Cannot initialize dynamic section
Warning: run r2 with -e io.cache=true to fix relocations in disassembly
[0x08000070]> q
$ r2 -e io.cache=true led_drv.ko
Warning: Cannot initialize program headers
Warning: Cannot initialize dynamic strings
Warning: Cannot initialize dynamic section
[0x08000070]> ?
Usage: [.][times][cmd][~grep][@[@iter]addr!size][|>pipe] ; ...
Append '?' to any char command to get detailed help
Prefix with number to repeat command N times (f.ex: 3x)
|%var =valueAlias for 'env' command
| *[?] off[=[0x]value]    Pointer read/write data/values (see ?v, wx, wv)
| (macro arg0 arg1)       Manage scripting macros
| .[?] [-|(m)|f|!sh|cmd]  Define macro or load r2, cparse or rlang file
| =[?] [cmd]              Send/Listen for Remote Commands (rap://, http://, <fd>)
| /[?]                    Search for bytes, regexps, patterns, ..
| ![?] [cmd]              Run given command as in system(3)
| #[?] !lang [..]         Hashbang to run an rlang script
| a[?]                    Analysis commands
| b[?]                    Display or change the block size
| c[?] [arg]              Compare block with given data
| C[?]                    Code metadata (comments, format, hints, ..)
| d[?]                    Debugger commands
| e[?] [a[=b]]            List/get/set config evaluable vars
| f[?] [name][sz][at]     Add flag at current address
| g[?] [arg]              Generate shellcodes with r_egg
| i[?] [file]             Get info about opened file from r_bin
| k[?] [sdb-query]        Run sdb-query. see k? for help, 'k *', 'k **' ...
| L[?] [-] [plugin]       list, unload load r2 plugins
| m[?]                    Mountpoints commands
| o[?] [file] ([offset])  Open file at optional address
| p[?] [len]              Print current block with format and length
| P[?]                    Project management utilities
| q[?] [ret]              Quit program with a return value
| r[?] [len]              Resize file
| s[?] [addr]             Seek to address (also for '0x', '0x1' == 's 0x1')
| S[?]                    Io section manipulation information
| t[?]                    Types, noreturn, signatures, C parser and more
| T[?] [-] [num|msg]      Text log utility
| u[?]                    uname/undo seek/write
| V                       Visual mode (V! = panels, VV = fcngraph, VVV = callgraph)
| w[?] [str]              Multiple write operations
| x[?] [len]              Alias for 'px' (print hexadecimal)
| y[?] [len] [[[@]addr    Yank/paste bytes from/to memory
| z[?]                    Zignatures management
| ?[??][expr]             Help or evaluate math expression
| ?$?                     Show available '$' variables and aliases
| ?@?                     Misc help for '@' (seek), '~' (grep) (see ~??)
[0x08000070]> help a
|ERROR| Invalid command 'help a' (0x68)
[0x08000070]> help a[?]
|ERROR| Invalid command 'help a[?]' (0x68)
[0x08000070]> a
|Usage: a[abdefFghoprxstc] [...]
| aa[?]              analyze all (fcns + bbs) (aa0 to avoid sub renaming)
| ab [hexpairs]      analyze bytes
| abb [len]          analyze N basic blocks in [len] (section.size by default)
| ac [cycles]        analyze which op could be executed in [cycles]
| ad[?]              analyze data trampoline (wip)
| ad [from] [to]     analyze data pointers to (from-to)
| ae[?] [expr]       analyze opcode eval expression (see ao)
| af[?]              analyze Functions
| aF                 same as above, but using anal.depth=1
| ag[?] [options]    output Graphviz code
| ah[?]              analysis hints (force opcode size, ...)
| ai [addr]          address information (show perms, stack, heap, ...)
| an [name] [@addr]  show/rename/create whatever flag/function is used at addr
| ao[?] [len]        analyze Opcodes (or emulate it)
| aO[?] [len]        Analyze N instructions in M bytes
| ap                 find prelude for current offset
| ar[?]              like 'dr' but for the esil vm. (registers)
| as[?] [num]        analyze syscall using dbg.reg
| av[?] [.]          show vtables
| ax[?]              manage refs/xrefs (see also afx?)
[0x08000070]> af
[0x08000070]> aa
[x] Analyze all flags starting with sym. and entry0 (aa)
[0x08000070]> ag
|ERROR| Usage: ag [addr]
[0x08000070]> av
No virtual tables found
[0x08000070]> ai
exec
read
flag
func
reg
[0x08000070]> av
No virtual tables found
[0x08000070]> ax
                  sym.led_drv_write+1082 0x80004ba ->  code jmp -> 0x80004f3 sym.led_drv_write+1139
                      reloc.gpbcon_32+16 0x8000e30 ->  data mem -> 0x8000450 sym.led_drv_write+976
                 section_end..comment+20 0x8000e68 ->  data mem -> 0x8000662 sym.led_drv_write+1506
                         reloc.gpbcon_32 0x8000e20 ->  data mem -> 0x8000323 sym.led_drv_write+675
                      reloc.gpbcon_32+16 0x8000e30 ->  data mem -> 0x8000462 sym.led_drv_write+994
                      reloc.gpbcon_32+40 0x8000e48 ->  data mem -> 0x80008a0 reloc.init_module_64+352
                   sym.led_drv_write+617 0x80002e9 ->  code jmp -> 0x80006ba sym.led_drv_write+1594
                  section_end..comment+4 0x8000e58 ->  data mem -> 0x80008cc reloc.init_module_64+396
                      reloc.gpbcon_32+48 0x8000e50 ->  data mem -> 0x80008b6 reloc.init_module_64+374
                  sym.led_drv_write+1264 0x8000570 ->  code jmp -> 0x80005a9 sym.led_drv_write+1321
                reloc.init_module_64+151 0x80007d7 ->  code jmp -> 0x80007cc reloc.init_module_64+140
                   sym.led_drv_write+692 0x8000334 ->  code jmp -> 0x80004ce sym.led_drv_write+1102
   section_end..gnu.linkonce.this_module 0x8000e00 ->  data mem -> 0x80007bf reloc.init_module_64+127
                    obj.leddrv_class_dev 0x8000e80 ->  data mem -> 0x80009ac reloc.cleanup_module_48+124
                           reloc.major_4 0x8000e04 ->  data mem -> 0x80007ad reloc.init_module_64+109
                      reloc.gpbcon_32+16 0x8000e30 ->  data mem -> 0x80003e2 sym.led_drv_write+866
                      reloc.gpbcon_32+32 0x8000e40 ->  data mem -> 0x80004ac sym.led_drv_write+1068
                 section_end..comment+36 0x8000e78 ->  data mem -> 0x80006ac sym.led_drv_write+1580
                  section_end..comment+4 0x8000e58 ->  data mem -> 0x80005ce sym.led_drv_write+1358
                      reloc.gpbcon_32+16 0x8000e30 ->  data mem -> 0x80003d0 sym.led_drv_write+848
                           reloc.major_4 0x8000e04 ->  data mem -> 0x80007d7 reloc.init_module_64+151
                  section_end..comment+4 0x8000e58 ->  data mem -> 0x80005bd sym.led_drv_write+1341
                      reloc.gpbcon_32+32 0x8000e40 ->  data mem -> 0x80004bd sym.led_drv_write+1085
                      reloc.gpbcon_32+16 0x8000e30 ->  data mem -> 0x80003f3 sym.led_drv_write+883
                       reloc.gpbcon_32+8 0x8000e28 ->  data mem -> 0x80003a8 sym.led_drv_write+808
                   sym.led_drv_write+692 0x8000334 ->  code jmp -> 0x8000444 sym.led_drv_write+964
                 section_end..comment+36 0x8000e78 ->  data mem -> 0x80002ec sym.led_drv_write+620
                 section_end..comment+28 0x8000e70 ->  data mem -> 0x80006bf sym.led_drv_write+1599
                       reloc.gpbcon_32+8 0x8000e28 ->  data mem -> 0x80003ba sym.led_drv_write+826
   section_end..gnu.linkonce.this_module 0x8000e00 ->  data mem -> 0x800097b reloc.cleanup_module_48+75
                  sym.led_drv_write+1173 0x8000515 ->  code jmp -> 0x800054e sym.led_drv_write+1230
                      reloc.gpbcon_32+32 0x8000e40 ->  data mem -> 0x80004e5 sym.led_drv_write+1125
                 section_end..comment+28 0x8000e70 ->  data mem -> 0x80006e2 sym.led_drv_write+1634
   section_end..gnu.linkonce.this_module 0x8000e00 ->  data mem -> 0x8000953 reloc.cleanup_module_48+35
                      reloc.gpbcon_32+24 0x8000e38 ->  data mem -> 0x8000874 reloc.init_module_64+308
                   sym.led_drv_write+672 0x8000320 ->  code jmp -> 0x8000360 sym.led_drv_write+736
       section..gnu.linkonce.this_module 0x8000be0 ->  data mem -> 0x8000798 reloc.init_module_64+88
                  section_end..comment+4 0x8000e58 ->  data mem -> 0x80005ab sym.led_drv_write+1323
   section_end..gnu.linkonce.this_module 0x8000e00 ->  data mem -> 0x800096f reloc.cleanup_module_48+63
                      reloc.gpbcon_32+40 0x8000e48 ->  data mem -> 0x80004f5 sym.led_drv_write+1141
                  section_end..comment+4 0x8000e58 ->  data mem -> 0x80005f6 sym.led_drv_write+1398
                           reloc.major_4 0x8000e04 ->  data mem -> 0x8000948 reloc.cleanup_module_48+24
                      reloc.gpbcon_32+48 0x8000e50 ->  data mem -> 0x800059b sym.led_drv_write+1307
                 section_end..comment+36 0x8000e78 ->  data mem -> 0x800091a reloc.init_module_64+474
                  section_end..comment+4 0x8000e58 ->  data mem -> 0x80005e4 sym.led_drv_write+1380
                   sym.led_drv_write+692 0x8000334 ->  code jmp -> 0x8000404 sym.led_drv_write+900
                 section_end..comment+12 0x8000e60 ->  data mem -> 0x800068a sym.led_drv_write+1546
                 section_end..comment+28 0x8000e70 ->  data mem -> 0x800090e reloc.init_module_64+462
                  sym.led_drv_write+1503 0x800065f ->  code jmp -> 0x800073a sym.led_drv_write+1722
                 section_end..comment+28 0x8000e70 ->  data mem -> 0x80006d1 sym.led_drv_write+1617
                      reloc.gpbcon_32+32 0x8000e40 ->  data mem -> 0x80004d3 sym.led_drv_write+1107
                   sym.led_drv_write+692 0x8000334 ->  code jmp -> 0x8000673 sym.led_drv_write+1523
                   sym.led_drv_write+880 0x80003f0 ->  code jmp -> 0x8000470 sym.led_drv_write+1008
                 section_end..comment+36 0x8000e78 ->  data mem -> 0x800069a sym.led_drv_write+1562
                      reloc.gpbcon_32+16 0x8000e30 ->  data mem -> 0x800085e reloc.init_module_64+286
                         reloc.gpbcon_32 0x8000e20 ->  data mem -> 0x8000832 reloc.init_module_64+242
                   sym.led_drv_write+692 0x8000334 ->  code jmp -> 0x8000529 sym.led_drv_write+1193
                 section_end..comment+28 0x8000e70 ->  data mem -> 0x80006f8 sym.led_drv_write+1656
                       reloc.gpbcon_32+8 0x8000e28 ->  data mem -> 0x8000848 reloc.init_module_64+264
                 section_end..comment+36 0x8000e78 ->  data mem -> 0x80002db sym.led_drv_write+603
                      reloc.gpbcon_32+48 0x8000e50 ->  data mem -> 0x8000589 sym.led_drv_write+1289
                 section_end..comment+36 0x8000e78 ->  data mem -> 0x80002c9 sym.led_drv_write+585
                 section_end..comment+20 0x8000e68 ->  data mem -> 0x800071a sym.led_drv_write+1690
                  sym.led_drv_write+1355 0x80005cb ->  code jmp -> 0x8000604 sym.led_drv_write+1412
   section_end..gnu.linkonce.this_module 0x8000e00 ->  data mem -> 0x8000811 reloc.init_module_64+209
                      reloc.gpbcon_32+24 0x8000e38 ->  data mem -> 0x800048a sym.led_drv_write+1034
                       reloc.gpbcon_32+8 0x8000e28 ->  data mem -> 0x800038b sym.led_drv_write+779
                 section_end..comment+28 0x8000e70 ->  data mem -> 0x800070a sym.led_drv_write+1674
                  sym.led_drv_write+1631 0x80006df ->  code jmp -> 0x8000718 sym.led_drv_write+1688
                      reloc.gpbcon_32+32 0x8000e40 ->  data mem -> 0x800049a sym.led_drv_write+1050
                   sym.led_drv_write+692 0x8000334 ->  code jmp -> 0x800063a sym.led_drv_write+1466
   section_end..gnu.linkonce.this_module 0x8000e00 ->  data mem -> 0x8000803 reloc.init_module_64+195
                 section_end..comment+20 0x8000e68 ->  data mem -> 0x800063f sym.led_drv_write+1471
                         reloc.gpbcon_32 0x8000e20 ->  data mem -> 0x800075b reloc.init_module_64+27
                 section_end..comment+12 0x8000e60 ->  data mem -> 0x8000618 sym.led_drv_write+1432
                   sym.led_drv_write+692 0x8000334 ->  code jmp -> 0x8000584 sym.led_drv_write+1284
                   sym.led_drv_write+776 0x8000388 ->  code jmp -> 0x80003c8 sym.led_drv_write+840
                         reloc.gpbcon_32 0x8000e20 ->  data mem -> 0x800098a reloc.cleanup_module_48+90
                      reloc.gpbcon_32+40 0x8000e48 ->  data mem -> 0x8000518 sym.led_drv_write+1176
                      reloc.gpbcon_32+24 0x8000e38 ->  data mem -> 0x8000433 sym.led_drv_write+947
                         reloc.gpbcon_32 0x8000e20 ->  data mem -> 0x8000352 sym.led_drv_write+722
                 section_end..comment+20 0x8000e68 ->  data mem -> 0x800072c sym.led_drv_write+1708
                      reloc.gpbcon_32+40 0x8000e48 ->  data mem -> 0x800052e sym.led_drv_write+1198
                   sym.led_drv_write+944 0x8000430 ->  code jmp -> 0x8000498 sym.led_drv_write+1048
                         reloc.gpbcon_32 0x8000e20 ->  data mem -> 0x8000340 sym.led_drv_write+704
                      reloc.gpbcon_32+40 0x8000e48 ->  data mem -> 0x8000507 sym.led_drv_write+1159
                 section_end..comment+12 0x8000e60 ->  data mem -> 0x8000606 sym.led_drv_write+1414
                   sym.led_drv_write+692 0x8000334 ->  code jmp -> 0x80006f3 sym.led_drv_write+1651
                   sym.led_drv_write+692 0x8000334 ->  code jmp -> 0x80005df sym.led_drv_write+1375
                      reloc.gpbcon_32+24 0x8000e38 ->  data mem -> 0x8000410 sym.led_drv_write+912
                 section_end..comment+20 0x8000e68 ->  data mem -> 0x8000651 sym.led_drv_write+1489
                      reloc.gpbcon_32+48 0x8000e50 ->  data mem -> 0x8000573 sym.led_drv_write+1267
                      reloc.gpbcon_32+32 0x8000e40 ->  data mem -> 0x800088a reloc.init_module_64+330
                 section_end..comment+12 0x8000e60 ->  data mem -> 0x8000629 sym.led_drv_write+1449
                       reloc.gpbcon_32+8 0x8000e28 ->  data mem -> 0x8000368 sym.led_drv_write+744
                      reloc.gpbcon_32+24 0x8000e38 ->  data mem -> 0x8000422 sym.led_drv_write+930
                      reloc.gpbcon_32+48 0x8000e50 ->  data mem -> 0x8000562 sym.led_drv_write+1250
                 section_end..comment+12 0x8000e60 ->  data mem -> 0x80008e2 reloc.init_module_64+418
                       reloc.gpbcon_32+8 0x8000e28 ->  data mem -> 0x800037a sym.led_drv_write+762
                   sym.led_drv_write+692 0x8000334 ->  code jmp -> 0x80002fd sym.led_drv_write+637
                      reloc.gpbcon_32+24 0x8000e38 ->  data mem -> 0x8000478 sym.led_drv_write+1016
                 section_end..comment+12 0x8000e60 ->  data mem -> 0x8000678 sym.led_drv_write+1528
                      reloc.gpbcon_32+48 0x8000e50 ->  data mem -> 0x8000550 sym.led_drv_write+1232
                         reloc.gpbcon_32 0x8000e20 ->  data mem -> 0x8000312 sym.led_drv_write+658
                 section_end..comment+20 0x8000e68 ->  data mem -> 0x80008f8 reloc.init_module_64+440
                  sym.led_drv_write+1446 0x8000626 ->  code jmp -> 0x8000698 sym.led_drv_write+1560
                         reloc.gpbcon_32 0x8000e20 ->  data mem -> 0x8000300 sym.led_drv_write+640
                      reloc.gpbcon_32+40 0x8000e48 ->  data mem -> 0x8000540 sym.led_drv_write+1216
[0x08000070]> ?
Usage: [.][times][cmd][~grep][@[@iter]addr!size][|>pipe] ; ...
Append '?' to any char command to get detailed help
Prefix with number to repeat command N times (f.ex: 3x)
|%var =valueAlias for 'env' command
| *[?] off[=[0x]value]    Pointer read/write data/values (see ?v, wx, wv)
| (macro arg0 arg1)       Manage scripting macros
| .[?] [-|(m)|f|!sh|cmd]  Define macro or load r2, cparse or rlang file
| =[?] [cmd]              Send/Listen for Remote Commands (rap://, http://, <fd>)
| /[?]                    Search for bytes, regexps, patterns, ..
| ![?] [cmd]              Run given command as in system(3)
| #[?] !lang [..]         Hashbang to run an rlang script
| a[?]                    Analysis commands
| b[?]                    Display or change the block size
| c[?] [arg]              Compare block with given data
| C[?]                    Code metadata (comments, format, hints, ..)
| d[?]                    Debugger commands
| e[?] [a[=b]]            List/get/set config evaluable vars
| f[?] [name][sz][at]     Add flag at current address
| g[?] [arg]              Generate shellcodes with r_egg
| i[?] [file]             Get info about opened file from r_bin
| k[?] [sdb-query]        Run sdb-query. see k? for help, 'k *', 'k **' ...
| L[?] [-] [plugin]       list, unload load r2 plugins
| m[?]                    Mountpoints commands
| o[?] [file] ([offset])  Open file at optional address
| p[?] [len]              Print current block with format and length
| P[?]                    Project management utilities
| q[?] [ret]              Quit program with a return value
| r[?] [len]              Resize file
| s[?] [addr]             Seek to address (also for '0x', '0x1' == 's 0x1')
| S[?]                    Io section manipulation information
| t[?]                    Types, noreturn, signatures, C parser and more
| T[?] [-] [num|msg]      Text log utility
| u[?]                    uname/undo seek/write
| V                       Visual mode (V! = panels, VV = fcngraph, VVV = callgraph)
| w[?] [str]              Multiple write operations
| x[?] [len]              Alias for 'px' (print hexadecimal)
| y[?] [len] [[[@]addr    Yank/paste bytes from/to memory
| z[?]                    Zignatures management
| ?[??][expr]             Help or evaluate math expression
| ?$?                     Show available '$' variables and aliases
| ?@?                     Misc help for '@' (seek), '~' (grep) (see ~??)
[0x08000070]> a
|Usage: a[abdefFghoprxstc] [...]
| aa[?]              analyze all (fcns + bbs) (aa0 to avoid sub renaming)
| ab [hexpairs]      analyze bytes
| abb [len]          analyze N basic blocks in [len] (section.size by default)
| ac [cycles]        analyze which op could be executed in [cycles]
| ad[?]              analyze data trampoline (wip)
| ad [from] [to]     analyze data pointers to (from-to)
| ae[?] [expr]       analyze opcode eval expression (see ao)
| af[?]              analyze Functions
| aF                 same as above, but using anal.depth=1
| ag[?] [options]    output Graphviz code
| ah[?]              analysis hints (force opcode size, ...)
| ai [addr]          address information (show perms, stack, heap, ...)
| an [name] [@addr]  show/rename/create whatever flag/function is used at addr
| ao[?] [len]        analyze Opcodes (or emulate it)
| aO[?] [len]        Analyze N instructions in M bytes
| ap                 find prelude for current offset
| ar[?]              like 'dr' but for the esil vm. (registers)
| as[?] [num]        analyze syscall using dbg.reg
| av[?] [.]          show vtables
| ax[?]              manage refs/xrefs (see also afx?)
[0x08000070]> ae
|Usage: ae[idesr?] [arg]ESIL code emulation
| ae [expr]                  evaluate ESIL expression
| ae?                        show this help
| ae??                       show ESIL help
| ae[aA][f] [count]          analyse esil accesses (regs, mem..)
| aec[?]                     continue until ^C
| aecs [sn]                  continue until syscall number
| aecu [addr]                continue until address
| aecue [esil]               continue until esil expression match
| aef [addr]                 emulate function
| aei                        initialize ESIL VM state (aei- to deinitialize)
| aeim [addr] [size] [name]  initialize ESIL VM stack (aeim- remove)
| aeip                       initialize ESIL program counter to curseek
| aek [query]                perform sdb query on ESIL.info
| aek-                       resets the ESIL.info sdb instance
| aep[?] [addr]              manage esil pin hooks
| aepc [addr]                change esil PC to this address
| aer [..]                   handle ESIL registers like 'ar' or 'dr' does
| aets[?]                    ESIL Trace session
| aes                        perform emulated debugger step
| aesp [X] [N]               evaluate N instr from offset X
| aesb                       step back
| aeso                       step over
| aesu [addr]                step until given address
| aesue [esil]               step until esil expression match
| aetr[esil]                 Convert an ESIL Expression to REIL
| aex [hex]                  evaluate opcode expression
[0x08000070]> ax
                  sym.led_drv_write+1082 0x80004ba ->  code jmp -> 0x80004f3 sym.led_drv_write+1139
                      reloc.gpbcon_32+16 0x8000e30 ->  data mem -> 0x8000450 sym.led_drv_write+976
                 section_end..comment+20 0x8000e68 ->  data mem -> 0x8000662 sym.led_drv_write+1506
                         reloc.gpbcon_32 0x8000e20 ->  data mem -> 0x8000323 sym.led_drv_write+675
                      reloc.gpbcon_32+16 0x8000e30 ->  data mem -> 0x8000462 sym.led_drv_write+994
                      reloc.gpbcon_32+40 0x8000e48 ->  data mem -> 0x80008a0 reloc.init_module_64+352
                   sym.led_drv_write+617 0x80002e9 ->  code jmp -> 0x80006ba sym.led_drv_write+1594
                  section_end..comment+4 0x8000e58 ->  data mem -> 0x80008cc reloc.init_module_64+396
                      reloc.gpbcon_32+48 0x8000e50 ->  data mem -> 0x80008b6 reloc.init_module_64+374
                  sym.led_drv_write+1264 0x8000570 ->  code jmp -> 0x80005a9 sym.led_drv_write+1321
                reloc.init_module_64+151 0x80007d7 ->  code jmp -> 0x80007cc reloc.init_module_64+140
                   sym.led_drv_write+692 0x8000334 ->  code jmp -> 0x80004ce sym.led_drv_write+1102
   section_end..gnu.linkonce.this_module 0x8000e00 ->  data mem -> 0x80007bf reloc.init_module_64+127
                    obj.leddrv_class_dev 0x8000e80 ->  data mem -> 0x80009ac reloc.cleanup_module_48+124
                           reloc.major_4 0x8000e04 ->  data mem -> 0x80007ad reloc.init_module_64+109
                      reloc.gpbcon_32+16 0x8000e30 ->  data mem -> 0x80003e2 sym.led_drv_write+866
                      reloc.gpbcon_32+32 0x8000e40 ->  data mem -> 0x80004ac sym.led_drv_write+1068
                 section_end..comment+36 0x8000e78 ->  data mem -> 0x80006ac sym.led_drv_write+1580
                  section_end..comment+4 0x8000e58 ->  data mem -> 0x80005ce sym.led_drv_write+1358
                      reloc.gpbcon_32+16 0x8000e30 ->  data mem -> 0x80003d0 sym.led_drv_write+848
                           reloc.major_4 0x8000e04 ->  data mem -> 0x80007d7 reloc.init_module_64+151
                  section_end..comment+4 0x8000e58 ->  data mem -> 0x80005bd sym.led_drv_write+1341
                      reloc.gpbcon_32+32 0x8000e40 ->  data mem -> 0x80004bd sym.led_drv_write+1085
                      reloc.gpbcon_32+16 0x8000e30 ->  data mem -> 0x80003f3 sym.led_drv_write+883
                       reloc.gpbcon_32+8 0x8000e28 ->  data mem -> 0x80003a8 sym.led_drv_write+808
                   sym.led_drv_write+692 0x8000334 ->  code jmp -> 0x8000444 sym.led_drv_write+964
                 section_end..comment+36 0x8000e78 ->  data mem -> 0x80002ec sym.led_drv_write+620
                 section_end..comment+28 0x8000e70 ->  data mem -> 0x80006bf sym.led_drv_write+1599
                       reloc.gpbcon_32+8 0x8000e28 ->  data mem -> 0x80003ba sym.led_drv_write+826
   section_end..gnu.linkonce.this_module 0x8000e00 ->  data mem -> 0x800097b reloc.cleanup_module_48+75
                  sym.led_drv_write+1173 0x8000515 ->  code jmp -> 0x800054e sym.led_drv_write+1230
                      reloc.gpbcon_32+32 0x8000e40 ->  data mem -> 0x80004e5 sym.led_drv_write+1125
                 section_end..comment+28 0x8000e70 ->  data mem -> 0x80006e2 sym.led_drv_write+1634
   section_end..gnu.linkonce.this_module 0x8000e00 ->  data mem -> 0x8000953 reloc.cleanup_module_48+35
                      reloc.gpbcon_32+24 0x8000e38 ->  data mem -> 0x8000874 reloc.init_module_64+308
                   sym.led_drv_write+672 0x8000320 ->  code jmp -> 0x8000360 sym.led_drv_write+736
       section..gnu.linkonce.this_module 0x8000be0 ->  data mem -> 0x8000798 reloc.init_module_64+88
                  section_end..comment+4 0x8000e58 ->  data mem -> 0x80005ab sym.led_drv_write+1323
   section_end..gnu.linkonce.this_module 0x8000e00 ->  data mem -> 0x800096f reloc.cleanup_module_48+63
                      reloc.gpbcon_32+40 0x8000e48 ->  data mem -> 0x80004f5 sym.led_drv_write+1141
                  section_end..comment+4 0x8000e58 ->  data mem -> 0x80005f6 sym.led_drv_write+1398
                           reloc.major_4 0x8000e04 ->  data mem -> 0x8000948 reloc.cleanup_module_48+24
                      reloc.gpbcon_32+48 0x8000e50 ->  data mem -> 0x800059b sym.led_drv_write+1307
                 section_end..comment+36 0x8000e78 ->  data mem -> 0x800091a reloc.init_module_64+474
                  section_end..comment+4 0x8000e58 ->  data mem -> 0x80005e4 sym.led_drv_write+1380
                   sym.led_drv_write+692 0x8000334 ->  code jmp -> 0x8000404 sym.led_drv_write+900
                 section_end..comment+12 0x8000e60 ->  data mem -> 0x800068a sym.led_drv_write+1546
                 section_end..comment+28 0x8000e70 ->  data mem -> 0x800090e reloc.init_module_64+462
                  sym.led_drv_write+1503 0x800065f ->  code jmp -> 0x800073a sym.led_drv_write+1722
                 section_end..comment+28 0x8000e70 ->  data mem -> 0x80006d1 sym.led_drv_write+1617
                      reloc.gpbcon_32+32 0x8000e40 ->  data mem -> 0x80004d3 sym.led_drv_write+1107
                   sym.led_drv_write+692 0x8000334 ->  code jmp -> 0x8000673 sym.led_drv_write+1523
                   sym.led_drv_write+880 0x80003f0 ->  code jmp -> 0x8000470 sym.led_drv_write+1008
                 section_end..comment+36 0x8000e78 ->  data mem -> 0x800069a sym.led_drv_write+1562
                      reloc.gpbcon_32+16 0x8000e30 ->  data mem -> 0x800085e reloc.init_module_64+286
                         reloc.gpbcon_32 0x8000e20 ->  data mem -> 0x8000832 reloc.init_module_64+242
                   sym.led_drv_write+692 0x8000334 ->  code jmp -> 0x8000529 sym.led_drv_write+1193
                 section_end..comment+28 0x8000e70 ->  data mem -> 0x80006f8 sym.led_drv_write+1656
                       reloc.gpbcon_32+8 0x8000e28 ->  data mem -> 0x8000848 reloc.init_module_64+264
                 section_end..comment+36 0x8000e78 ->  data mem -> 0x80002db sym.led_drv_write+603
                      reloc.gpbcon_32+48 0x8000e50 ->  data mem -> 0x8000589 sym.led_drv_write+1289
                 section_end..comment+36 0x8000e78 ->  data mem -> 0x80002c9 sym.led_drv_write+585
                 section_end..comment+20 0x8000e68 ->  data mem -> 0x800071a sym.led_drv_write+1690
                  sym.led_drv_write+1355 0x80005cb ->  code jmp -> 0x8000604 sym.led_drv_write+1412
   section_end..gnu.linkonce.this_module 0x8000e00 ->  data mem -> 0x8000811 reloc.init_module_64+209
                      reloc.gpbcon_32+24 0x8000e38 ->  data mem -> 0x800048a sym.led_drv_write+1034
                       reloc.gpbcon_32+8 0x8000e28 ->  data mem -> 0x800038b sym.led_drv_write+779
                 section_end..comment+28 0x8000e70 ->  data mem -> 0x800070a sym.led_drv_write+1674
                  sym.led_drv_write+1631 0x80006df ->  code jmp -> 0x8000718 sym.led_drv_write+1688
                      reloc.gpbcon_32+32 0x8000e40 ->  data mem -> 0x800049a sym.led_drv_write+1050
                   sym.led_drv_write+692 0x8000334 ->  code jmp -> 0x800063a sym.led_drv_write+1466
   section_end..gnu.linkonce.this_module 0x8000e00 ->  data mem -> 0x8000803 reloc.init_module_64+195
                 section_end..comment+20 0x8000e68 ->  data mem -> 0x800063f sym.led_drv_write+1471
                         reloc.gpbcon_32 0x8000e20 ->  data mem -> 0x800075b reloc.init_module_64+27
                 section_end..comment+12 0x8000e60 ->  data mem -> 0x8000618 sym.led_drv_write+1432
                   sym.led_drv_write+692 0x8000334 ->  code jmp -> 0x8000584 sym.led_drv_write+1284
                   sym.led_drv_write+776 0x8000388 ->  code jmp -> 0x80003c8 sym.led_drv_write+840
                         reloc.gpbcon_32 0x8000e20 ->  data mem -> 0x800098a reloc.cleanup_module_48+90
                      reloc.gpbcon_32+40 0x8000e48 ->  data mem -> 0x8000518 sym.led_drv_write+1176
                      reloc.gpbcon_32+24 0x8000e38 ->  data mem -> 0x8000433 sym.led_drv_write+947
                         reloc.gpbcon_32 0x8000e20 ->  data mem -> 0x8000352 sym.led_drv_write+722
                 section_end..comment+20 0x8000e68 ->  data mem -> 0x800072c sym.led_drv_write+1708
                      reloc.gpbcon_32+40 0x8000e48 ->  data mem -> 0x800052e sym.led_drv_write+1198
                   sym.led_drv_write+944 0x8000430 ->  code jmp -> 0x8000498 sym.led_drv_write+1048
                         reloc.gpbcon_32 0x8000e20 ->  data mem -> 0x8000340 sym.led_drv_write+704
                      reloc.gpbcon_32+40 0x8000e48 ->  data mem -> 0x8000507 sym.led_drv_write+1159
                 section_end..comment+12 0x8000e60 ->  data mem -> 0x8000606 sym.led_drv_write+1414
                   sym.led_drv_write+692 0x8000334 ->  code jmp -> 0x80006f3 sym.led_drv_write+1651
                   sym.led_drv_write+692 0x8000334 ->  code jmp -> 0x80005df sym.led_drv_write+1375
                      reloc.gpbcon_32+24 0x8000e38 ->  data mem -> 0x8000410 sym.led_drv_write+912
                 section_end..comment+20 0x8000e68 ->  data mem -> 0x8000651 sym.led_drv_write+1489
                      reloc.gpbcon_32+48 0x8000e50 ->  data mem -> 0x8000573 sym.led_drv_write+1267
                      reloc.gpbcon_32+32 0x8000e40 ->  data mem -> 0x800088a reloc.init_module_64+330
                 section_end..comment+12 0x8000e60 ->  data mem -> 0x8000629 sym.led_drv_write+1449
                       reloc.gpbcon_32+8 0x8000e28 ->  data mem -> 0x8000368 sym.led_drv_write+744
                      reloc.gpbcon_32+24 0x8000e38 ->  data mem -> 0x8000422 sym.led_drv_write+930
                      reloc.gpbcon_32+48 0x8000e50 ->  data mem -> 0x8000562 sym.led_drv_write+1250
                 section_end..comment+12 0x8000e60 ->  data mem -> 0x80008e2 reloc.init_module_64+418
                       reloc.gpbcon_32+8 0x8000e28 ->  data mem -> 0x800037a sym.led_drv_write+762
                   sym.led_drv_write+692 0x8000334 ->  code jmp -> 0x80002fd sym.led_drv_write+637
                      reloc.gpbcon_32+24 0x8000e38 ->  data mem -> 0x8000478 sym.led_drv_write+1016
                 section_end..comment+12 0x8000e60 ->  data mem -> 0x8000678 sym.led_drv_write+1528
                      reloc.gpbcon_32+48 0x8000e50 ->  data mem -> 0x8000550 sym.led_drv_write+1232
                         reloc.gpbcon_32 0x8000e20 ->  data mem -> 0x8000312 sym.led_drv_write+658
                 section_end..comment+20 0x8000e68 ->  data mem -> 0x80008f8 reloc.init_module_64+440
                  sym.led_drv_write+1446 0x8000626 ->  code jmp -> 0x8000698 sym.led_drv_write+1560
                         reloc.gpbcon_32 0x8000e20 ->  data mem -> 0x8000300 sym.led_drv_write+640
                      reloc.gpbcon_32+40 0x8000e48 ->  data mem -> 0x8000540 sym.led_drv_write+1216
[0x08000070]> ?
Usage: [.][times][cmd][~grep][@[@iter]addr!size][|>pipe] ; ...
Append '?' to any char command to get detailed help
Prefix with number to repeat command N times (f.ex: 3x)
|%var =valueAlias for 'env' command
| *[?] off[=[0x]value]    Pointer read/write data/values (see ?v, wx, wv)
| (macro arg0 arg1)       Manage scripting macros
| .[?] [-|(m)|f|!sh|cmd]  Define macro or load r2, cparse or rlang file
| =[?] [cmd]              Send/Listen for Remote Commands (rap://, http://, <fd>)
| /[?]                    Search for bytes, regexps, patterns, ..
| ![?] [cmd]              Run given command as in system(3)
| #[?] !lang [..]         Hashbang to run an rlang script
| a[?]                    Analysis commands
| b[?]                    Display or change the block size
| c[?] [arg]              Compare block with given data
| C[?]                    Code metadata (comments, format, hints, ..)
| d[?]                    Debugger commands
| e[?] [a[=b]]            List/get/set config evaluable vars
| f[?] [name][sz][at]     Add flag at current address
| g[?] [arg]              Generate shellcodes with r_egg
| i[?] [file]             Get info about opened file from r_bin
| k[?] [sdb-query]        Run sdb-query. see k? for help, 'k *', 'k **' ...
| L[?] [-] [plugin]       list, unload load r2 plugins
| m[?]                    Mountpoints commands
| o[?] [file] ([offset])  Open file at optional address
| p[?] [len]              Print current block with format and length
| P[?]                    Project management utilities
| q[?] [ret]              Quit program with a return value
| r[?] [len]              Resize file
| s[?] [addr]             Seek to address (also for '0x', '0x1' == 's 0x1')
| S[?]                    Io section manipulation information
| t[?]                    Types, noreturn, signatures, C parser and more
| T[?] [-] [num|msg]      Text log utility
| u[?]                    uname/undo seek/write
| V                       Visual mode (V! = panels, VV = fcngraph, VVV = callgraph)
| w[?] [str]              Multiple write operations
| x[?] [len]              Alias for 'px' (print hexadecimal)
| y[?] [len] [[[@]addr    Yank/paste bytes from/to memory
| z[?]                    Zignatures management
| ?[??][expr]             Help or evaluate math expression
| ?$?                     Show available '$' variables and aliases
| ?@?                     Misc help for '@' (seek), '~' (grep) (see ~??)
[0x08000070]> C
0x08000000 CCu "[16] m-rw- section size 64 named ehdr"
0x08000040 CCu "[01] m-r-- section size 36 named .note.gnu.build_id"
0x08000070 CCu "[02] m-r-x section size 2381 named .text"
0x080009bd CCu "[04] m-r-- section size 214 named .rodata.str1.1"
0x08000a93 CCu "[05] m-r-- section size 52 named .modinfo"
0x08000ae0 CCu "[06] m-rw- section size 240 named .data"
0x08000be0 CCu "[08] m-rw- section size 544 named .gnu.linkonce.this_module"
0x08000e00 CCu "[11] ----- section size 84 named .comment"
0x08000e54 CCu "[13] ----- section size 153 named .shstrtab"
0x080012f0 CCu "[03] ----- section size 3600 named .rela.text"
0x08002100 CCu "[07] ----- section size 72 named .rela.data"
0x08002148 CCu "[09] ----- section size 48 named .rela.gnu.linkonce.this_module"
0x08002178 CCu "[14] ----- section size 960 named .symtab"
0x08002538 CCu "[15] ----- section size 399 named .strtab"
0x08000740 data Cd 8
0x08000930 data Cd 8
0x08000be0 data Cd 8
0x08000e00 data Cd 8
0x08000e04 data Cd 8
0x08000e20 data Cd 8
0x080026c7 data Cd 8
0x080026cb data Cd 8
0x080026cf data Cd 8
0x080026d3 data Cd 8
0x080026d7 data Cd 8
0x080026db data Cd 8
0x080026df data Cd 8
0x080026e3 data Cd 8
0x080026e7 data Cd 8
0x080026eb data Cd 8
0x080026ef data Cd 8
0x080026f3 data Cd 8
0x080026f7 data Cd 8
0x080026fb data Cd 8
0x080026ff data Cd 8
0x08002703 data Cd 8
0x08002707 data Cd 8
0x0800270b data Cd 8
0x0800270f data Cd 8
0x08002713 data Cd 8
0x08002717 data Cd 8
0x0800271b data Cd 8
0x0800271f data Cd 8
0x08002723 data Cd 8
0x08002727 data Cd 8
0x0800272b data Cd 8
0x0800272f data Cd 8
0x08002733 data Cd 8
0x08002737 data Cd 8
0x0800273b data Cd 8
0x0800273f data Cd 8
0x08002743 data Cd 8
0x08002747 data Cd 8
0x0800274b data Cd 8
0x0800274f data Cd 8
0x08002753 data Cd 8
0x08002757 data Cd 8
0x0800275b data Cd 8
0x0800275f data Cd 8
0x08002763 data Cd 8
0x08002767 data Cd 8
0x0800276b data Cd 8
0x0800276f data Cd 8
0x08002773 data Cd 8
0x08002777 data Cd 8
0x0800277b data Cd 8
0x0800277f data Cd 8
0x08002783 data Cd 8
0x08002787 data Cd 8
0x0800278b data Cd 8
0x0800278f data Cd 8
0x08002793 data Cd 8
0x08002797 data Cd 8
0x0800279b data Cd 8
0x0800279f data Cd 8
0x080027a3 data Cd 8
0x080027a7 data Cd 8
0x080027ab data Cd 8
0x080027af data Cd 8
0x080027b3 data Cd 8
0x080027b7 data Cd 8
0x080027bb data Cd 8
0x080027bf data Cd 8
0x080027c3 data Cd 8
0x080027c7 data Cd 8
0x080027cb data Cd 8
0x080027cf data Cd 8
0x080009bd ascii[7] "led1on"
0x080009c4 ascii[8] "led1off"
0x080009cc ascii[7] "led2on"
0x080009d3 ascii[8] "led2off"
0x080009db ascii[7] "led3on"
0x080009e2 ascii[8] "led3off"
0x080009ea ascii[7] "led4on"
0x080009f1 ascii[8] "led4off"
0x080009f9 ascii[7] "led5on"
0x08000a00 ascii[8] "led5off"
0x08000a08 ascii[7] "led6on"
0x08000a0f ascii[8] "led6off"
0x08000a17 ascii[7] "led7on"
0x08000a1e ascii[8] "led7off"
0x08000a26 ascii[7] "led8on"
0x08000a2d ascii[8] "led8off"
0x08000a35 ascii[7] "led9on"
0x08000a3c ascii[8] "led9off"
0x08000a44 ascii[8] "led10on"
0x08000a4c ascii[9] "led10off"
0x08000a55 ascii[8] "led11on"
0x08000a5d ascii[9] "led11off"
0x08000a66 ascii[8] "led12on"
0x08000a6e ascii[9] "led12off"
0x08000a77 ascii[8] "led_drv"
0x08000a7f ascii[11] "leddrv_drv"
0x08000a8a ascii[9] "leddrv%d"
[0x08000070]> VV
Rendering graph...
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5


                                         .----------------------------------------------.
                                         | [0x8000070] ;[ga]                            |
                                         |   ; [02] m-r-x section size 2381 named .text |
                                         |   ;-- section..text:                         |
                                         |   ;-- rip:                                   |
                                         | (fcn) entry0 8                               |
                                         |   entry0 ();                                 |
                                         | push rbp                                     |
                                         | xor eax, eax                                 |
                                         | mov rbp, rsp                                 |
                                         | pop rbp                                      |
                                         | ret                                          |
                                         `----------------------------------------------'
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5

                                         .----------------------------------------------.
                                         | [0x8000070] ;[ga]                            |
                                         |   ; [02] m-r-x section size 2381 named .text |
                                         |   ;-- section..text:                         |
                                         |   ;-- rip:                                   |
                                         | (fcn) entry0 8                               |
                                         |   entry0 ();                                 |
                                         | push rbp                                     |
                                         | xor eax, eax                                 |
                                         | mov rbp, rsp                                 |
                                         | pop rbp                                      |
                                         | ret                                          |
                                         `----------------------------------------------'
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5

                                         .----------------------------------------------.
                                         | [0x8000070] ;[ga]                            |
                                         |   ; [02] m-r-x section size 2381 named .text |
                                         |   ;-- section..text:                         |
                                         |   ;-- rip:                                   |
                                         | (fcn) entry0 8                               |
                                         |   entry0 ();                                 |
                                         | push rbp                                     |
                                         | xor eax, eax                                 |
                                         | mov rbp, rsp                                 |
                                         | pop rbp                                      |
                                         | ret                                          |
                                         `----------------------------------------------'
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5


                                         .----------------------------------------------.
                                         | [0x8000070] ;[ga]                            |
                                         |   ; [02] m-r-x section size 2381 named .text |
                                         |   ;-- section..text:                         |
                                         |   ;-- rip:                                   |
                                         | (fcn) entry0 8                               |
                                         |   entry0 ();                                 |
                                         | push rbp                                     |
                                         | xor eax, eax                                 |
                                         | mov rbp, rsp                                 |
                                         | pop rbp                                      |
                                         | ret                                          |
                                         `----------------------------------------------'
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5


                                         .----------------------------------------------.
                                         | [0x8000070] ;[ga]                            |
                                         |   ; [02] m-r-x section size 2381 named .text |
                                         |   ;-- section..text:                         |
                                         |   ;-- rip:                                   |
                                         | (fcn) entry0 8                               |
                                         |   entry0 ();                                 |
                                         | push rbp                                     |
                                         | xor eax, eax                                 |
                                         | mov rbp, rsp                                 |
                                         | pop rbp                                      |
                                         | ret                                          |
                                         `----------------------------------------------'
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5


                                         .----------------------------------------------.
                                         | [0x8000070] ;[ga]                            |
                                         |   ; [02] m-r-x section size 2381 named .text |
                                         |   ;-- section..text:                         |
                                         |   ;-- rip:                                   |
                                         | (fcn) entry0 8                               |
                                         |   entry0 ();                                 |
                                         | push rbp                                     |
                                         | xor eax, eax                                 |
                                         | mov rbp, rsp                                 |
                                         | pop rbp                                      |
                                         | ret                                          |
                                         `----------------------------------------------'
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5


                                    .----------------------------------------------.
                                    | [0x8000070] ;[ga]                            |
                                    |   ; [02] m-r-x section size 2381 named .text |
                                    |   ;-- section..text:                         |
                                    |   ;-- rip:                                   |
                                    | (fcn) entry0 8                               |
                                    |   entry0 ();                                 |
                                    | push rbp                                     |
                                    | xor eax, eax                                 |
                                    | mov rbp, rsp                                 |
                                    | pop rbp                                      |
                                    | ret                                          |
                                    `----------------------------------------------'
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5


                                         .----------------------------------------------.
                                         | [0x8000070] ;[ga]                            |
                                         |   ; [02] m-r-x section size 2381 named .text |
                                         |   ;-- section..text:                         |
                                         |   ;-- rip:                                   |
                                         | (fcn) entry0 8                               |
                                         |   entry0 ();                                 |
                                         | push rbp                                     |
                                         | xor eax, eax                                 |
                                         | mov rbp, rsp                                 |
                                         | pop rbp                                      |
                                         | ret                                          |
                                         `----------------------------------------------'
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5


                                         .----------------------------------------------.
                                         | [0x8000070] ;[ga]                            |
                                         |   ; [02] m-r-x section size 2381 named .text |
                                         |   ;-- section..text:                         |
                                         |   ;-- rip:                                   |
                                         | (fcn) entry0 8                               |
                                         |   entry0 ();                                 |
                                         | push rbp                                     |
                                         | xor eax, eax                                 |
                                         | mov rbp, rsp                                 |
                                         | pop rbp                                      |
                                         | ret                                          |
                                         `----------------------------------------------'
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5


                                         .----------------------------------------------.
                                         | [0x8000070] ;[ga]                            |
                                         |   ; [02] m-r-x section size 2381 named .text |
                                         |   ;-- section..text:                         |
                                         |   ;-- rip:                                   |
                                         | (fcn) entry0 8                               |
                                         |   entry0 ();                                 |
                                         | push rbp                                     |
                                         | xor eax, eax                                 |
                                         | mov rbp, rsp                                 |
                                         | pop rbp                                      |
                                         | ret                                          |
                                         `----------------------------------------------'
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5



                                         .----------------------------------------------.
                                         | [0x8000070] ;[ga]                            |
                                         |   ; [02] m-r-x section size 2381 named .text |
                                         |   ;-- section..text:                         |
                                         |   ;-- rip:                                   |
                                         | (fcn) entry0 8                               |
                                         |   entry0 ();                                 |
                                         | push rbp                                     |
                                         | xor eax, eax                                 |
                                         | mov rbp, rsp                                 |
                                         | pop rbp                                      |
                                         | ret                                          |
                                         `----------------------------------------------'
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5



                                    .----------------------------------------------.
                                    | [0x8000070] ;[ga]                            |
                                    |   ; [02] m-r-x section size 2381 named .text |
                                    |   ;-- section..text:                         |
                                    |   ;-- rip:                                   |
                                    | (fcn) entry0 8                               |
                                    |   entry0 ();                                 |
                                    | push rbp                                     |
                                    | xor eax, eax                                 |
                                    | mov rbp, rsp                                 |
                                    | pop rbp                                      |
                                    | ret                                          |
                                    `----------------------------------------------'
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5



                                    .----------------------------------------------.
                                    | [0x8000070] ;[ga]                            |
                                    |   ; [02] m-r-x section size 2381 named .text |
                                    |   ;-- section..text:                         |
                                    |   ;-- rip:                                   |
                                    | (fcn) entry0 8                               |
                                    |   entry0 ();                                 |
                                    | push rbp                                     |
                                    | xor eax, eax                                 |
                                    | mov rbp, rsp                                 |
                                    | pop rbp                                      |
                                    | ret                                          |
                                    `----------------------------------------------'
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5


                                    .----------------------------------------------.
                                    | [0x8000070] ;[ga]                            |
                                    |   ; [02] m-r-x section size 2381 named .text |
                                    |   ;-- section..text:                         |
                                    |   ;-- rip:                                   |
                                    | (fcn) entry0 8                               |
                                    |   entry0 ();                                 |
                                    | push rbp                                     |
                                    | xor eax, eax                                 |
                                    | mov rbp, rsp                                 |
                                    | pop rbp                                      |
                                    | ret                                          |
                                    `----------------------------------------------'
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5



                                    .----------------------------------------------.
                                    | [0x8000070] ;[ga]                            |
                                    |   ; [02] m-r-x section size 2381 named .text |
                                    |   ;-- section..text:                         |
                                    |   ;-- rip:                                   |
                                    | (fcn) entry0 8                               |
                                    |   entry0 ();                                 |
                                    | push rbp                                     |
                                    | xor eax, eax                                 |
                                    | mov rbp, rsp                                 |
                                    | pop rbp                                      |
                                    | ret                                          |
                                    `----------------------------------------------'
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5



                                    .----------------------------------------------.
                                    | [0x8000070] ;[ga]                            |
                                    |   ; [02] m-r-x section size 2381 named .text |
                                    |   ;-- section..text:                         |
                                    |   ;-- rip:                                   |
                                    | (fcn) entry0 8                               |
                                    |   entry0 ();                                 |
                                    | push rbp                                     |
                                    | xor eax, eax                                 |
                                    | mov rbp, rsp                                 |
                                    | pop rbp                                      |
                                    | ret                                          |
                                    `----------------------------------------------'
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5


                                    .----------------------------------------------.
                                    | [0x8000070] ;[ga]                            |
                                    |   ; [02] m-r-x section size 2381 named .text |
                                    |   ;-- section..text:                         |
                                    |   ;-- rip:                                   |
                                    | (fcn) entry0 8                               |
                                    |   entry0 ();                                 |
                                    | push rbp                                     |
                                    | xor eax, eax                                 |
                                    | mov rbp, rsp                                 |
                                    | pop rbp                                      |
                                    | ret                                          |
                                    `----------------------------------------------'
[0x08000070]> VV @ entry0 (nodes 1 edges 0 zoom 100%) BB-NORM mouse:canvas-y mov-speed:5
[0x08000070 1% 3696 led_drv.ko]> xc @ entry0
- offset -   0 1  2 3  4 5  6 7  8 9  A B  C D  E F  0123456789ABCDEF  comment
0x08000070  5531 c048 89e5 5dc3 0f1f 8400 0000 0000  U1.H..].........  ; [02] m-r-x section size 2381 named .text
0x08000080  5548 89e5 5348 8d64 24e8 488d 5de4 488d  UH..SH.d$.H.].H.
0x08000090  3b48 c745 e400 0000 00c7 45ec 0000 0000  ;H.E......E.....
0x080000a0  e822 2600 00b9 0700 0000 48c7 c7cb 2600  ."&.......H...&.
0x080000b0  0848 8d33 f3a6 0f84 8402 0000 b908 0000  .H.3............
0x080000c0  0048 c7c7 d626 0008 488d 33f3 a60f 842d  .H...&..H.3....-
0x080000d0  0200 00b9 0700 0000 48c7 c7e2 2600 0848  ........H...&..H
0x080000e0  8d33 f3a6 0f84 be02 0000 b908 0000 0048  .3.............H
0x080000f0  c7c7 ed26 0008 488d 33f3 a60f 8467 0200  ...&..H.3....g..
0x08000100  00b9 0700 0000 48c7 c7f9 2600 0848 8d33  ......H...&..H.3
0x08000110  f3a6 0f84 b802 0000 b908 0000 0048 c7c7  .............H..
0x08000120  0427 0008 488d 33f3 a60f 8421 0300 00b9  .'..H.3....!....
0x08000130  0700 0000 48c7 c710 2700 0848 8d33 f3a6  ....H...'..H.3..
0x08000140  0f84 ca02 0000 b908 0000 0048 c7c7 1b27  ...........H...'
0x08000150  0008 488d 33f3 a60f 841b 0300 00b9 0700  ..H.3...........
0x08000160  0000 48c7 c727 2700 0848 8d33 f3a6 0f84  ..H..''..H.3....
0x08000170  2603 0000 b908 0000 0048 c7c7 3227 0008  &........H..2'..
0x08000180  488d 33f3 a60f 8448 0300 00b9 0700 0000  H.3....H........
0x08000190  48c7 c73e 2700 0848 8d33 f3a6 0f84 5303  H..>'..H.3....S.
0x080001a0  0000 b908 0000 0048 c7c7 4927 0008 488d  .......H..I'..H.
0x080001b0  33f3 a60f 8475 0300 00b9 0700 0000 48c7  3....u........H.
0x080001c0  c755 2700 0848 8d33 f3a6 0f84 8003 0000  .U'..H.3........
0x080001d0  b908 0000 0048 c7c7 6027 0008 488d 33f3  .....H..`'..H.3.
0x080001e0  a60f 84a2 0300 00b9 0700 0000 48c7 c76c  ............H..l
0x080001f0  2700 0848 8d33 f3a6 0f84 ad03 0000 48c7  '..H.3........H.
0x08000200  c677 2700 0848 8d3b e8fe 2400 0085 c00f  .w'..H.;..$.....
0x08000210  84cf 0300 0048 c7c6 8727 0008 488d 3be8  .....H...'..H.;. 
0x08000220  ef24 0000 85c0 0f84 da03 0000 48c7 c696  .$..........H... 
0x08000230  2700 0848 8d3b e8e0 2400 0085 c00f 8435  '..H.;..$......5 
0x08000240  0400 0048 c7c6 a627 0008 488d 3be8 d124  ...H...'..H.;..$ 
0x08000250  0000 85c0 0f84 e503 0000 48c7 c6b6 2700  ..........H...'. 
0x08000260  0848 8d3b e8c2 2400 0085 c00f 84a9 0400  .H.;..$......... 
0x08000270  0048 c7c6 c727 0008 488d 3be8 b324 0000  .H...'..H.;..$.. 
0x08000280  85c0 0f84 7004 0000 48c7 c6d7 2700 0848  ....p...H...'..H 
0x08000290  8d3b e8a4 2400 0085 c00f 8420 0400 0048  .;..$...... ...H 
0x080002a0  c7c6 e827 0008 488d 3be8 9524 0000 85c0  ...'..H.;..$.... 
0x080002b0  0f84 e403 0000 48c7 c6f8 2700 0848 8d3b  ......H...'..H.; 
0x080002c0  e886 2400 0085 c075 6b48 8b15 a80b 0000  ..$....ukH...... 
0x080002d0  488b 0225 0111 1111 4889 0248 8b15 960b  H..%....H..H.... 
0x080002e0  0000 488b 0248 83c8 0148 8902 488b 1585  ..H..H...H..H... 
0x080002f0  0b00 0048 8b02 4883 c810 4889 02eb 3590  ...H..H...H...5. 
0x08000300  488b 1519 0b00 0048 8b02 2501 1111 1148  H......H..%....H 
0x08000310  8902 488b 1507 0b00 0048 8b02 4883 c801  ..H......H..H... 
0x08000320  4889 0248 8b15 f60a 0000 488b 0248 83c8  H..H......H..H.. 
0x08000330  1048 8902 488d 
[0x08000070]> q
$ man rasm2
$ rasm2 led_drv.ko
Cannot assemble 'led_drv.ko' at line 3
invalid
$ rasm2 -d led_drv.ko
invalid
$ rasm2 -e led_drv.ko
Warning: This architecture can't swap to big endian.
Cannot assemble 'led_drv.ko' at line 3
invalid
$ man rasm2
$ file /bin/true
/bin/true: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 3.2.0, BuildID[sha1]=cae1cea2c8b5f2d151aceb44bcbe1d8415bc06c5, stripped
$ rasm2 -d /bin/true
invalid
$ r2 led_drv.ko
Warning: Cannot initialize program headers
Warning: Cannot initialize dynamic strings
Warning: Cannot initialize dynamic section
Warning: run r2 with -e io.cache=true to fix relocations in disassembly
[0x08000070]> pd 10
            ;-- entry0:
            ;-- section..text:
            ;-- led_drv_open:
            ;-- rip:
            0x08000070      55             push rbp                    ; [02] m-r-x section size 2381 named .text
            0x08000071      31c0           xor eax, eax
            0x08000073      4889e5         mov rbp, rsp
            0x08000076      5d             pop rbp
            0x08000077      c3             ret
            0x08000078      0f1f84000000.  nop dword [rax + rax]
            ;-- led_drv_write:
            0x08000080      55             push rbp
            0x08000081      4889e5         mov rbp, rsp
            0x08000084      53             push rbx
            0x08000085      488d6424e8     lea rsp, qword [rsp - 0x18]
[0x08000070]> pd
            ;-- entry0:
            ;-- section..text:
            ;-- led_drv_open:
            ;-- rip:
            0x08000070      55             push rbp                    ; [02] m-r-x section size 2381 named .text
            0x08000071      31c0           xor eax, eax
            0x08000073      4889e5         mov rbp, rsp
            0x08000076      5d             pop rbp
            0x08000077      c3             ret
            0x08000078      0f1f84000000.  nop dword [rax + rax]
            ;-- led_drv_write:
            0x08000080      55             push rbp
            0x08000081      4889e5         mov rbp, rsp
            0x08000084      53             push rbx
            0x08000085      488d6424e8     lea rsp, qword [rsp - 0x18]
            0x0800008a      488d5de4       lea rbx, qword [rbp - 0x1c]
            0x0800008e      488d3b         lea rdi, qword [rbx]
            0x08000091      48c745e40000.  mov qword [rbp - 0x1c], 0
            0x08000099      c745ec000000.  mov dword [rbp - 0x14], 0
(reloc._copy_from_user_161)
            0x080000a0      e800000000     call 0x80000a5                ; RELOC 32 _copy_from_user
            0x080000a5      b907000000     mov ecx, 7
            0x080000aa      48c7c7000000.  mov rdi, 0                    ; RELOC 32
            0x080000b1      488d33         lea rsi, qword [rbx]
            0x080000b4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
        ,=< 0x080000b6      0f8484020000   je 0x8000340
        |   0x080000bc      b908000000     mov ecx, 8
        |   0x080000c1      48c7c7000000.  mov rdi, 0                    ; RELOC 32
        |   0x080000c8      488d33         lea rsi, qword [rbx]
        |   0x080000cb      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
       ,==< 0x080000cd      0f842d020000   je 0x8000300
       ||   0x080000d3      b907000000     mov ecx, 7
       ||   0x080000d8      48c7c7000000.  mov rdi, 0                    ; RELOC 32
       ||   0x080000df      488d33         lea rsi, qword [rbx]
       ||   0x080000e2      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
      ,===< 0x080000e4      0f84be020000   je 0x80003a8
      |||   0x080000ea      b908000000     mov ecx, 8
      |||   0x080000ef      48c7c7000000.  mov rdi, 0                    ; RELOC 32
      |||   0x080000f6      488d33         lea rsi, qword [rbx]
      |||   0x080000f9      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
     ,====< 0x080000fb      0f8467020000   je 0x8000368
     ||||   0x08000101      b907000000     mov ecx, 7
     ||||   0x08000106      48c7c7000000.  mov rdi, 0                    ; RELOC 32
     ||||   0x0800010d      488d33         lea rsi, qword [rbx]
     ||||   0x08000110      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
    ,=====< 0x08000112      0f84b8020000   je 0x80003d0
    |||||   0x08000118      b908000000     mov ecx, 8
    |||||   0x0800011d      48c7c7000000.  mov rdi, 0                    ; RELOC 32
    |||||   0x08000124      488d33         lea rsi, qword [rbx]
    |||||   0x08000127      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
   ,======< 0x08000129      0f8421030000   je 0x8000450
   ||||||   0x0800012f      b907000000     mov ecx, 7
   ||||||   0x08000134      48c7c7000000.  mov rdi, 0                    ; RELOC 32
   ||||||   0x0800013b      488d33         lea rsi, qword [rbx]
   ||||||   0x0800013e      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ,=======< 0x08000140      0f84ca020000   je 0x8000410
  |||||||   0x08000146      b908000000     mov ecx, 8
  |||||||   0x0800014b      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x08000152      488d33         lea rsi, qword [rbx]
  |||||||   0x08000155      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x08000157      0f841b030000   je 0x8000478
  |||||||   0x0800015d      b907000000     mov ecx, 7
  |||||||   0x08000162      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x08000169      488d33         lea rsi, qword [rbx]
  |||||||   0x0800016c      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x0800016e      0f8426030000   je 0x800049a
  |||||||   0x08000174      b908000000     mov ecx, 8
  |||||||   0x08000179      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x08000180      488d33         lea rsi, qword [rbx]
  |||||||   0x08000183      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
[0x08000070]> pd 100
            ;-- entry0:
            ;-- section..text:
            ;-- led_drv_open:
            ;-- rip:
            0x08000070      55             push rbp                    ; [02] m-r-x section size 2381 named .text
            0x08000071      31c0           xor eax, eax
            0x08000073      4889e5         mov rbp, rsp
            0x08000076      5d             pop rbp
            0x08000077      c3             ret
            0x08000078      0f1f84000000.  nop dword [rax + rax]
            ;-- led_drv_write:
            0x08000080      55             push rbp
            0x08000081      4889e5         mov rbp, rsp
            0x08000084      53             push rbx
            0x08000085      488d6424e8     lea rsp, qword [rsp - 0x18]
            0x0800008a      488d5de4       lea rbx, qword [rbp - 0x1c]
            0x0800008e      488d3b         lea rdi, qword [rbx]
            0x08000091      48c745e40000.  mov qword [rbp - 0x1c], 0
            0x08000099      c745ec000000.  mov dword [rbp - 0x14], 0
(reloc._copy_from_user_161)
            0x080000a0      e800000000     call 0x80000a5                ; RELOC 32 _copy_from_user
            0x080000a5      b907000000     mov ecx, 7
            0x080000aa      48c7c7000000.  mov rdi, 0                    ; RELOC 32
            0x080000b1      488d33         lea rsi, qword [rbx]
            0x080000b4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
        ,=< 0x080000b6      0f8484020000   je 0x8000340
        |   0x080000bc      b908000000     mov ecx, 8
        |   0x080000c1      48c7c7000000.  mov rdi, 0                    ; RELOC 32
        |   0x080000c8      488d33         lea rsi, qword [rbx]
        |   0x080000cb      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
       ,==< 0x080000cd      0f842d020000   je 0x8000300
       ||   0x080000d3      b907000000     mov ecx, 7
       ||   0x080000d8      48c7c7000000.  mov rdi, 0                    ; RELOC 32
       ||   0x080000df      488d33         lea rsi, qword [rbx]
       ||   0x080000e2      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
      ,===< 0x080000e4      0f84be020000   je 0x80003a8
      |||   0x080000ea      b908000000     mov ecx, 8
      |||   0x080000ef      48c7c7000000.  mov rdi, 0                    ; RELOC 32
      |||   0x080000f6      488d33         lea rsi, qword [rbx]
      |||   0x080000f9      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
     ,====< 0x080000fb      0f8467020000   je 0x8000368
     ||||   0x08000101      b907000000     mov ecx, 7
     ||||   0x08000106      48c7c7000000.  mov rdi, 0                    ; RELOC 32
     ||||   0x0800010d      488d33         lea rsi, qword [rbx]
     ||||   0x08000110      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
    ,=====< 0x08000112      0f84b8020000   je 0x80003d0
    |||||   0x08000118      b908000000     mov ecx, 8
    |||||   0x0800011d      48c7c7000000.  mov rdi, 0                    ; RELOC 32
    |||||   0x08000124      488d33         lea rsi, qword [rbx]
    |||||   0x08000127      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
   ,======< 0x08000129      0f8421030000   je 0x8000450
   ||||||   0x0800012f      b907000000     mov ecx, 7
   ||||||   0x08000134      48c7c7000000.  mov rdi, 0                    ; RELOC 32
   ||||||   0x0800013b      488d33         lea rsi, qword [rbx]
   ||||||   0x0800013e      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ,=======< 0x08000140      0f84ca020000   je 0x8000410
  |||||||   0x08000146      b908000000     mov ecx, 8
  |||||||   0x0800014b      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x08000152      488d33         lea rsi, qword [rbx]
  |||||||   0x08000155      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x08000157      0f841b030000   je 0x8000478
  |||||||   0x0800015d      b907000000     mov ecx, 7
  |||||||   0x08000162      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x08000169      488d33         lea rsi, qword [rbx]
  |||||||   0x0800016c      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x0800016e      0f8426030000   je 0x800049a
  |||||||   0x08000174      b908000000     mov ecx, 8
  |||||||   0x08000179      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x08000180      488d33         lea rsi, qword [rbx]
  |||||||   0x08000183      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x08000185      0f8448030000   je 0x80004d3
  |||||||   0x0800018b      b907000000     mov ecx, 7
  |||||||   0x08000190      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x08000197      488d33         lea rsi, qword [rbx]
  |||||||   0x0800019a      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x0800019c      0f8453030000   je 0x80004f5
  |||||||   0x080001a2      b908000000     mov ecx, 8
  |||||||   0x080001a7      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x080001ae      488d33         lea rsi, qword [rbx]
  |||||||   0x080001b1      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x080001b3      0f8475030000   je 0x800052e
  |||||||   0x080001b9      b907000000     mov ecx, 7
  |||||||   0x080001be      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x080001c5      488d33         lea rsi, qword [rbx]
  |||||||   0x080001c8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x080001ca      0f8480030000   je 0x8000550
  |||||||   0x080001d0      b908000000     mov ecx, 8
  |||||||   0x080001d5      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x080001dc      488d33         lea rsi, qword [rbx]
  |||||||   0x080001df      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x080001e1      0f84a2030000   je 0x8000589
  |||||||   0x080001e7      b907000000     mov ecx, 7
  |||||||   0x080001ec      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x080001f3      488d33         lea rsi, qword [rbx]
  |||||||   0x080001f6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x080001f8      0f84ad030000   je 0x80005ab
  |||||||   0x080001fe      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x08000205      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_9)
  |||||||   0x08000208      e800000000     call 0x800020d                ; RELOC 32 strcmp
  |||||||   0x0800020d      85c0           test eax, eax
  ========< 0x0800020f      0f84cf030000   je 0x80005e4
  |||||||   0x08000215      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x0800021c      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_32)
  |||||||   0x0800021f      e800000000     call 0x8000224                ; RELOC 32 strcmp
  |||||||   0x08000224      85c0           test eax, eax
  ========< 0x08000226      0f84da030000   je 0x8000606
[0x08000070]> pd 1020
Do you want to print 1174 lines? (y/N)
[0x08000070]>
[0x08000070]> p 200
|Usage: p[=68abcdDfiImrstuxz] [arg|len] [@addr]
| p-[?][jh] [mode]               bar|json|histogram blocks (mode: e?search.in)
| p=[?][bep] [blks] [len] [blk]  show entropy/printable chars/chars bars
| p2 [len]                       8x8 2bpp-tiles
| p3 [file]                      print stereogram (3D)
| p6[de] [len]                   base64 decode/encode
| p8[?][j] [len]                 8bit hexpair list of bytes
| pa[edD] [arg]                  pa:assemble  pa[dD]:disasm or pae: esil from hexpairs
| pA[n_ops]                      show n_ops address and type
| p[b|B|xb] [len] ([skip])       bindump N bits skipping M
| pb[?] [n]                      bitstream of N bits
| pB[?] [n]                      bitstream of N bytes
| pc[?][p] [len]                 output C (or python) format
| pC[d] [rows]                   print disassembly in columns (see hex.cols and pdi)
| pd[?] [sz] [a] [b]             disassemble N opcodes (pd) or N bytes (pD)
| pf[?][.nam] [fmt]              print formatted data (pf.name, pf.name $<expr>)
| ph[?][=|hash] ([len])          calculate hash for a block
| pj[?] [len]                    print as indented JSON
| p[iI][df] [len]                print N ops/bytes (f=func) (see pi? and pdi)
| p[kK] [len]                    print key in randomart (K is for mosaic)
| pm[?] [magic]                  print libmagic data (see pm? and /m?)
| pq[?][iz] [len]                print QR code with the first Nbytes of the current block
| pr[?][glx] [len]               print N raw bytes (in lines or hexblocks, 'g'unzip)
| ps[?][pwz] [len]               print pascal/wide/zero-terminated strings
| pt[?][dn] [len]                print different timestamps
| pu[?][w] [len]                 print N url encoded bytes (w=wide)
| pv[?][jh] [mode]               show variable/pointer/value in memory
| pwd                            display current working directory
| px[?][owq] [len]               hexdump of N bytes (o=octal, w=32bit, q=64bit)
| pz[?] [len]                    print zoom view (see pz? for help)
[0x08000070]> pd 200
            ;-- entry0:
            ;-- section..text:
            ;-- led_drv_open:
            ;-- rip:
            0x08000070      55             push rbp                    ; [02] m-r-x section size 2381 named .text
            0x08000071      31c0           xor eax, eax
            0x08000073      4889e5         mov rbp, rsp
            0x08000076      5d             pop rbp
            0x08000077      c3             ret
            0x08000078      0f1f84000000.  nop dword [rax + rax]
            ;-- led_drv_write:
            0x08000080      55             push rbp
            0x08000081      4889e5         mov rbp, rsp
            0x08000084      53             push rbx
            0x08000085      488d6424e8     lea rsp, qword [rsp - 0x18]
            0x0800008a      488d5de4       lea rbx, qword [rbp - 0x1c]
            0x0800008e      488d3b         lea rdi, qword [rbx]
            0x08000091      48c745e40000.  mov qword [rbp - 0x1c], 0
            0x08000099      c745ec000000.  mov dword [rbp - 0x14], 0
(reloc._copy_from_user_161)
            0x080000a0      e800000000     call 0x80000a5                ; RELOC 32 _copy_from_user
            0x080000a5      b907000000     mov ecx, 7
            0x080000aa      48c7c7000000.  mov rdi, 0                    ; RELOC 32
            0x080000b1      488d33         lea rsi, qword [rbx]
            0x080000b4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
        ,=< 0x080000b6      0f8484020000   je 0x8000340
        |   0x080000bc      b908000000     mov ecx, 8
        |   0x080000c1      48c7c7000000.  mov rdi, 0                    ; RELOC 32
        |   0x080000c8      488d33         lea rsi, qword [rbx]
        |   0x080000cb      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
       ,==< 0x080000cd      0f842d020000   je 0x8000300
       ||   0x080000d3      b907000000     mov ecx, 7
       ||   0x080000d8      48c7c7000000.  mov rdi, 0                    ; RELOC 32
       ||   0x080000df      488d33         lea rsi, qword [rbx]
       ||   0x080000e2      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
      ,===< 0x080000e4      0f84be020000   je 0x80003a8
      |||   0x080000ea      b908000000     mov ecx, 8
      |||   0x080000ef      48c7c7000000.  mov rdi, 0                    ; RELOC 32
      |||   0x080000f6      488d33         lea rsi, qword [rbx]
      |||   0x080000f9      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
     ,====< 0x080000fb      0f8467020000   je 0x8000368
     ||||   0x08000101      b907000000     mov ecx, 7
     ||||   0x08000106      48c7c7000000.  mov rdi, 0                    ; RELOC 32
     ||||   0x0800010d      488d33         lea rsi, qword [rbx]
     ||||   0x08000110      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
    ,=====< 0x08000112      0f84b8020000   je 0x80003d0
    |||||   0x08000118      b908000000     mov ecx, 8
    |||||   0x0800011d      48c7c7000000.  mov rdi, 0                    ; RELOC 32
    |||||   0x08000124      488d33         lea rsi, qword [rbx]
    |||||   0x08000127      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
   ,======< 0x08000129      0f8421030000   je 0x8000450
   ||||||   0x0800012f      b907000000     mov ecx, 7
   ||||||   0x08000134      48c7c7000000.  mov rdi, 0                    ; RELOC 32
   ||||||   0x0800013b      488d33         lea rsi, qword [rbx]
   ||||||   0x0800013e      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ,=======< 0x08000140      0f84ca020000   je 0x8000410
  |||||||   0x08000146      b908000000     mov ecx, 8
  |||||||   0x0800014b      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x08000152      488d33         lea rsi, qword [rbx]
  |||||||   0x08000155      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x08000157      0f841b030000   je 0x8000478
  |||||||   0x0800015d      b907000000     mov ecx, 7
  |||||||   0x08000162      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x08000169      488d33         lea rsi, qword [rbx]
  |||||||   0x0800016c      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x0800016e      0f8426030000   je 0x800049a
  |||||||   0x08000174      b908000000     mov ecx, 8
  |||||||   0x08000179      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x08000180      488d33         lea rsi, qword [rbx]
  |||||||   0x08000183      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x08000185      0f8448030000   je 0x80004d3
  |||||||   0x0800018b      b907000000     mov ecx, 7
  |||||||   0x08000190      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x08000197      488d33         lea rsi, qword [rbx]
  |||||||   0x0800019a      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x0800019c      0f8453030000   je 0x80004f5
  |||||||   0x080001a2      b908000000     mov ecx, 8
  |||||||   0x080001a7      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x080001ae      488d33         lea rsi, qword [rbx]
  |||||||   0x080001b1      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x080001b3      0f8475030000   je 0x800052e
  |||||||   0x080001b9      b907000000     mov ecx, 7
  |||||||   0x080001be      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x080001c5      488d33         lea rsi, qword [rbx]
  |||||||   0x080001c8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x080001ca      0f8480030000   je 0x8000550
  |||||||   0x080001d0      b908000000     mov ecx, 8
  |||||||   0x080001d5      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x080001dc      488d33         lea rsi, qword [rbx]
  |||||||   0x080001df      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x080001e1      0f84a2030000   je 0x8000589
  |||||||   0x080001e7      b907000000     mov ecx, 7
  |||||||   0x080001ec      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x080001f3      488d33         lea rsi, qword [rbx]
  |||||||   0x080001f6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x080001f8      0f84ad030000   je 0x80005ab
  |||||||   0x080001fe      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x08000205      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_9)
  |||||||   0x08000208      e800000000     call 0x800020d                ; RELOC 32 strcmp
  |||||||   0x0800020d      85c0           test eax, eax
  ========< 0x0800020f      0f84cf030000   je 0x80005e4
  |||||||   0x08000215      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x0800021c      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_32)
  |||||||   0x0800021f      e800000000     call 0x8000224                ; RELOC 32 strcmp
  |||||||   0x08000224      85c0           test eax, eax
  ========< 0x08000226      0f84da030000   je 0x8000606
  |||||||   0x0800022c      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x08000233      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_55)
  |||||||   0x08000236      e800000000     call 0x800023b                ; RELOC 32 strcmp
  |||||||   0x0800023b      85c0           test eax, eax
  ========< 0x0800023d      0f8435040000   je 0x8000678
  |||||||   0x08000243      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x0800024a      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_78)
  |||||||   0x0800024d      e800000000     call 0x8000252                ; RELOC 32 strcmp
  |||||||   0x08000252      85c0           test eax, eax
  ========< 0x08000254      0f84e5030000   je 0x800063f
  |||||||   0x0800025a      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x08000261      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_101)
  |||||||   0x08000264      e800000000     call 0x8000269                ; RELOC 32 strcmp
  |||||||   0x08000269      85c0           test eax, eax
  ========< 0x0800026b      0f84a9040000   je 0x800071a
  |||||||   0x08000271      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x08000278      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_124)
  |||||||   0x0800027b      e800000000     call 0x8000280                ; RELOC 32 strcmp
  |||||||   0x08000280      85c0           test eax, eax
  ========< 0x08000282      0f8470040000   je 0x80006f8
  |||||||   0x08000288      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x0800028f      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_147)
  |||||||   0x08000292      e800000000     call 0x8000297                ; RELOC 32 strcmp
  |||||||   0x08000297      85c0           test eax, eax
  ========< 0x08000299      0f8420040000   je 0x80006bf
  |||||||   0x0800029f      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x080002a6      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_170)
  |||||||   0x080002a9      e800000000     call 0x80002ae                ; RELOC 32 strcmp
  |||||||   0x080002ae      85c0           test eax, eax
  ========< 0x080002b0      0f84e4030000   je 0x800069a
  |||||||   0x080002b6      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x080002bd      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_193)
  |||||||   0x080002c0      e800000000     call 0x80002c5                ; RELOC 32 strcmp
  |||||||   0x080002c5      85c0           test eax, eax
  ========< 0x080002c7      756b           jne 0x8000334
(reloc.gpbcon_204)
  |||||||   0x080002c9      488b15000000.  mov rdx, qword [0x080002d0] ; [0x80002d0:8]=0x1111110125028b48  ; RELOC 32 gpbcon
  |||||||   0x080002d0      488b02         mov rax, qword [rdx]
  |||||||   0x080002d3      2501111111     and eax, 0x11111101
  |||||||   0x080002d8      488902         mov qword [rdx], rax
(reloc.gpbcon_222)
  |||||||   0x080002db      488b15000000.  mov rdx, qword [0x080002e2] ; [0x80002e2:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
  |||||||   0x080002e2      488b02         mov rax, qword [rdx]
  |||||||   0x080002e5      4883c801       or rax, 1
  |||||||   0x080002e9      488902         mov qword [rdx], rax
(reloc.gpbcon_239)
  |||||||   0x080002ec      488b15000000.  mov rdx, qword [0x080002f3] ; [0x80002f3:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
  |||||||   0x080002f3      488b02         mov rax, qword [rdx]
  |||||||   0x080002f6      4883c810       or rax, 0x10
  |||||||   0x080002fa      488902         mov qword [rdx], rax
  ========< 0x080002fd      eb35           jmp 0x8000334
  |||||||   0x080002ff      90             nop
(reloc.gpbcon_3)
  |||||`--> 0x08000300      488b15000000.  mov rdx, qword [0x08000307] ; [0x8000307:8]=0x1111110125028b48  ; RELOC 32 gpbcon
  ||||| |   0x08000307      488b02         mov rax, qword [rdx]
  ||||| |   0x0800030a      2501111111     and eax, 0x11111101
  ||||| |   0x0800030f      488902         mov qword [rdx], rax
(reloc.gpbcon_21)
  ||||| |   0x08000312      488b15000000.  mov rdx, qword [0x08000319] ; [0x8000319:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
  ||||| |   0x08000319      488b02         mov rax, qword [rdx]
  ||||| |   0x0800031c      4883c801       or rax, 1
  |||||.--> 0x08000320      488902         mov qword [rdx], rax
(reloc.gpbcon_38)
  |||||:|   0x08000323      488b15000000.  mov rdx, qword [0x0800032a] ; [0x800032a:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
  |||||:|   0x0800032a      488b02         mov rax, qword [rdx]
  |||||:|   0x0800032d      4883c810       or rax, 0x10
  |||||:|   0x08000331      488902         mov qword [rdx], rax
  --------> 0x08000334      488d642418     lea rsp, qword [rsp + 0x18] ; 24
  |||||:|   0x08000339      31c0           xor eax, eax
  |||||:|   0x0800033b      5b             pop rbx
  |||||:|   0x0800033c      5d             pop rbp
  |||||:|   0x0800033d      c3             ret
  |||||:|   0x0800033e      6690           nop
  |||||:`-> 0x08000340      488b15000000.  mov rdx, qword [0x08000347] ; [0x8000347:8]=0x1111110125028b48  ; RELOC 32 gpbcon
  |||||:    0x08000347      488b02         mov rax, qword [rdx]
  |||||:    0x0800034a      2501111111     and eax, 0x11111101
  |||||:    0x0800034f      488902         mov qword [rdx], rax
(reloc.gpbcon_85)
  |||||:    0x08000352      488b15000000.  mov rdx, qword [0x08000359] ; [0x8000359:8]=0xebfee08348028b48  ; RELOC 32 gpbcon
  |||||:    0x08000359      488b02         mov rax, qword [rdx]
  |||||:    0x0800035c      4883e0fe       and rax, 0xfffffffffffffffe
  |||||`==< 0x08000360      ebbe           jmp 0x8000320
  |||||     0x08000362      660f1f440000   nop word [rax + rax]
(reloc.gpbcon_107)
  |||`----> 0x08000368      488b15000000.  mov rdx, qword [0x0800036f] ; [0x800036f:8]=0x1111110125028b48  ; RELOC 32 gpbcon
  ||| |     0x0800036f      488b02         mov rax, qword [rdx]
  ||| |     0x08000372      2501111111     and eax, 0x11111101
  ||| |     0x08000377      488902         mov qword [rdx], rax
(reloc.gpbcon_125)
  ||| |     0x0800037a      488b15000000.  mov rdx, qword [0x08000381] ; [0x8000381:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
  ||| |     0x08000381      488b02         mov rax, qword [rdx]
  ||| |     0x08000384      4883e0fe       and rax, 0xfffffffffffffffe
  ||| |     0x08000388      488902         mov qword [rdx], rax
(reloc.gpbcon_142)
  ||| |     0x0800038b      488b15000000.  mov rdx, qword [0x08000392] ; [0x8000392:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
  ||| |     0x08000392      488b02         mov rax, qword [rdx]
  ||| |     0x08000395      4883c810       or rax, 0x10
  ||| |     0x08000399      488902         mov qword [rdx], rax
  ||| |     0x0800039c      488d642418     lea rsp, qword [rsp + 0x18] ; 24
  ||| |     0x080003a1      31c0           xor eax, eax
  ||| |     0x080003a3      5b             pop rbx
  ||| |     0x080003a4      5d             pop rbp
  ||| |     0x080003a5      c3             ret
  ||| |     0x080003a6      6690           nop
(reloc.gpbcon_171)
  ||| `---> 0x080003a8      488b15000000.  mov rdx, qword [0x080003af] ; [0x80003af:8]=0x1111110125028b48  ; RELOC 32 gpbcon
  |||       0x080003af      488b02         mov rax, qword [rdx]
  |||       0x080003b2      2501111111     and eax, 0x11111101
  |||       0x080003b7      488902         mov qword [rdx], rax
(reloc.gpbcon_189)
  |||       0x080003ba      488b15000000.  mov rdx, qword [0x080003c1] ; [0x80003c1:8]=0xeb01c88348028b48  ; RELOC 32 gpbcon
  |||       0x080003c1      488b02         mov rax, qword [rdx]
[0x08000070]> pd 300
            ;-- entry0:
            ;-- section..text:
            ;-- led_drv_open:
            ;-- rip:
            0x08000070      55             push rbp                    ; [02] m-r-x section size 2381 named .text
            0x08000071      31c0           xor eax, eax
            0x08000073      4889e5         mov rbp, rsp
            0x08000076      5d             pop rbp
            0x08000077      c3             ret
            0x08000078      0f1f84000000.  nop dword [rax + rax]
            ;-- led_drv_write:
            0x08000080      55             push rbp
            0x08000081      4889e5         mov rbp, rsp
            0x08000084      53             push rbx
            0x08000085      488d6424e8     lea rsp, qword [rsp - 0x18]
            0x0800008a      488d5de4       lea rbx, qword [rbp - 0x1c]
            0x0800008e      488d3b         lea rdi, qword [rbx]
            0x08000091      48c745e40000.  mov qword [rbp - 0x1c], 0
            0x08000099      c745ec000000.  mov dword [rbp - 0x14], 0
(reloc._copy_from_user_161)
            0x080000a0      e800000000     call 0x80000a5                ; RELOC 32 _copy_from_user
            0x080000a5      b907000000     mov ecx, 7
            0x080000aa      48c7c7000000.  mov rdi, 0                    ; RELOC 32
            0x080000b1      488d33         lea rsi, qword [rbx]
            0x080000b4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
        ,=< 0x080000b6      0f8484020000   je 0x8000340
        |   0x080000bc      b908000000     mov ecx, 8
        |   0x080000c1      48c7c7000000.  mov rdi, 0                    ; RELOC 32
        |   0x080000c8      488d33         lea rsi, qword [rbx]
        |   0x080000cb      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
       ,==< 0x080000cd      0f842d020000   je 0x8000300
       ||   0x080000d3      b907000000     mov ecx, 7
       ||   0x080000d8      48c7c7000000.  mov rdi, 0                    ; RELOC 32
       ||   0x080000df      488d33         lea rsi, qword [rbx]
       ||   0x080000e2      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
      ,===< 0x080000e4      0f84be020000   je 0x80003a8
      |||   0x080000ea      b908000000     mov ecx, 8
      |||   0x080000ef      48c7c7000000.  mov rdi, 0                    ; RELOC 32
      |||   0x080000f6      488d33         lea rsi, qword [rbx]
      |||   0x080000f9      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
     ,====< 0x080000fb      0f8467020000   je 0x8000368
     ||||   0x08000101      b907000000     mov ecx, 7
     ||||   0x08000106      48c7c7000000.  mov rdi, 0                    ; RELOC 32
     ||||   0x0800010d      488d33         lea rsi, qword [rbx]
     ||||   0x08000110      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
    ,=====< 0x08000112      0f84b8020000   je 0x80003d0
    |||||   0x08000118      b908000000     mov ecx, 8
    |||||   0x0800011d      48c7c7000000.  mov rdi, 0                    ; RELOC 32
    |||||   0x08000124      488d33         lea rsi, qword [rbx]
    |||||   0x08000127      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
   ,======< 0x08000129      0f8421030000   je 0x8000450
   ||||||   0x0800012f      b907000000     mov ecx, 7
   ||||||   0x08000134      48c7c7000000.  mov rdi, 0                    ; RELOC 32
   ||||||   0x0800013b      488d33         lea rsi, qword [rbx]
   ||||||   0x0800013e      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ,=======< 0x08000140      0f84ca020000   je 0x8000410
  |||||||   0x08000146      b908000000     mov ecx, 8
  |||||||   0x0800014b      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x08000152      488d33         lea rsi, qword [rbx]
  |||||||   0x08000155      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x08000157      0f841b030000   je 0x8000478
  |||||||   0x0800015d      b907000000     mov ecx, 7
  |||||||   0x08000162      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x08000169      488d33         lea rsi, qword [rbx]
  |||||||   0x0800016c      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x0800016e      0f8426030000   je 0x800049a
  |||||||   0x08000174      b908000000     mov ecx, 8
  |||||||   0x08000179      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x08000180      488d33         lea rsi, qword [rbx]
  |||||||   0x08000183      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x08000185      0f8448030000   je 0x80004d3
  |||||||   0x0800018b      b907000000     mov ecx, 7
  |||||||   0x08000190      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x08000197      488d33         lea rsi, qword [rbx]
  |||||||   0x0800019a      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x0800019c      0f8453030000   je 0x80004f5
  |||||||   0x080001a2      b908000000     mov ecx, 8
  |||||||   0x080001a7      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x080001ae      488d33         lea rsi, qword [rbx]
  |||||||   0x080001b1      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x080001b3      0f8475030000   je 0x800052e
  |||||||   0x080001b9      b907000000     mov ecx, 7
  |||||||   0x080001be      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x080001c5      488d33         lea rsi, qword [rbx]
  |||||||   0x080001c8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x080001ca      0f8480030000   je 0x8000550
  |||||||   0x080001d0      b908000000     mov ecx, 8
  |||||||   0x080001d5      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x080001dc      488d33         lea rsi, qword [rbx]
  |||||||   0x080001df      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x080001e1      0f84a2030000   je 0x8000589
  |||||||   0x080001e7      b907000000     mov ecx, 7
  |||||||   0x080001ec      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x080001f3      488d33         lea rsi, qword [rbx]
  |||||||   0x080001f6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x080001f8      0f84ad030000   je 0x80005ab
  |||||||   0x080001fe      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x08000205      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_9)
  |||||||   0x08000208      e800000000     call 0x800020d                ; RELOC 32 strcmp
  |||||||   0x0800020d      85c0           test eax, eax
  ========< 0x0800020f      0f84cf030000   je 0x80005e4
  |||||||   0x08000215      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x0800021c      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_32)
  |||||||   0x0800021f      e800000000     call 0x8000224                ; RELOC 32 strcmp
  |||||||   0x08000224      85c0           test eax, eax
  ========< 0x08000226      0f84da030000   je 0x8000606
  |||||||   0x0800022c      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x08000233      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_55)
  |||||||   0x08000236      e800000000     call 0x800023b                ; RELOC 32 strcmp
  |||||||   0x0800023b      85c0           test eax, eax
  ========< 0x0800023d      0f8435040000   je 0x8000678
  |||||||   0x08000243      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x0800024a      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_78)
  |||||||   0x0800024d      e800000000     call 0x8000252                ; RELOC 32 strcmp
  |||||||   0x08000252      85c0           test eax, eax
  ========< 0x08000254      0f84e5030000   je 0x800063f
  |||||||   0x0800025a      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x08000261      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_101)
  |||||||   0x08000264      e800000000     call 0x8000269                ; RELOC 32 strcmp
  |||||||   0x08000269      85c0           test eax, eax
  ========< 0x0800026b      0f84a9040000   je 0x800071a
  |||||||   0x08000271      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x08000278      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_124)
  |||||||   0x0800027b      e800000000     call 0x8000280                ; RELOC 32 strcmp
  |||||||   0x08000280      85c0           test eax, eax
  ========< 0x08000282      0f8470040000   je 0x80006f8
  |||||||   0x08000288      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x0800028f      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_147)
  |||||||   0x08000292      e800000000     call 0x8000297                ; RELOC 32 strcmp
  |||||||   0x08000297      85c0           test eax, eax
  ========< 0x08000299      0f8420040000   je 0x80006bf
  |||||||   0x0800029f      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x080002a6      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_170)
  |||||||   0x080002a9      e800000000     call 0x80002ae                ; RELOC 32 strcmp
  |||||||   0x080002ae      85c0           test eax, eax
  ========< 0x080002b0      0f84e4030000   je 0x800069a
  |||||||   0x080002b6      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x080002bd      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_193)
  |||||||   0x080002c0      e800000000     call 0x80002c5                ; RELOC 32 strcmp
  |||||||   0x080002c5      85c0           test eax, eax
  ========< 0x080002c7      756b           jne 0x8000334
(reloc.gpbcon_204)
  |||||||   0x080002c9      488b15000000.  mov rdx, qword [0x080002d0] ; [0x80002d0:8]=0x1111110125028b48  ; RELOC 32 gpbcon
  |||||||   0x080002d0      488b02         mov rax, qword [rdx]
  |||||||   0x080002d3      2501111111     and eax, 0x11111101
  |||||||   0x080002d8      488902         mov qword [rdx], rax
(reloc.gpbcon_222)
  |||||||   0x080002db      488b15000000.  mov rdx, qword [0x080002e2] ; [0x80002e2:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
  |||||||   0x080002e2      488b02         mov rax, qword [rdx]
  |||||||   0x080002e5      4883c801       or rax, 1
  |||||||   0x080002e9      488902         mov qword [rdx], rax
(reloc.gpbcon_239)
  |||||||   0x080002ec      488b15000000.  mov rdx, qword [0x080002f3] ; [0x80002f3:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
  |||||||   0x080002f3      488b02         mov rax, qword [rdx]
  |||||||   0x080002f6      4883c810       or rax, 0x10
  |||||||   0x080002fa      488902         mov qword [rdx], rax
  ========< 0x080002fd      eb35           jmp 0x8000334
  |||||||   0x080002ff      90             nop
(reloc.gpbcon_3)
  |||||`--> 0x08000300      488b15000000.  mov rdx, qword [0x08000307] ; [0x8000307:8]=0x1111110125028b48  ; RELOC 32 gpbcon
  ||||| |   0x08000307      488b02         mov rax, qword [rdx]
  ||||| |   0x0800030a      2501111111     and eax, 0x11111101
  ||||| |   0x0800030f      488902         mov qword [rdx], rax
(reloc.gpbcon_21)
  ||||| |   0x08000312      488b15000000.  mov rdx, qword [0x08000319] ; [0x8000319:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
  ||||| |   0x08000319      488b02         mov rax, qword [rdx]
  ||||| |   0x0800031c      4883c801       or rax, 1
  |||||.--> 0x08000320      488902         mov qword [rdx], rax
(reloc.gpbcon_38)
  |||||:|   0x08000323      488b15000000.  mov rdx, qword [0x0800032a] ; [0x800032a:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
  |||||:|   0x0800032a      488b02         mov rax, qword [rdx]
  |||||:|   0x0800032d      4883c810       or rax, 0x10
  |||||:|   0x08000331      488902         mov qword [rdx], rax
  --------> 0x08000334      488d642418     lea rsp, qword [rsp + 0x18] ; 24
  |||||:|   0x08000339      31c0           xor eax, eax
  |||||:|   0x0800033b      5b             pop rbx
  |||||:|   0x0800033c      5d             pop rbp
  |||||:|   0x0800033d      c3             ret
  |||||:|   0x0800033e      6690           nop
  |||||:`-> 0x08000340      488b15000000.  mov rdx, qword [0x08000347] ; [0x8000347:8]=0x1111110125028b48  ; RELOC 32 gpbcon
  |||||:    0x08000347      488b02         mov rax, qword [rdx]
  |||||:    0x0800034a      2501111111     and eax, 0x11111101
  |||||:    0x0800034f      488902         mov qword [rdx], rax
(reloc.gpbcon_85)
  |||||:    0x08000352      488b15000000.  mov rdx, qword [0x08000359] ; [0x8000359:8]=0xebfee08348028b48  ; RELOC 32 gpbcon
  |||||:    0x08000359      488b02         mov rax, qword [rdx]
  |||||:    0x0800035c      4883e0fe       and rax, 0xfffffffffffffffe
  |||||`==< 0x08000360      ebbe           jmp 0x8000320
  |||||     0x08000362      660f1f440000   nop word [rax + rax]
(reloc.gpbcon_107)
  |||`----> 0x08000368      488b15000000.  mov rdx, qword [0x0800036f] ; [0x800036f:8]=0x1111110125028b48  ; RELOC 32 gpbcon
  ||| |     0x0800036f      488b02         mov rax, qword [rdx]
  ||| |     0x08000372      2501111111     and eax, 0x11111101
  ||| |     0x08000377      488902         mov qword [rdx], rax
(reloc.gpbcon_125)
  ||| |     0x0800037a      488b15000000.  mov rdx, qword [0x08000381] ; [0x8000381:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
  ||| |     0x08000381      488b02         mov rax, qword [rdx]
  ||| |     0x08000384      4883e0fe       and rax, 0xfffffffffffffffe
  ||| | .-> 0x08000388      488902         mov qword [rdx], rax
(reloc.gpbcon_142)
  ||| | :   0x0800038b      488b15000000.  mov rdx, qword [0x08000392] ; [0x8000392:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
  ||| | :   0x08000392      488b02         mov rax, qword [rdx]
  ||| | :   0x08000395      4883c810       or rax, 0x10
  ||| | :   0x08000399      488902         mov qword [rdx], rax
  ||| | :   0x0800039c      488d642418     lea rsp, qword [rsp + 0x18] ; 24
  ||| | :   0x080003a1      31c0           xor eax, eax
  ||| | :   0x080003a3      5b             pop rbx
  ||| | :   0x080003a4      5d             pop rbp
  ||| | :   0x080003a5      c3             ret
  ||| | :   0x080003a6      6690           nop
(reloc.gpbcon_171)
  ||| `---> 0x080003a8      488b15000000.  mov rdx, qword [0x080003af] ; [0x80003af:8]=0x1111110125028b48  ; RELOC 32 gpbcon
  |||   :   0x080003af      488b02         mov rax, qword [rdx]
  |||   :   0x080003b2      2501111111     and eax, 0x11111101
  |||   :   0x080003b7      488902         mov qword [rdx], rax
(reloc.gpbcon_189)
  |||   :   0x080003ba      488b15000000.  mov rdx, qword [0x080003c1] ; [0x80003c1:8]=0xeb01c88348028b48  ; RELOC 32 gpbcon
  |||   :   0x080003c1      488b02         mov rax, qword [rdx]
  |||   :   0x080003c4      4883c801       or rax, 1
  |||   `=< 0x080003c8      ebbe           jmp 0x8000388
  |||       0x080003ca      660f1f440000   nop word [rax + rax]
(reloc.gpbcon_211)
  ||`-----> 0x080003d0      488b15000000.  mov rdx, qword [0x080003d7] ; [0x80003d7:8]=0x1111110125028b48  ; RELOC 32 gpbcon
  ||        0x080003d7      488b02         mov rax, qword [rdx]
  ||        0x080003da      2501111111     and eax, 0x11111101
  ||        0x080003df      488902         mov qword [rdx], rax
  ||        0x080003e2      488b15000000.  mov rdx, qword [0x080003e9] ; [0x80003e9:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
  ||        0x080003e9      488b02         mov rax, qword [rdx]
  ||        0x080003ec      4883e0fe       and rax, 0xfffffffffffffffe
  ||    .-> 0x080003f0      488902         mov qword [rdx], rax
(reloc.gpbcon_246)
  ||    :   0x080003f3      488b15000000.  mov rdx, qword [0x080003fa] ; [0x80003fa:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
  ||    :   0x080003fa      488b02         mov rax, qword [rdx]
  ||    :   0x080003fd      4883c810       or rax, 0x10
  ||    :   0x08000401      488902         mov qword [rdx], rax
  ========< 0x08000404      e92bffffff     jmp 0x8000334
  ||    :   0x08000409      0f1f80000000.  nop dword [rax]
(reloc.gpbcon_19)
  `-------> 0x08000410      488b15000000.  mov rdx, qword [0x08000417] ; [0x8000417:8]=0x1111110125028b48  ; RELOC 32 gpbcon
   |    :   0x08000417      488b02         mov rax, qword [rdx]
   |    :   0x0800041a      2501111111     and eax, 0x11111101
   |    :   0x0800041f      488902         mov qword [rdx], rax
(reloc.gpbcon_37)
   |    :   0x08000422      488b15000000.  mov rdx, qword [0x08000429] ; [0x8000429:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
   |    :   0x08000429      488b02         mov rax, qword [rdx]
   |    :   0x0800042c      4883c801       or rax, 1
   |   .--> 0x08000430      488902         mov qword [rdx], rax
(reloc.gpbcon_54)
   |   ::   0x08000433      488b15000000.  mov rdx, qword [0x0800043a] ; [0x800043a:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
   |   ::   0x0800043a      488b02         mov rax, qword [rdx]
   |   ::   0x0800043d      4883c810       or rax, 0x10
   |   ::   0x08000441      488902         mov qword [rdx], rax
  ========< 0x08000444      e9ebfeffff     jmp 0x8000334
   |   ::   0x08000449      0f1f80000000.  nop dword [rax]
   `------> 0x08000450      488b15000000.  mov rdx, qword [0x08000457] ; [0x8000457:8]=0x1111110125028b48  ; RELOC 32 gpbcon
       ::   0x08000457      488b02         mov rax, qword [rdx]
       ::   0x0800045a      2501111111     and eax, 0x11111101
       ::   0x0800045f      488902         mov qword [rdx], rax
       ::   0x08000462      488b15000000.  mov rdx, qword [0x08000469] ; [0x8000469:8]=0xe901c88348028b48  ; RELOC 32 gpbcon
       ::   0x08000469      488b02         mov rax, qword [rdx]
       ::   0x0800046c      4883c801       or rax, 1
       :`=< 0x08000470      e97bffffff     jmp 0x80003f0
       :    0x08000475      0f1f00         nop dword [rax]
  --------> 0x08000478      488b15000000.  mov rdx, qword [0x0800047f] ; [0x800047f:8]=0x1111110125028b48  ; RELOC 32 gpbcon
       :    0x0800047f      488b02         mov rax, qword [rdx]
       :    0x08000482      2501111111     and eax, 0x11111101
       :    0x08000487      488902         mov qword [rdx], rax
       :    0x0800048a      488b15000000.  mov rdx, qword [0x08000491] ; [0x8000491:8]=0xebfee08348028b48  ; RELOC 32 gpbcon
       :    0x08000491      488b02         mov rax, qword [rdx]
       :    0x08000494      4883e0fe       and rax, 0xfffffffffffffffe
       `==< 0x08000498      eb96           jmp 0x8000430
  --------> 0x0800049a      488b15000000.  mov rdx, qword [0x080004a1] ; [0x80004a1:8]=0x1111110125028b48  ; RELOC 32 gpbcon
            0x080004a1      488b02         mov rax, qword [rdx]
            0x080004a4      2501111111     and eax, 0x11111101
            0x080004a9      488902         mov qword [rdx], rax
            0x080004ac      488b15000000.  mov rdx, qword [0x080004b3] ; [0x80004b3:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
            0x080004b3      488b02         mov rax, qword [rdx]
            0x080004b6      4883e0fe       and rax, 0xfffffffffffffffe
        .-> 0x080004ba      488902         mov qword [rdx], rax
        :   0x080004bd      488b15000000.  mov rdx, qword [0x080004c4] ; [0x80004c4:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
        :   0x080004c4      488b02         mov rax, qword [rdx]
        :   0x080004c7      4883c810       or rax, 0x10
        :   0x080004cb      488902         mov qword [rdx], rax
  ========< 0x080004ce      e961feffff     jmp 0x8000334
(reloc.gpbcon_214)
  --------> 0x080004d3      488b15000000.  mov rdx, qword [0x080004da] ; [0x80004da:8]=0x1111110125028b48  ; RELOC 32 gpbcon
        :   0x080004da      488b02         mov rax, qword [rdx]
        :   0x080004dd      2501111111     and eax, 0x11111101
        :   0x080004e2      488902         mov qword [rdx], rax
(reloc.gpbcon_232)
        :   0x080004e5      488b15000000.  mov rdx, qword [0x080004ec] ; [0x80004ec:8]=0xeb01c88348028b48  ; RELOC 32 gpbcon
        :   0x080004ec      488b02         mov rax, qword [rdx]
        :   0x080004ef      4883c801       or rax, 1
        `=< 0x080004f3      ebc5           jmp 0x80004ba
(reloc.gpbcon_248)
  --------> 0x080004f5      488b15000000.  mov rdx, qword [0x080004fc] ; [0x80004fc:8]=0x1111110125028b48  ; RELOC 32 gpbcon
            0x080004fc      488b02         mov rax, qword [rdx]
            0x080004ff      2501111111     and eax, 0x11111101
            0x08000504      488902         mov qword [rdx], rax
(reloc.gpbcon_10)
            0x08000507      488b15000000.  mov rdx, qword [0x0800050e] ; [0x800050e:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
            0x0800050e      488b02         mov rax, qword [rdx]
            0x08000511      4883c801       or rax, 1
        .-> 0x08000515      488902         mov qword [rdx], rax
        :   0x08000518      488b15000000.  mov rdx, qword [0x0800051f] ; [0x800051f:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
        :   0x0800051f      488b02         mov rax, qword [rdx]
        :   0x08000522      4883c810       or rax, 0x10
        :   0x08000526      488902         mov qword [rdx], rax
  ========< 0x08000529      e906feffff     jmp 0x8000334
(reloc.gpbcon_49)
  --------> 0x0800052e      488b15000000.  mov rdx, qword [0x08000535] ; [0x8000535:8]=0x1111110125028b48  ; RELOC 32 gpbcon
        :   0x08000535      488b02         mov rax, qword [rdx]
        :   0x08000538      2501111111     and eax, 0x11111101
        :   0x0800053d      488902         mov qword [rdx], rax
(reloc.gpbcon_67)
        :   0x08000540      488b15000000.  mov rdx, qword [0x08000547] ; [0x8000547:8]=0xebfee08348028b48  ; RELOC 32 gpbcon
        :   0x08000547      488b02         mov rax, qword [rdx]
        :   0x0800054a      4883e0fe       and rax, 0xfffffffffffffffe
        `=< 0x0800054e      ebc5           jmp 0x8000515
(reloc.gpbcon_83)
  --------> 0x08000550      488b15000000.  mov rdx, qword [0x08000557] ; [0x8000557:8]=0x1111110125028b48  ; RELOC 32 gpbcon
            0x08000557      488b02         mov rax, qword [rdx]
            0x0800055a      2501111111     and eax, 0x11111101
            0x0800055f      488902         mov qword [rdx], rax
            0x08000562      488b15000000.  mov rdx, qword [0x08000569] ; [0x8000569:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
            0x08000569      488b02         mov rax, qword [rdx]
            0x0800056c      4883e0fe       and rax, 0xfffffffffffffffe
            0x08000570      488902         mov qword [rdx], rax
(reloc.gpbcon_118)
            0x08000573      488b15000000.  mov rdx, qword [0x0800057a] ; [0x800057a:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
            0x0800057a      488b02         mov rax, qword [rdx]
[0x08000070]> pd 500
            ;-- entry0:
            ;-- section..text:
            ;-- led_drv_open:
            ;-- rip:
            0x08000070      55             push rbp                    ; [02] m-r-x section size 2381 named .text
            0x08000071      31c0           xor eax, eax
            0x08000073      4889e5         mov rbp, rsp
            0x08000076      5d             pop rbp
            0x08000077      c3             ret
            0x08000078      0f1f84000000.  nop dword [rax + rax]
            ;-- led_drv_write:
            0x08000080      55             push rbp
            0x08000081      4889e5         mov rbp, rsp
            0x08000084      53             push rbx
            0x08000085      488d6424e8     lea rsp, qword [rsp - 0x18]
            0x0800008a      488d5de4       lea rbx, qword [rbp - 0x1c]
            0x0800008e      488d3b         lea rdi, qword [rbx]
            0x08000091      48c745e40000.  mov qword [rbp - 0x1c], 0
            0x08000099      c745ec000000.  mov dword [rbp - 0x14], 0
(reloc._copy_from_user_161)
            0x080000a0      e800000000     call 0x80000a5                ; RELOC 32 _copy_from_user
            0x080000a5      b907000000     mov ecx, 7
            0x080000aa      48c7c7000000.  mov rdi, 0                    ; RELOC 32
            0x080000b1      488d33         lea rsi, qword [rbx]
            0x080000b4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
        ,=< 0x080000b6      0f8484020000   je 0x8000340
        |   0x080000bc      b908000000     mov ecx, 8
        |   0x080000c1      48c7c7000000.  mov rdi, 0                    ; RELOC 32
        |   0x080000c8      488d33         lea rsi, qword [rbx]
        |   0x080000cb      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
       ,==< 0x080000cd      0f842d020000   je 0x8000300
       ||   0x080000d3      b907000000     mov ecx, 7
       ||   0x080000d8      48c7c7000000.  mov rdi, 0                    ; RELOC 32
       ||   0x080000df      488d33         lea rsi, qword [rbx]
       ||   0x080000e2      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
      ,===< 0x080000e4      0f84be020000   je 0x80003a8
      |||   0x080000ea      b908000000     mov ecx, 8
      |||   0x080000ef      48c7c7000000.  mov rdi, 0                    ; RELOC 32
      |||   0x080000f6      488d33         lea rsi, qword [rbx]
      |||   0x080000f9      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
     ,====< 0x080000fb      0f8467020000   je 0x8000368
     ||||   0x08000101      b907000000     mov ecx, 7
     ||||   0x08000106      48c7c7000000.  mov rdi, 0                    ; RELOC 32
     ||||   0x0800010d      488d33         lea rsi, qword [rbx]
     ||||   0x08000110      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
    ,=====< 0x08000112      0f84b8020000   je 0x80003d0
    |||||   0x08000118      b908000000     mov ecx, 8
    |||||   0x0800011d      48c7c7000000.  mov rdi, 0                    ; RELOC 32
    |||||   0x08000124      488d33         lea rsi, qword [rbx]
    |||||   0x08000127      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
   ,======< 0x08000129      0f8421030000   je 0x8000450
   ||||||   0x0800012f      b907000000     mov ecx, 7
   ||||||   0x08000134      48c7c7000000.  mov rdi, 0                    ; RELOC 32
   ||||||   0x0800013b      488d33         lea rsi, qword [rbx]
   ||||||   0x0800013e      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ,=======< 0x08000140      0f84ca020000   je 0x8000410
  |||||||   0x08000146      b908000000     mov ecx, 8
  |||||||   0x0800014b      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x08000152      488d33         lea rsi, qword [rbx]
  |||||||   0x08000155      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x08000157      0f841b030000   je 0x8000478
  |||||||   0x0800015d      b907000000     mov ecx, 7
  |||||||   0x08000162      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x08000169      488d33         lea rsi, qword [rbx]
  |||||||   0x0800016c      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x0800016e      0f8426030000   je 0x800049a
  |||||||   0x08000174      b908000000     mov ecx, 8
  |||||||   0x08000179      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x08000180      488d33         lea rsi, qword [rbx]
  |||||||   0x08000183      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x08000185      0f8448030000   je 0x80004d3
  |||||||   0x0800018b      b907000000     mov ecx, 7
  |||||||   0x08000190      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x08000197      488d33         lea rsi, qword [rbx]
  |||||||   0x0800019a      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x0800019c      0f8453030000   je 0x80004f5
  |||||||   0x080001a2      b908000000     mov ecx, 8
  |||||||   0x080001a7      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x080001ae      488d33         lea rsi, qword [rbx]
  |||||||   0x080001b1      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x080001b3      0f8475030000   je 0x800052e
  |||||||   0x080001b9      b907000000     mov ecx, 7
  |||||||   0x080001be      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x080001c5      488d33         lea rsi, qword [rbx]
  |||||||   0x080001c8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x080001ca      0f8480030000   je 0x8000550
  |||||||   0x080001d0      b908000000     mov ecx, 8
  |||||||   0x080001d5      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x080001dc      488d33         lea rsi, qword [rbx]
  |||||||   0x080001df      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x080001e1      0f84a2030000   je 0x8000589
  |||||||   0x080001e7      b907000000     mov ecx, 7
  |||||||   0x080001ec      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x080001f3      488d33         lea rsi, qword [rbx]
  |||||||   0x080001f6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x080001f8      0f84ad030000   je 0x80005ab
  |||||||   0x080001fe      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x08000205      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_9)
  |||||||   0x08000208      e800000000     call 0x800020d                ; RELOC 32 strcmp
  |||||||   0x0800020d      85c0           test eax, eax
  ========< 0x0800020f      0f84cf030000   je 0x80005e4
  |||||||   0x08000215      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x0800021c      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_32)
  |||||||   0x0800021f      e800000000     call 0x8000224                ; RELOC 32 strcmp
  |||||||   0x08000224      85c0           test eax, eax
  ========< 0x08000226      0f84da030000   je 0x8000606
  |||||||   0x0800022c      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x08000233      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_55)
  |||||||   0x08000236      e800000000     call 0x800023b                ; RELOC 32 strcmp
  |||||||   0x0800023b      85c0           test eax, eax
  ========< 0x0800023d      0f8435040000   je 0x8000678
  |||||||   0x08000243      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x0800024a      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_78)
  |||||||   0x0800024d      e800000000     call 0x8000252                ; RELOC 32 strcmp
  |||||||   0x08000252      85c0           test eax, eax
  ========< 0x08000254      0f84e5030000   je 0x800063f
  |||||||   0x0800025a      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x08000261      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_101)
  |||||||   0x08000264      e800000000     call 0x8000269                ; RELOC 32 strcmp
  |||||||   0x08000269      85c0           test eax, eax
  ========< 0x0800026b      0f84a9040000   je 0x800071a
  |||||||   0x08000271      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x08000278      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_124)
  |||||||   0x0800027b      e800000000     call 0x8000280                ; RELOC 32 strcmp
  |||||||   0x08000280      85c0           test eax, eax
  ========< 0x08000282      0f8470040000   je 0x80006f8
  |||||||   0x08000288      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x0800028f      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_147)
  |||||||   0x08000292      e800000000     call 0x8000297                ; RELOC 32 strcmp
  |||||||   0x08000297      85c0           test eax, eax
  ========< 0x08000299      0f8420040000   je 0x80006bf
  |||||||   0x0800029f      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x080002a6      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_170)
  |||||||   0x080002a9      e800000000     call 0x80002ae                ; RELOC 32 strcmp
  |||||||   0x080002ae      85c0           test eax, eax
  ========< 0x080002b0      0f84e4030000   je 0x800069a
  |||||||   0x080002b6      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x080002bd      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_193)
  |||||||   0x080002c0      e800000000     call 0x80002c5                ; RELOC 32 strcmp
  |||||||   0x080002c5      85c0           test eax, eax
  ========< 0x080002c7      756b           jne 0x8000334
(reloc.gpbcon_204)
  |||||||   0x080002c9      488b15000000.  mov rdx, qword [0x080002d0] ; [0x80002d0:8]=0x1111110125028b48  ; RELOC 32 gpbcon
  |||||||   0x080002d0      488b02         mov rax, qword [rdx]
  |||||||   0x080002d3      2501111111     and eax, 0x11111101
  |||||||   0x080002d8      488902         mov qword [rdx], rax
(reloc.gpbcon_222)
  |||||||   0x080002db      488b15000000.  mov rdx, qword [0x080002e2] ; [0x80002e2:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
  |||||||   0x080002e2      488b02         mov rax, qword [rdx]
  |||||||   0x080002e5      4883c801       or rax, 1
  --------> 0x080002e9      488902         mov qword [rdx], rax
(reloc.gpbcon_239)
  |||||||   0x080002ec      488b15000000.  mov rdx, qword [0x080002f3] ; [0x80002f3:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
  |||||||   0x080002f3      488b02         mov rax, qword [rdx]
  |||||||   0x080002f6      4883c810       or rax, 0x10
  |||||||   0x080002fa      488902         mov qword [rdx], rax
  ========< 0x080002fd      eb35           jmp 0x8000334
  |||||||   0x080002ff      90             nop
(reloc.gpbcon_3)
  |||||`--> 0x08000300      488b15000000.  mov rdx, qword [0x08000307] ; [0x8000307:8]=0x1111110125028b48  ; RELOC 32 gpbcon
  ||||| |   0x08000307      488b02         mov rax, qword [rdx]
  ||||| |   0x0800030a      2501111111     and eax, 0x11111101
  ||||| |   0x0800030f      488902         mov qword [rdx], rax
(reloc.gpbcon_21)
  ||||| |   0x08000312      488b15000000.  mov rdx, qword [0x08000319] ; [0x8000319:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
  ||||| |   0x08000319      488b02         mov rax, qword [rdx]
  ||||| |   0x0800031c      4883c801       or rax, 1
  |||||.--> 0x08000320      488902         mov qword [rdx], rax
(reloc.gpbcon_38)
  |||||:|   0x08000323      488b15000000.  mov rdx, qword [0x0800032a] ; [0x800032a:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
  |||||:|   0x0800032a      488b02         mov rax, qword [rdx]
  |||||:|   0x0800032d      4883c810       or rax, 0x10
  |||||:|   0x08000331      488902         mov qword [rdx], rax
  --------> 0x08000334      488d642418     lea rsp, qword [rsp + 0x18] ; 24
  |||||:|   0x08000339      31c0           xor eax, eax
  |||||:|   0x0800033b      5b             pop rbx
  |||||:|   0x0800033c      5d             pop rbp
  |||||:|   0x0800033d      c3             ret
  |||||:|   0x0800033e      6690           nop
  |||||:`-> 0x08000340      488b15000000.  mov rdx, qword [0x08000347] ; [0x8000347:8]=0x1111110125028b48  ; RELOC 32 gpbcon
  |||||:    0x08000347      488b02         mov rax, qword [rdx]
  |||||:    0x0800034a      2501111111     and eax, 0x11111101
  |||||:    0x0800034f      488902         mov qword [rdx], rax
(reloc.gpbcon_85)
  |||||:    0x08000352      488b15000000.  mov rdx, qword [0x08000359] ; [0x8000359:8]=0xebfee08348028b48  ; RELOC 32 gpbcon
  |||||:    0x08000359      488b02         mov rax, qword [rdx]
  |||||:    0x0800035c      4883e0fe       and rax, 0xfffffffffffffffe
  |||||`==< 0x08000360      ebbe           jmp 0x8000320
  |||||     0x08000362      660f1f440000   nop word [rax + rax]
(reloc.gpbcon_107)
  |||`----> 0x08000368      488b15000000.  mov rdx, qword [0x0800036f] ; [0x800036f:8]=0x1111110125028b48  ; RELOC 32 gpbcon
  ||| |     0x0800036f      488b02         mov rax, qword [rdx]
  ||| |     0x08000372      2501111111     and eax, 0x11111101
  ||| |     0x08000377      488902         mov qword [rdx], rax
(reloc.gpbcon_125)
  ||| |     0x0800037a      488b15000000.  mov rdx, qword [0x08000381] ; [0x8000381:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
  ||| |     0x08000381      488b02         mov rax, qword [rdx]
  ||| |     0x08000384      4883e0fe       and rax, 0xfffffffffffffffe
  ||| | .-> 0x08000388      488902         mov qword [rdx], rax
(reloc.gpbcon_142)
  ||| | :   0x0800038b      488b15000000.  mov rdx, qword [0x08000392] ; [0x8000392:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
  ||| | :   0x08000392      488b02         mov rax, qword [rdx]
  ||| | :   0x08000395      4883c810       or rax, 0x10
  ||| | :   0x08000399      488902         mov qword [rdx], rax
  ||| | :   0x0800039c      488d642418     lea rsp, qword [rsp + 0x18] ; 24
  ||| | :   0x080003a1      31c0           xor eax, eax
  ||| | :   0x080003a3      5b             pop rbx
  ||| | :   0x080003a4      5d             pop rbp
  ||| | :   0x080003a5      c3             ret
  ||| | :   0x080003a6      6690           nop
(reloc.gpbcon_171)
  ||| `---> 0x080003a8      488b15000000.  mov rdx, qword [0x080003af] ; [0x80003af:8]=0x1111110125028b48  ; RELOC 32 gpbcon
  |||   :   0x080003af      488b02         mov rax, qword [rdx]
  |||   :   0x080003b2      2501111111     and eax, 0x11111101
  |||   :   0x080003b7      488902         mov qword [rdx], rax
(reloc.gpbcon_189)
  |||   :   0x080003ba      488b15000000.  mov rdx, qword [0x080003c1] ; [0x80003c1:8]=0xeb01c88348028b48  ; RELOC 32 gpbcon
  |||   :   0x080003c1      488b02         mov rax, qword [rdx]
  |||   :   0x080003c4      4883c801       or rax, 1
  |||   `=< 0x080003c8      ebbe           jmp 0x8000388
  |||       0x080003ca      660f1f440000   nop word [rax + rax]
(reloc.gpbcon_211)
  ||`-----> 0x080003d0      488b15000000.  mov rdx, qword [0x080003d7] ; [0x80003d7:8]=0x1111110125028b48  ; RELOC 32 gpbcon
  ||        0x080003d7      488b02         mov rax, qword [rdx]
  ||        0x080003da      2501111111     and eax, 0x11111101
  ||        0x080003df      488902         mov qword [rdx], rax
  ||        0x080003e2      488b15000000.  mov rdx, qword [0x080003e9] ; [0x80003e9:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
  ||        0x080003e9      488b02         mov rax, qword [rdx]
  ||        0x080003ec      4883e0fe       and rax, 0xfffffffffffffffe
  ||    .-> 0x080003f0      488902         mov qword [rdx], rax
(reloc.gpbcon_246)
  ||    :   0x080003f3      488b15000000.  mov rdx, qword [0x080003fa] ; [0x80003fa:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
  ||    :   0x080003fa      488b02         mov rax, qword [rdx]
  ||    :   0x080003fd      4883c810       or rax, 0x10
  ||    :   0x08000401      488902         mov qword [rdx], rax
  ========< 0x08000404      e92bffffff     jmp 0x8000334
  ||    :   0x08000409      0f1f80000000.  nop dword [rax]
(reloc.gpbcon_19)
  `-------> 0x08000410      488b15000000.  mov rdx, qword [0x08000417] ; [0x8000417:8]=0x1111110125028b48  ; RELOC 32 gpbcon
   |    :   0x08000417      488b02         mov rax, qword [rdx]
   |    :   0x0800041a      2501111111     and eax, 0x11111101
   |    :   0x0800041f      488902         mov qword [rdx], rax
(reloc.gpbcon_37)
   |    :   0x08000422      488b15000000.  mov rdx, qword [0x08000429] ; [0x8000429:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
   |    :   0x08000429      488b02         mov rax, qword [rdx]
   |    :   0x0800042c      4883c801       or rax, 1
   |   .--> 0x08000430      488902         mov qword [rdx], rax
(reloc.gpbcon_54)
   |   ::   0x08000433      488b15000000.  mov rdx, qword [0x0800043a] ; [0x800043a:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
   |   ::   0x0800043a      488b02         mov rax, qword [rdx]
   |   ::   0x0800043d      4883c810       or rax, 0x10
   |   ::   0x08000441      488902         mov qword [rdx], rax
  ========< 0x08000444      e9ebfeffff     jmp 0x8000334
   |   ::   0x08000449      0f1f80000000.  nop dword [rax]
   `------> 0x08000450      488b15000000.  mov rdx, qword [0x08000457] ; [0x8000457:8]=0x1111110125028b48  ; RELOC 32 gpbcon
       ::   0x08000457      488b02         mov rax, qword [rdx]
       ::   0x0800045a      2501111111     and eax, 0x11111101
       ::   0x0800045f      488902         mov qword [rdx], rax
       ::   0x08000462      488b15000000.  mov rdx, qword [0x08000469] ; [0x8000469:8]=0xe901c88348028b48  ; RELOC 32 gpbcon
       ::   0x08000469      488b02         mov rax, qword [rdx]
       ::   0x0800046c      4883c801       or rax, 1
       :`=< 0x08000470      e97bffffff     jmp 0x80003f0
       :    0x08000475      0f1f00         nop dword [rax]
  --------> 0x08000478      488b15000000.  mov rdx, qword [0x0800047f] ; [0x800047f:8]=0x1111110125028b48  ; RELOC 32 gpbcon
       :    0x0800047f      488b02         mov rax, qword [rdx]
       :    0x08000482      2501111111     and eax, 0x11111101
       :    0x08000487      488902         mov qword [rdx], rax
       :    0x0800048a      488b15000000.  mov rdx, qword [0x08000491] ; [0x8000491:8]=0xebfee08348028b48  ; RELOC 32 gpbcon
       :    0x08000491      488b02         mov rax, qword [rdx]
       :    0x08000494      4883e0fe       and rax, 0xfffffffffffffffe
       `==< 0x08000498      eb96           jmp 0x8000430
  --------> 0x0800049a      488b15000000.  mov rdx, qword [0x080004a1] ; [0x80004a1:8]=0x1111110125028b48  ; RELOC 32 gpbcon
            0x080004a1      488b02         mov rax, qword [rdx]
            0x080004a4      2501111111     and eax, 0x11111101
            0x080004a9      488902         mov qword [rdx], rax
            0x080004ac      488b15000000.  mov rdx, qword [0x080004b3] ; [0x80004b3:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
            0x080004b3      488b02         mov rax, qword [rdx]
            0x080004b6      4883e0fe       and rax, 0xfffffffffffffffe
        .-> 0x080004ba      488902         mov qword [rdx], rax
        :   0x080004bd      488b15000000.  mov rdx, qword [0x080004c4] ; [0x80004c4:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
        :   0x080004c4      488b02         mov rax, qword [rdx]
        :   0x080004c7      4883c810       or rax, 0x10
        :   0x080004cb      488902         mov qword [rdx], rax
  ========< 0x080004ce      e961feffff     jmp 0x8000334
(reloc.gpbcon_214)
  --------> 0x080004d3      488b15000000.  mov rdx, qword [0x080004da] ; [0x80004da:8]=0x1111110125028b48  ; RELOC 32 gpbcon
        :   0x080004da      488b02         mov rax, qword [rdx]
        :   0x080004dd      2501111111     and eax, 0x11111101
        :   0x080004e2      488902         mov qword [rdx], rax
(reloc.gpbcon_232)
        :   0x080004e5      488b15000000.  mov rdx, qword [0x080004ec] ; [0x80004ec:8]=0xeb01c88348028b48  ; RELOC 32 gpbcon
        :   0x080004ec      488b02         mov rax, qword [rdx]
        :   0x080004ef      4883c801       or rax, 1
        `=< 0x080004f3      ebc5           jmp 0x80004ba
(reloc.gpbcon_248)
  --------> 0x080004f5      488b15000000.  mov rdx, qword [0x080004fc] ; [0x80004fc:8]=0x1111110125028b48  ; RELOC 32 gpbcon
            0x080004fc      488b02         mov rax, qword [rdx]
            0x080004ff      2501111111     and eax, 0x11111101
            0x08000504      488902         mov qword [rdx], rax
(reloc.gpbcon_10)
            0x08000507      488b15000000.  mov rdx, qword [0x0800050e] ; [0x800050e:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
            0x0800050e      488b02         mov rax, qword [rdx]
            0x08000511      4883c801       or rax, 1
        .-> 0x08000515      488902         mov qword [rdx], rax
        :   0x08000518      488b15000000.  mov rdx, qword [0x0800051f] ; [0x800051f:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
        :   0x0800051f      488b02         mov rax, qword [rdx]
        :   0x08000522      4883c810       or rax, 0x10
        :   0x08000526      488902         mov qword [rdx], rax
  ========< 0x08000529      e906feffff     jmp 0x8000334
(reloc.gpbcon_49)
  --------> 0x0800052e      488b15000000.  mov rdx, qword [0x08000535] ; [0x8000535:8]=0x1111110125028b48  ; RELOC 32 gpbcon
        :   0x08000535      488b02         mov rax, qword [rdx]
        :   0x08000538      2501111111     and eax, 0x11111101
        :   0x0800053d      488902         mov qword [rdx], rax
(reloc.gpbcon_67)
        :   0x08000540      488b15000000.  mov rdx, qword [0x08000547] ; [0x8000547:8]=0xebfee08348028b48  ; RELOC 32 gpbcon
        :   0x08000547      488b02         mov rax, qword [rdx]
        :   0x0800054a      4883e0fe       and rax, 0xfffffffffffffffe
        `=< 0x0800054e      ebc5           jmp 0x8000515
(reloc.gpbcon_83)
  --------> 0x08000550      488b15000000.  mov rdx, qword [0x08000557] ; [0x8000557:8]=0x1111110125028b48  ; RELOC 32 gpbcon
            0x08000557      488b02         mov rax, qword [rdx]
            0x0800055a      2501111111     and eax, 0x11111101
            0x0800055f      488902         mov qword [rdx], rax
            0x08000562      488b15000000.  mov rdx, qword [0x08000569] ; [0x8000569:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
            0x08000569      488b02         mov rax, qword [rdx]
            0x0800056c      4883e0fe       and rax, 0xfffffffffffffffe
        .-> 0x08000570      488902         mov qword [rdx], rax
(reloc.gpbcon_118)
        :   0x08000573      488b15000000.  mov rdx, qword [0x0800057a] ; [0x800057a:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
        :   0x0800057a      488b02         mov rax, qword [rdx]
        :   0x0800057d      4883c810       or rax, 0x10
        :   0x08000581      488902         mov qword [rdx], rax
  ========< 0x08000584      e9abfdffff     jmp 0x8000334
(reloc.gpbcon_140)
  --------> 0x08000589      488b15000000.  mov rdx, qword [0x08000590] ; [0x8000590:8]=0x1111110125028b48  ; RELOC 32 gpbcon
        :   0x08000590      488b02         mov rax, qword [rdx]
        :   0x08000593      2501111111     and eax, 0x11111101
        :   0x08000598      488902         mov qword [rdx], rax
(reloc.gpbcon_158)
        :   0x0800059b      488b15000000.  mov rdx, qword [0x080005a2] ; [0x80005a2:8]=0xeb01c88348028b48  ; RELOC 32 gpbcon
        :   0x080005a2      488b02         mov rax, qword [rdx]
        :   0x080005a5      4883c801       or rax, 1
        `=< 0x080005a9      ebc5           jmp 0x8000570
(reloc.gpbcon_174)
  --------> 0x080005ab      488b15000000.  mov rdx, qword [0x080005b2] ; [0x80005b2:8]=0x1111110125028b48  ; RELOC 32 gpbcon
            0x080005b2      488b02         mov rax, qword [rdx]
            0x080005b5      2501111111     and eax, 0x11111101
            0x080005ba      488902         mov qword [rdx], rax
(reloc.gpbcon_192)
            0x080005bd      488b15000000.  mov rdx, qword [0x080005c4] ; [0x80005c4:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
            0x080005c4      488b02         mov rax, qword [rdx]
            0x080005c7      4883c801       or rax, 1
        .-> 0x080005cb      488902         mov qword [rdx], rax
(reloc.gpbcon_209)
        :   0x080005ce      488b15000000.  mov rdx, qword [0x080005d5] ; [0x80005d5:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
        :   0x080005d5      488b02         mov rax, qword [rdx]
        :   0x080005d8      4883c810       or rax, 0x10
        :   0x080005dc      488902         mov qword [rdx], rax
  ========< 0x080005df      e950fdffff     jmp 0x8000334
(reloc.gpbcon_231)
  --------> 0x080005e4      488b15000000.  mov rdx, qword [0x080005eb] ; [0x80005eb:8]=0x1111110125028b48  ; RELOC 32 gpbcon
        :   0x080005eb      488b02         mov rax, qword [rdx]
        :   0x080005ee      2501111111     and eax, 0x11111101
        :   0x080005f3      488902         mov qword [rdx], rax
(reloc.gpbcon_249)
        :   0x080005f6      488b15000000.  mov rdx, qword [0x080005fd] ; [0x80005fd:8]=0xebfee08348028b48  ; RELOC 32 gpbcon
        :   0x080005fd      488b02         mov rax, qword [rdx]
        :   0x08000600      4883e0fe       and rax, 0xfffffffffffffffe
        `=< 0x08000604      ebc5           jmp 0x80005cb
(reloc.gpbcon_9)
  --------> 0x08000606      488b15000000.  mov rdx, qword [0x0800060d] ; [0x800060d:8]=0x1111110125028b48  ; RELOC 32 gpbcon
            0x0800060d      488b02         mov rax, qword [rdx]
            0x08000610      2501111111     and eax, 0x11111101
            0x08000615      488902         mov qword [rdx], rax
(reloc.gpbcon_27)
            0x08000618      488b15000000.  mov rdx, qword [0x0800061f] ; [0x800061f:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
            0x0800061f      488b02         mov rax, qword [rdx]
            0x08000622      4883e0fe       and rax, 0xfffffffffffffffe
        .-> 0x08000626      488902         mov qword [rdx], rax
(reloc.gpbcon_44)
        :   0x08000629      488b15000000.  mov rdx, qword [0x08000630] ; [0x8000630:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
        :   0x08000630      488b02         mov rax, qword [rdx]
        :   0x08000633      4883c810       or rax, 0x10
        :   0x08000637      488902         mov qword [rdx], rax
  ========< 0x0800063a      e9f5fcffff     jmp 0x8000334
(reloc.gpbcon_66)
  --------> 0x0800063f      488b15000000.  mov rdx, qword [0x08000646] ; [0x8000646:8]=0x1111110125028b48  ; RELOC 32 gpbcon
        :   0x08000646      488b02         mov rax, qword [rdx]
        :   0x08000649      2501111111     and eax, 0x11111101
        :   0x0800064e      488902         mov qword [rdx], rax
(reloc.gpbcon_84)
        :   0x08000651      488b15000000.  mov rdx, qword [0x08000658] ; [0x8000658:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
        :   0x08000658      488b02         mov rax, qword [rdx]
        :   0x0800065b      4883c801       or rax, 1
       .--> 0x0800065f      488902         mov qword [rdx], rax
(reloc.gpbcon_101)
       ::   0x08000662      488b15000000.  mov rdx, qword [0x08000669] ; [0x8000669:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
       ::   0x08000669      488b02         mov rax, qword [rdx]
       ::   0x0800066c      4883c810       or rax, 0x10
       ::   0x08000670      488902         mov qword [rdx], rax
  ========< 0x08000673      e9bcfcffff     jmp 0x8000334
(reloc.gpbcon_123)
  --------> 0x08000678      488b15000000.  mov rdx, qword [0x0800067f] ; [0x800067f:8]=0x1111110125028b48  ; RELOC 32 gpbcon
       ::   0x0800067f      488b02         mov rax, qword [rdx]
       ::   0x08000682      2501111111     and eax, 0x11111101
       ::   0x08000687      488902         mov qword [rdx], rax
       ::   0x0800068a      488b15000000.  mov rdx, qword [0x08000691] ; [0x8000691:8]=0xeb01c88348028b48  ; RELOC 32 gpbcon
       ::   0x08000691      488b02         mov rax, qword [rdx]
       ::   0x08000694      4883c801       or rax, 1
       :`=< 0x08000698      eb8c           jmp 0x8000626
(reloc.gpbcon_157)
  --------> 0x0800069a      488b15000000.  mov rdx, qword [0x080006a1] ; [0x80006a1:8]=0x1111110125028b48  ; RELOC 32 gpbcon
       :    0x080006a1      488b02         mov rax, qword [rdx]
       :    0x080006a4      2501111111     and eax, 0x11111101
       :    0x080006a9      488902         mov qword [rdx], rax
       :    0x080006ac      488b15000000.  mov rdx, qword [0x080006b3] ; [0x80006b3:8]=0xe9fee08348028b48  ; RELOC 32 gpbcon
       :    0x080006b3      488b02         mov rax, qword [rdx]
       :    0x080006b6      4883e0fe       and rax, 0xfffffffffffffffe
  ========< 0x080006ba      e92afcffff     jmp 0x80002e9
(reloc.gpbcon_194)
  --------> 0x080006bf      488b15000000.  mov rdx, qword [0x080006c6] ; [0x80006c6:8]=0x1111110125028b48  ; RELOC 32 gpbcon
       :    0x080006c6      488b02         mov rax, qword [rdx]
       :    0x080006c9      2501111111     and eax, 0x11111101
       :    0x080006ce      488902         mov qword [rdx], rax
(reloc.gpbcon_212)
       :    0x080006d1      488b15000000.  mov rdx, qword [0x080006d8] ; [0x80006d8:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
       :    0x080006d8      488b02         mov rax, qword [rdx]
       :    0x080006db      4883c801       or rax, 1
       :.-> 0x080006df      488902         mov qword [rdx], rax
       ::   0x080006e2      488b15000000.  mov rdx, qword [0x080006e9] ; [0x80006e9:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
       ::   0x080006e9      488b02         mov rax, qword [rdx]
       ::   0x080006ec      4883c810       or rax, 0x10
       ::   0x080006f0      488902         mov qword [rdx], rax
  ========< 0x080006f3      e93cfcffff     jmp 0x8000334
  --------> 0x080006f8      488b15000000.  mov rdx, qword [0x080006ff] ; [0x80006ff:8]=0x1111110125028b48  ; RELOC 32 gpbcon
       ::   0x080006ff      488b02         mov rax, qword [rdx]
       ::   0x08000702      2501111111     and eax, 0x11111101
       ::   0x08000707      488902         mov qword [rdx], rax
(reloc.gpbcon_13)
       ::   0x0800070a      488b15000000.  mov rdx, qword [0x08000711] ; [0x8000711:8]=0xebfee08348028b48  ; RELOC 32 gpbcon
       ::   0x08000711      488b02         mov rax, qword [rdx]
       ::   0x08000714      4883e0fe       and rax, 0xfffffffffffffffe
       :`=< 0x08000718      ebc5           jmp 0x80006df
  --------> 0x0800071a      488b15000000.  mov rdx, qword [0x08000721] ; [0x8000721:8]=0x1111110125028b48  ; RELOC 32 gpbcon
       :    0x08000721      488b02         mov rax, qword [rdx]
       :    0x08000724      2501111111     and eax, 0x11111101
       :    0x08000729      488902         mov qword [rdx], rax
(reloc.gpbcon_47)
       :    0x0800072c      488b15000000.  mov rdx, qword [0x08000733] ; [0x8000733:8]=0xe9fee08348028b48  ; RELOC 32 gpbcon
       :    0x08000733      488b02         mov rax, qword [rdx]
       :    0x08000736      4883e0fe       and rax, 0xfffffffffffffffe
       `==< 0x0800073a      e920ffffff     jmp 0x800065f
            0x0800073f      90             nop
            ;-- led_drv_init:
            ;-- init_module:
            0x08000740      31c0           xor eax, eax
            0x08000742      66666666662e.  nop word cs:[rax + rax]
        .-> 0x08000750      48c780000000.  mov qword [rax], 0            ; RELOC 32
(reloc.gpbcon_94)
        :   0x0800075b      48c780000000.  mov qword [rax], 0            ; RELOC 32 gpbcon
        :   0x08000766      488d4008       lea rax, qword [rax + 8]    ; 8
        :   0x0800076a      4883f860       cmp rax, 0x60               ; '`' ; 96
        `=< 0x0800076e      75e0           jne 0x8000750
            0x08000770      55             push rbp
            0x08000771      49c7c0000000.  mov r8, 0                     ; RELOC 32
            0x08000778      48c7c1000000.  mov rcx, 0                    ; RELOC 32
            0x0800077f      4889e5         mov rbp, rsp
            0x08000782      ba00010000     mov edx, 0x100              ; 256
            0x08000787      53             push rbx
            0x08000788      31f6           xor esi, esi
            0x0800078a      31ff           xor edi, edi
            0x0800078c      488d6424f8     lea rsp, qword [rsp - 8]
            0x08000791      31db           xor ebx, ebx
(reloc.__register_chrdev_148)
            0x08000793      e800000000     call 0x8000798                ; RELOC 32 __register_chrdev
(reloc.__this_module_155)
            0x08000798      48c7c7000000.  mov rdi, 0                    ; RELOC 32 __this_module
            0x0800079f      48c7c2000000.  mov rdx, 0                    ; RELOC 32
            0x080007a6      48c7c6000000.  mov rsi, 0                    ; RELOC 32
(reloc.major_175)
            0x080007ad      890500000000   mov dword [0x080007b3], eax ; [0x80007b3:4]=232  ; RELOC 32 major
(reloc.__class_create_180)
            0x080007b3      e800000000     call 0x80007b8                ; RELOC 32 __class_create
            0x080007b8      488905000000.  mov qword [0x080007bf], rax ; [0x80007bf:8]=0x5c7  ; RELOC 32
(reloc.minor_193)
            0x080007bf      c70500000000.  mov dword [0x080007c9], 0   ; [0x80007c9:4]=0xeb388d48  ; RELOC 32 minor
            0x080007c9      488d38         lea rdi, qword [rax]
        ,=< 0x080007cc      eb09           jmp 0x80007d7
        |   0x080007ce      6690           nop
       .--> 0x080007d0      488b3d000000.  mov rdi, qword [0x080007d7] ; [0x80007d7:8]=0x8d4400000000158b  ; RELOC 32
(reloc.major_217)
       :`-> 0x080007d7      8b1500000000   mov edx, dword [0x080007dd] ; [0x80007dd:4]=0x14b8d44  ; RELOC 32 major
       :    0x080007dd      448d4b01       lea r9d, dword [rbx + 1]    ; 1
       :    0x080007e1      c1e214         shl edx, 0x14
       :    0x080007e4      31c9           xor ecx, ecx
       :    0x080007e6      09da           or edx, ebx
       :    0x080007e8      31f6           xor esi, esi
       :    0x080007ea      31c0           xor eax, eax
       :    0x080007ec      49c7c0000000.  mov r8, 0                     ; RELOC 32
(reloc.device_create_244)
       :    0x080007f3      e800000000     call 0x80007f8                ; RELOC 32 device_create
       :    0x080007f8      4863db         movsxd rbx, ebx
       :    0x080007fb      488904dd0000.  mov qword [rbx*8], rax        ; RELOC 32
(reloc.minor_5)
       :    0x08000803      8b0500000000   mov eax, dword [0x08000809] ; [0x8000809:4]=0xc383c389  ; RELOC 32 minor
       :    0x08000809      89c3           mov ebx, eax
       :    0x0800080b      83c301         add ebx, 1
       :    0x0800080e      83fb0b         cmp ebx, 0xb                ; 11
(reloc.minor_19)
       :    0x08000811      891d00000000   mov dword [0x08000817], ebx ; [0x8000817:4]=0x10beb776  ; RELOC 32 minor
       `==< 0x08000817      76b7           jbe 0x80007d0
            0x08000819      be10000000     mov esi, 0x10               ; 16
            0x0800081e      bfb8d1d0fe     mov edi, 0xfed0d1b8
(reloc.ioremap_nocache_36)
            0x08000823      e800000000     call 0x8000828                ; RELOC 32 ioremap_nocache
            0x08000828      be10000000     mov esi, 0x10               ; 16
            0x0800082d      bf28d0d0fe     mov edi, 0xfed0d028
(reloc.gpbcon_53)
            0x08000832      488905000000.  mov qword [0x08000839], rax ; [0x8000839:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_58)
            0x08000839      e800000000     call 0x800083e                ; RELOC 32 ioremap_nocache
            0x0800083e      be10000000     mov esi, 0x10               ; 16
            0x08000843      bfb8d0d0fe     mov edi, 0xfed0d0b8
(reloc.gpbcon_75)
            0x08000848      488905000000.  mov qword [0x0800084f], rax ; [0x800084f:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_80)
            0x0800084f      e800000000     call 0x8000854                ; RELOC 32 ioremap_nocache
            0x08000854      be10000000     mov esi, 0x10               ; 16
            0x08000859      bfd8d0d0fe     mov edi, 0xfed0d0d8
(reloc.gpbcon_97)
            0x0800085e      488905000000.  mov qword [0x08000865], rax ; [0x8000865:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_102)
            0x08000865      e800000000     call 0x800086a                ; RELOC 32 ioremap_nocache
            0x0800086a      be10000000     mov esi, 0x10               ; 16
            0x0800086f      bf88d0d0fe     mov edi, 0xfed0d088
(reloc.gpbcon_119)
            0x08000874      488905000000.  mov qword [0x0800087b], rax ; [0x800087b:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_124)
            0x0800087b      e800000000     call 0x8000880                ; RELOC 32 ioremap_nocache
            0x08000880      be10000000     mov esi, 0x10               ; 16
            0x08000885      bfa8d0d0fe     mov edi, 0xfed0d0a8
            0x0800088a      488905000000.  mov qword [0x08000891], rax ; [0x8000891:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_146)
            0x08000891      e800000000     call 0x8000896                ; RELOC 32 ioremap_nocache
            0x08000896      be10000000     mov esi, 0x10               ; 16
            0x0800089b      bf48d0d0fe     mov edi, 0xfed0d048
(reloc.gpbcon_163)
            0x080008a0      488905000000.  mov qword [0x080008a7], rax ; [0x80008a7:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_168)
            0x080008a7      e800000000     call 0x80008ac                ; RELOC 32 ioremap_nocache
            0x080008ac      be10000000     mov esi, 0x10               ; 16
            0x080008b1      bf68d0d0fe     mov edi, 0xfed0d068
(reloc.gpbcon_185)
            0x080008b6      488905000000.  mov qword [0x080008bd], rax ; [0x80008bd:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_190)
            0x080008bd      e800000000     call 0x80008c2                ; RELOC 32 ioremap_nocache
            0x080008c2      be10000000     mov esi, 0x10               ; 16
            0x080008c7      bf18d0d0fe     mov edi, 0xfed0d018
(reloc.gpbcon_207)
            0x080008cc      488905000000.  mov qword [0x080008d3], rax ; [0x80008d3:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_212)
            0x080008d3      e800000000     call 0x80008d8                ; RELOC 32 ioremap_nocache
            0x080008d8      be10000000     mov esi, 0x10               ; 16
            0x080008dd      bf38d0d0fe     mov edi, 0xfed0d038
(reloc.gpbcon_229)
            0x080008e2      488905000000.  mov qword [0x080008e9], rax ; [0x80008e9:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_234)
            0x080008e9      e800000000     call 0x80008ee                ; RELOC 32 ioremap_nocache
            0x080008ee      be10000000     mov esi, 0x10               ; 16
            0x080008f3      bf58d0d0fe     mov edi, 0xfed0d058
(reloc.gpbcon_251)
            0x080008f8      488905000000.  mov qword [0x080008ff], rax ; [0x80008ff:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_0)
            0x080008ff      e800000000     call 0x8000904                ; RELOC 32 ioremap_nocache
            0x08000904      be10000000     mov esi, 0x10               ; 16
            0x08000909      bf98d0d0fe     mov edi, 0xfed0d098
(reloc.gpbcon_17)
            0x0800090e      488905000000.  mov qword [0x08000915], rax ; [0x8000915:8]=0x5894800000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_22)
            0x08000915      e800000000     call 0x800091a                ; RELOC 32 ioremap_nocache
(reloc.gpbcon_29)
            0x0800091a      488905000000.  mov qword [0x08000921], rax ; [0x8000921:8]=0x5bc0310824648d48  ; RELOC 32 gpbcon
            0x08000921      488d642408     lea rsp, qword [rsp + 8]    ; 8
            0x08000926      31c0           xor eax, eax
[0x08000070]> pd 600
            ;-- entry0:
            ;-- section..text:
            ;-- led_drv_open:
            ;-- rip:
            0x08000070      55             push rbp                    ; [02] m-r-x section size 2381 named .text
            0x08000071      31c0           xor eax, eax
            0x08000073      4889e5         mov rbp, rsp
            0x08000076      5d             pop rbp
            0x08000077      c3             ret
            0x08000078      0f1f84000000.  nop dword [rax + rax]
            ;-- led_drv_write:
            0x08000080      55             push rbp
            0x08000081      4889e5         mov rbp, rsp
            0x08000084      53             push rbx
            0x08000085      488d6424e8     lea rsp, qword [rsp - 0x18]
            0x0800008a      488d5de4       lea rbx, qword [rbp - 0x1c]
            0x0800008e      488d3b         lea rdi, qword [rbx]
            0x08000091      48c745e40000.  mov qword [rbp - 0x1c], 0
            0x08000099      c745ec000000.  mov dword [rbp - 0x14], 0
(reloc._copy_from_user_161)
            0x080000a0      e800000000     call 0x80000a5                ; RELOC 32 _copy_from_user
            0x080000a5      b907000000     mov ecx, 7
            0x080000aa      48c7c7000000.  mov rdi, 0                    ; RELOC 32
            0x080000b1      488d33         lea rsi, qword [rbx]
            0x080000b4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
        ,=< 0x080000b6      0f8484020000   je 0x8000340
        |   0x080000bc      b908000000     mov ecx, 8
        |   0x080000c1      48c7c7000000.  mov rdi, 0                    ; RELOC 32
        |   0x080000c8      488d33         lea rsi, qword [rbx]
        |   0x080000cb      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
       ,==< 0x080000cd      0f842d020000   je 0x8000300
       ||   0x080000d3      b907000000     mov ecx, 7
       ||   0x080000d8      48c7c7000000.  mov rdi, 0                    ; RELOC 32
       ||   0x080000df      488d33         lea rsi, qword [rbx]
       ||   0x080000e2      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
      ,===< 0x080000e4      0f84be020000   je 0x80003a8
      |||   0x080000ea      b908000000     mov ecx, 8
      |||   0x080000ef      48c7c7000000.  mov rdi, 0                    ; RELOC 32
      |||   0x080000f6      488d33         lea rsi, qword [rbx]
      |||   0x080000f9      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
     ,====< 0x080000fb      0f8467020000   je 0x8000368
     ||||   0x08000101      b907000000     mov ecx, 7
     ||||   0x08000106      48c7c7000000.  mov rdi, 0                    ; RELOC 32
     ||||   0x0800010d      488d33         lea rsi, qword [rbx]
     ||||   0x08000110      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
    ,=====< 0x08000112      0f84b8020000   je 0x80003d0
    |||||   0x08000118      b908000000     mov ecx, 8
    |||||   0x0800011d      48c7c7000000.  mov rdi, 0                    ; RELOC 32
    |||||   0x08000124      488d33         lea rsi, qword [rbx]
    |||||   0x08000127      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
   ,======< 0x08000129      0f8421030000   je 0x8000450
   ||||||   0x0800012f      b907000000     mov ecx, 7
   ||||||   0x08000134      48c7c7000000.  mov rdi, 0                    ; RELOC 32
   ||||||   0x0800013b      488d33         lea rsi, qword [rbx]
   ||||||   0x0800013e      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ,=======< 0x08000140      0f84ca020000   je 0x8000410
  |||||||   0x08000146      b908000000     mov ecx, 8
  |||||||   0x0800014b      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x08000152      488d33         lea rsi, qword [rbx]
  |||||||   0x08000155      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x08000157      0f841b030000   je 0x8000478
  |||||||   0x0800015d      b907000000     mov ecx, 7
  |||||||   0x08000162      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x08000169      488d33         lea rsi, qword [rbx]
  |||||||   0x0800016c      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x0800016e      0f8426030000   je 0x800049a
  |||||||   0x08000174      b908000000     mov ecx, 8
  |||||||   0x08000179      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x08000180      488d33         lea rsi, qword [rbx]
  |||||||   0x08000183      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x08000185      0f8448030000   je 0x80004d3
  |||||||   0x0800018b      b907000000     mov ecx, 7
  |||||||   0x08000190      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x08000197      488d33         lea rsi, qword [rbx]
  |||||||   0x0800019a      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x0800019c      0f8453030000   je 0x80004f5
  |||||||   0x080001a2      b908000000     mov ecx, 8
  |||||||   0x080001a7      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x080001ae      488d33         lea rsi, qword [rbx]
  |||||||   0x080001b1      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x080001b3      0f8475030000   je 0x800052e
  |||||||   0x080001b9      b907000000     mov ecx, 7
  |||||||   0x080001be      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x080001c5      488d33         lea rsi, qword [rbx]
  |||||||   0x080001c8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x080001ca      0f8480030000   je 0x8000550
  |||||||   0x080001d0      b908000000     mov ecx, 8
  |||||||   0x080001d5      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x080001dc      488d33         lea rsi, qword [rbx]
  |||||||   0x080001df      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x080001e1      0f84a2030000   je 0x8000589
  |||||||   0x080001e7      b907000000     mov ecx, 7
  |||||||   0x080001ec      48c7c7000000.  mov rdi, 0                    ; RELOC 32
  |||||||   0x080001f3      488d33         lea rsi, qword [rbx]
  |||||||   0x080001f6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x080001f8      0f84ad030000   je 0x80005ab
  |||||||   0x080001fe      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x08000205      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_9)
  |||||||   0x08000208      e800000000     call 0x800020d                ; RELOC 32 strcmp
  |||||||   0x0800020d      85c0           test eax, eax
  ========< 0x0800020f      0f84cf030000   je 0x80005e4
  |||||||   0x08000215      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x0800021c      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_32)
  |||||||   0x0800021f      e800000000     call 0x8000224                ; RELOC 32 strcmp
  |||||||   0x08000224      85c0           test eax, eax
  ========< 0x08000226      0f84da030000   je 0x8000606
  |||||||   0x0800022c      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x08000233      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_55)
  |||||||   0x08000236      e800000000     call 0x800023b                ; RELOC 32 strcmp
  |||||||   0x0800023b      85c0           test eax, eax
  ========< 0x0800023d      0f8435040000   je 0x8000678
  |||||||   0x08000243      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x0800024a      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_78)
  |||||||   0x0800024d      e800000000     call 0x8000252                ; RELOC 32 strcmp
  |||||||   0x08000252      85c0           test eax, eax
  ========< 0x08000254      0f84e5030000   je 0x800063f
  |||||||   0x0800025a      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x08000261      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_101)
  |||||||   0x08000264      e800000000     call 0x8000269                ; RELOC 32 strcmp
  |||||||   0x08000269      85c0           test eax, eax
  ========< 0x0800026b      0f84a9040000   je 0x800071a
  |||||||   0x08000271      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x08000278      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_124)
  |||||||   0x0800027b      e800000000     call 0x8000280                ; RELOC 32 strcmp
  |||||||   0x08000280      85c0           test eax, eax
  ========< 0x08000282      0f8470040000   je 0x80006f8
  |||||||   0x08000288      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x0800028f      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_147)
  |||||||   0x08000292      e800000000     call 0x8000297                ; RELOC 32 strcmp
  |||||||   0x08000297      85c0           test eax, eax
  ========< 0x08000299      0f8420040000   je 0x80006bf
  |||||||   0x0800029f      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x080002a6      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_170)
  |||||||   0x080002a9      e800000000     call 0x80002ae                ; RELOC 32 strcmp
  |||||||   0x080002ae      85c0           test eax, eax
  ========< 0x080002b0      0f84e4030000   je 0x800069a
  |||||||   0x080002b6      48c7c6000000.  mov rsi, 0                    ; RELOC 32
  |||||||   0x080002bd      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_193)
  |||||||   0x080002c0      e800000000     call 0x80002c5                ; RELOC 32 strcmp
  |||||||   0x080002c5      85c0           test eax, eax
  ========< 0x080002c7      756b           jne 0x8000334
(reloc.gpbcon_204)
  |||||||   0x080002c9      488b15000000.  mov rdx, qword [0x080002d0] ; [0x80002d0:8]=0x1111110125028b48  ; RELOC 32 gpbcon
  |||||||   0x080002d0      488b02         mov rax, qword [rdx]
  |||||||   0x080002d3      2501111111     and eax, 0x11111101
  |||||||   0x080002d8      488902         mov qword [rdx], rax
(reloc.gpbcon_222)
  |||||||   0x080002db      488b15000000.  mov rdx, qword [0x080002e2] ; [0x80002e2:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
  |||||||   0x080002e2      488b02         mov rax, qword [rdx]
  |||||||   0x080002e5      4883c801       or rax, 1
  --------> 0x080002e9      488902         mov qword [rdx], rax
(reloc.gpbcon_239)
  |||||||   0x080002ec      488b15000000.  mov rdx, qword [0x080002f3] ; [0x80002f3:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
  |||||||   0x080002f3      488b02         mov rax, qword [rdx]
  |||||||   0x080002f6      4883c810       or rax, 0x10
  |||||||   0x080002fa      488902         mov qword [rdx], rax
  ========< 0x080002fd      eb35           jmp 0x8000334
  |||||||   0x080002ff      90             nop
(reloc.gpbcon_3)
  |||||`--> 0x08000300      488b15000000.  mov rdx, qword [0x08000307] ; [0x8000307:8]=0x1111110125028b48  ; RELOC 32 gpbcon
  ||||| |   0x08000307      488b02         mov rax, qword [rdx]
  ||||| |   0x0800030a      2501111111     and eax, 0x11111101
  ||||| |   0x0800030f      488902         mov qword [rdx], rax
(reloc.gpbcon_21)
  ||||| |   0x08000312      488b15000000.  mov rdx, qword [0x08000319] ; [0x8000319:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
  ||||| |   0x08000319      488b02         mov rax, qword [rdx]
  ||||| |   0x0800031c      4883c801       or rax, 1
  |||||.--> 0x08000320      488902         mov qword [rdx], rax
(reloc.gpbcon_38)
  |||||:|   0x08000323      488b15000000.  mov rdx, qword [0x0800032a] ; [0x800032a:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
  |||||:|   0x0800032a      488b02         mov rax, qword [rdx]
  |||||:|   0x0800032d      4883c810       or rax, 0x10
  |||||:|   0x08000331      488902         mov qword [rdx], rax
  --------> 0x08000334      488d642418     lea rsp, qword [rsp + 0x18] ; 24
  |||||:|   0x08000339      31c0           xor eax, eax
  |||||:|   0x0800033b      5b             pop rbx
  |||||:|   0x0800033c      5d             pop rbp
  |||||:|   0x0800033d      c3             ret
  |||||:|   0x0800033e      6690           nop
  |||||:`-> 0x08000340      488b15000000.  mov rdx, qword [0x08000347] ; [0x8000347:8]=0x1111110125028b48  ; RELOC 32 gpbcon
  |||||:    0x08000347      488b02         mov rax, qword [rdx]
  |||||:    0x0800034a      2501111111     and eax, 0x11111101
  |||||:    0x0800034f      488902         mov qword [rdx], rax
(reloc.gpbcon_85)
  |||||:    0x08000352      488b15000000.  mov rdx, qword [0x08000359] ; [0x8000359:8]=0xebfee08348028b48  ; RELOC 32 gpbcon
  |||||:    0x08000359      488b02         mov rax, qword [rdx]
  |||||:    0x0800035c      4883e0fe       and rax, 0xfffffffffffffffe
  |||||`==< 0x08000360      ebbe           jmp 0x8000320
  |||||     0x08000362      660f1f440000   nop word [rax + rax]
(reloc.gpbcon_107)
  |||`----> 0x08000368      488b15000000.  mov rdx, qword [0x0800036f] ; [0x800036f:8]=0x1111110125028b48  ; RELOC 32 gpbcon
  ||| |     0x0800036f      488b02         mov rax, qword [rdx]
  ||| |     0x08000372      2501111111     and eax, 0x11111101
  ||| |     0x08000377      488902         mov qword [rdx], rax
(reloc.gpbcon_125)
  ||| |     0x0800037a      488b15000000.  mov rdx, qword [0x08000381] ; [0x8000381:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
  ||| |     0x08000381      488b02         mov rax, qword [rdx]
  ||| |     0x08000384      4883e0fe       and rax, 0xfffffffffffffffe
  ||| | .-> 0x08000388      488902         mov qword [rdx], rax
(reloc.gpbcon_142)
  ||| | :   0x0800038b      488b15000000.  mov rdx, qword [0x08000392] ; [0x8000392:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
  ||| | :   0x08000392      488b02         mov rax, qword [rdx]
  ||| | :   0x08000395      4883c810       or rax, 0x10
  ||| | :   0x08000399      488902         mov qword [rdx], rax
  ||| | :   0x0800039c      488d642418     lea rsp, qword [rsp + 0x18] ; 24
  ||| | :   0x080003a1      31c0           xor eax, eax
  ||| | :   0x080003a3      5b             pop rbx
  ||| | :   0x080003a4      5d             pop rbp
  ||| | :   0x080003a5      c3             ret
  ||| | :   0x080003a6      6690           nop
(reloc.gpbcon_171)
  ||| `---> 0x080003a8      488b15000000.  mov rdx, qword [0x080003af] ; [0x80003af:8]=0x1111110125028b48  ; RELOC 32 gpbcon
  |||   :   0x080003af      488b02         mov rax, qword [rdx]
  |||   :   0x080003b2      2501111111     and eax, 0x11111101
  |||   :   0x080003b7      488902         mov qword [rdx], rax
(reloc.gpbcon_189)
  |||   :   0x080003ba      488b15000000.  mov rdx, qword [0x080003c1] ; [0x80003c1:8]=0xeb01c88348028b48  ; RELOC 32 gpbcon
  |||   :   0x080003c1      488b02         mov rax, qword [rdx]
  |||   :   0x080003c4      4883c801       or rax, 1
  |||   `=< 0x080003c8      ebbe           jmp 0x8000388
  |||       0x080003ca      660f1f440000   nop word [rax + rax]
(reloc.gpbcon_211)
  ||`-----> 0x080003d0      488b15000000.  mov rdx, qword [0x080003d7] ; [0x80003d7:8]=0x1111110125028b48  ; RELOC 32 gpbcon
  ||        0x080003d7      488b02         mov rax, qword [rdx]
  ||        0x080003da      2501111111     and eax, 0x11111101
  ||        0x080003df      488902         mov qword [rdx], rax
  ||        0x080003e2      488b15000000.  mov rdx, qword [0x080003e9] ; [0x80003e9:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
  ||        0x080003e9      488b02         mov rax, qword [rdx]
  ||        0x080003ec      4883e0fe       and rax, 0xfffffffffffffffe
  ||    .-> 0x080003f0      488902         mov qword [rdx], rax
(reloc.gpbcon_246)
  ||    :   0x080003f3      488b15000000.  mov rdx, qword [0x080003fa] ; [0x80003fa:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
  ||    :   0x080003fa      488b02         mov rax, qword [rdx]
  ||    :   0x080003fd      4883c810       or rax, 0x10
  ||    :   0x08000401      488902         mov qword [rdx], rax
  ========< 0x08000404      e92bffffff     jmp 0x8000334
  ||    :   0x08000409      0f1f80000000.  nop dword [rax]
(reloc.gpbcon_19)
  `-------> 0x08000410      488b15000000.  mov rdx, qword [0x08000417] ; [0x8000417:8]=0x1111110125028b48  ; RELOC 32 gpbcon
   |    :   0x08000417      488b02         mov rax, qword [rdx]
   |    :   0x0800041a      2501111111     and eax, 0x11111101
   |    :   0x0800041f      488902         mov qword [rdx], rax
(reloc.gpbcon_37)
   |    :   0x08000422      488b15000000.  mov rdx, qword [0x08000429] ; [0x8000429:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
   |    :   0x08000429      488b02         mov rax, qword [rdx]
   |    :   0x0800042c      4883c801       or rax, 1
   |   .--> 0x08000430      488902         mov qword [rdx], rax
(reloc.gpbcon_54)
   |   ::   0x08000433      488b15000000.  mov rdx, qword [0x0800043a] ; [0x800043a:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
   |   ::   0x0800043a      488b02         mov rax, qword [rdx]
   |   ::   0x0800043d      4883c810       or rax, 0x10
   |   ::   0x08000441      488902         mov qword [rdx], rax
  ========< 0x08000444      e9ebfeffff     jmp 0x8000334
   |   ::   0x08000449      0f1f80000000.  nop dword [rax]
   `------> 0x08000450      488b15000000.  mov rdx, qword [0x08000457] ; [0x8000457:8]=0x1111110125028b48  ; RELOC 32 gpbcon
       ::   0x08000457      488b02         mov rax, qword [rdx]
       ::   0x0800045a      2501111111     and eax, 0x11111101
       ::   0x0800045f      488902         mov qword [rdx], rax
       ::   0x08000462      488b15000000.  mov rdx, qword [0x08000469] ; [0x8000469:8]=0xe901c88348028b48  ; RELOC 32 gpbcon
       ::   0x08000469      488b02         mov rax, qword [rdx]
       ::   0x0800046c      4883c801       or rax, 1
       :`=< 0x08000470      e97bffffff     jmp 0x80003f0
       :    0x08000475      0f1f00         nop dword [rax]
  --------> 0x08000478      488b15000000.  mov rdx, qword [0x0800047f] ; [0x800047f:8]=0x1111110125028b48  ; RELOC 32 gpbcon
       :    0x0800047f      488b02         mov rax, qword [rdx]
       :    0x08000482      2501111111     and eax, 0x11111101
       :    0x08000487      488902         mov qword [rdx], rax
       :    0x0800048a      488b15000000.  mov rdx, qword [0x08000491] ; [0x8000491:8]=0xebfee08348028b48  ; RELOC 32 gpbcon
       :    0x08000491      488b02         mov rax, qword [rdx]
       :    0x08000494      4883e0fe       and rax, 0xfffffffffffffffe
       `==< 0x08000498      eb96           jmp 0x8000430
  --------> 0x0800049a      488b15000000.  mov rdx, qword [0x080004a1] ; [0x80004a1:8]=0x1111110125028b48  ; RELOC 32 gpbcon
            0x080004a1      488b02         mov rax, qword [rdx]
            0x080004a4      2501111111     and eax, 0x11111101
            0x080004a9      488902         mov qword [rdx], rax
            0x080004ac      488b15000000.  mov rdx, qword [0x080004b3] ; [0x80004b3:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
            0x080004b3      488b02         mov rax, qword [rdx]
            0x080004b6      4883e0fe       and rax, 0xfffffffffffffffe
        .-> 0x080004ba      488902         mov qword [rdx], rax
        :   0x080004bd      488b15000000.  mov rdx, qword [0x080004c4] ; [0x80004c4:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
        :   0x080004c4      488b02         mov rax, qword [rdx]
        :   0x080004c7      4883c810       or rax, 0x10
        :   0x080004cb      488902         mov qword [rdx], rax
  ========< 0x080004ce      e961feffff     jmp 0x8000334
(reloc.gpbcon_214)
  --------> 0x080004d3      488b15000000.  mov rdx, qword [0x080004da] ; [0x80004da:8]=0x1111110125028b48  ; RELOC 32 gpbcon
        :   0x080004da      488b02         mov rax, qword [rdx]
        :   0x080004dd      2501111111     and eax, 0x11111101
        :   0x080004e2      488902         mov qword [rdx], rax
(reloc.gpbcon_232)
        :   0x080004e5      488b15000000.  mov rdx, qword [0x080004ec] ; [0x80004ec:8]=0xeb01c88348028b48  ; RELOC 32 gpbcon
        :   0x080004ec      488b02         mov rax, qword [rdx]
        :   0x080004ef      4883c801       or rax, 1
        `=< 0x080004f3      ebc5           jmp 0x80004ba
(reloc.gpbcon_248)
  --------> 0x080004f5      488b15000000.  mov rdx, qword [0x080004fc] ; [0x80004fc:8]=0x1111110125028b48  ; RELOC 32 gpbcon
            0x080004fc      488b02         mov rax, qword [rdx]
            0x080004ff      2501111111     and eax, 0x11111101
            0x08000504      488902         mov qword [rdx], rax
(reloc.gpbcon_10)
            0x08000507      488b15000000.  mov rdx, qword [0x0800050e] ; [0x800050e:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
            0x0800050e      488b02         mov rax, qword [rdx]
            0x08000511      4883c801       or rax, 1
        .-> 0x08000515      488902         mov qword [rdx], rax
        :   0x08000518      488b15000000.  mov rdx, qword [0x0800051f] ; [0x800051f:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
        :   0x0800051f      488b02         mov rax, qword [rdx]
        :   0x08000522      4883c810       or rax, 0x10
        :   0x08000526      488902         mov qword [rdx], rax
  ========< 0x08000529      e906feffff     jmp 0x8000334
(reloc.gpbcon_49)
  --------> 0x0800052e      488b15000000.  mov rdx, qword [0x08000535] ; [0x8000535:8]=0x1111110125028b48  ; RELOC 32 gpbcon
        :   0x08000535      488b02         mov rax, qword [rdx]
        :   0x08000538      2501111111     and eax, 0x11111101
        :   0x0800053d      488902         mov qword [rdx], rax
(reloc.gpbcon_67)
        :   0x08000540      488b15000000.  mov rdx, qword [0x08000547] ; [0x8000547:8]=0xebfee08348028b48  ; RELOC 32 gpbcon
        :   0x08000547      488b02         mov rax, qword [rdx]
        :   0x0800054a      4883e0fe       and rax, 0xfffffffffffffffe
        `=< 0x0800054e      ebc5           jmp 0x8000515
(reloc.gpbcon_83)
  --------> 0x08000550      488b15000000.  mov rdx, qword [0x08000557] ; [0x8000557:8]=0x1111110125028b48  ; RELOC 32 gpbcon
            0x08000557      488b02         mov rax, qword [rdx]
            0x0800055a      2501111111     and eax, 0x11111101
            0x0800055f      488902         mov qword [rdx], rax
            0x08000562      488b15000000.  mov rdx, qword [0x08000569] ; [0x8000569:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
            0x08000569      488b02         mov rax, qword [rdx]
            0x0800056c      4883e0fe       and rax, 0xfffffffffffffffe
        .-> 0x08000570      488902         mov qword [rdx], rax
(reloc.gpbcon_118)
        :   0x08000573      488b15000000.  mov rdx, qword [0x0800057a] ; [0x800057a:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
        :   0x0800057a      488b02         mov rax, qword [rdx]
        :   0x0800057d      4883c810       or rax, 0x10
        :   0x08000581      488902         mov qword [rdx], rax
  ========< 0x08000584      e9abfdffff     jmp 0x8000334
(reloc.gpbcon_140)
  --------> 0x08000589      488b15000000.  mov rdx, qword [0x08000590] ; [0x8000590:8]=0x1111110125028b48  ; RELOC 32 gpbcon
        :   0x08000590      488b02         mov rax, qword [rdx]
        :   0x08000593      2501111111     and eax, 0x11111101
        :   0x08000598      488902         mov qword [rdx], rax
(reloc.gpbcon_158)
        :   0x0800059b      488b15000000.  mov rdx, qword [0x080005a2] ; [0x80005a2:8]=0xeb01c88348028b48  ; RELOC 32 gpbcon
        :   0x080005a2      488b02         mov rax, qword [rdx]
        :   0x080005a5      4883c801       or rax, 1
        `=< 0x080005a9      ebc5           jmp 0x8000570
(reloc.gpbcon_174)
  --------> 0x080005ab      488b15000000.  mov rdx, qword [0x080005b2] ; [0x80005b2:8]=0x1111110125028b48  ; RELOC 32 gpbcon
            0x080005b2      488b02         mov rax, qword [rdx]
            0x080005b5      2501111111     and eax, 0x11111101
            0x080005ba      488902         mov qword [rdx], rax
(reloc.gpbcon_192)
            0x080005bd      488b15000000.  mov rdx, qword [0x080005c4] ; [0x80005c4:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
            0x080005c4      488b02         mov rax, qword [rdx]
            0x080005c7      4883c801       or rax, 1
        .-> 0x080005cb      488902         mov qword [rdx], rax
(reloc.gpbcon_209)
        :   0x080005ce      488b15000000.  mov rdx, qword [0x080005d5] ; [0x80005d5:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
        :   0x080005d5      488b02         mov rax, qword [rdx]
        :   0x080005d8      4883c810       or rax, 0x10
        :   0x080005dc      488902         mov qword [rdx], rax
  ========< 0x080005df      e950fdffff     jmp 0x8000334
(reloc.gpbcon_231)
  --------> 0x080005e4      488b15000000.  mov rdx, qword [0x080005eb] ; [0x80005eb:8]=0x1111110125028b48  ; RELOC 32 gpbcon
        :   0x080005eb      488b02         mov rax, qword [rdx]
        :   0x080005ee      2501111111     and eax, 0x11111101
        :   0x080005f3      488902         mov qword [rdx], rax
(reloc.gpbcon_249)
        :   0x080005f6      488b15000000.  mov rdx, qword [0x080005fd] ; [0x80005fd:8]=0xebfee08348028b48  ; RELOC 32 gpbcon
        :   0x080005fd      488b02         mov rax, qword [rdx]
        :   0x08000600      4883e0fe       and rax, 0xfffffffffffffffe
        `=< 0x08000604      ebc5           jmp 0x80005cb
(reloc.gpbcon_9)
  --------> 0x08000606      488b15000000.  mov rdx, qword [0x0800060d] ; [0x800060d:8]=0x1111110125028b48  ; RELOC 32 gpbcon
            0x0800060d      488b02         mov rax, qword [rdx]
            0x08000610      2501111111     and eax, 0x11111101
            0x08000615      488902         mov qword [rdx], rax
(reloc.gpbcon_27)
            0x08000618      488b15000000.  mov rdx, qword [0x0800061f] ; [0x800061f:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
            0x0800061f      488b02         mov rax, qword [rdx]
            0x08000622      4883e0fe       and rax, 0xfffffffffffffffe
        .-> 0x08000626      488902         mov qword [rdx], rax
(reloc.gpbcon_44)
        :   0x08000629      488b15000000.  mov rdx, qword [0x08000630] ; [0x8000630:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
        :   0x08000630      488b02         mov rax, qword [rdx]
        :   0x08000633      4883c810       or rax, 0x10
        :   0x08000637      488902         mov qword [rdx], rax
  ========< 0x0800063a      e9f5fcffff     jmp 0x8000334
(reloc.gpbcon_66)
  --------> 0x0800063f      488b15000000.  mov rdx, qword [0x08000646] ; [0x8000646:8]=0x1111110125028b48  ; RELOC 32 gpbcon
        :   0x08000646      488b02         mov rax, qword [rdx]
        :   0x08000649      2501111111     and eax, 0x11111101
        :   0x0800064e      488902         mov qword [rdx], rax
(reloc.gpbcon_84)
        :   0x08000651      488b15000000.  mov rdx, qword [0x08000658] ; [0x8000658:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
        :   0x08000658      488b02         mov rax, qword [rdx]
        :   0x0800065b      4883c801       or rax, 1
       .--> 0x0800065f      488902         mov qword [rdx], rax
(reloc.gpbcon_101)
       ::   0x08000662      488b15000000.  mov rdx, qword [0x08000669] ; [0x8000669:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
       ::   0x08000669      488b02         mov rax, qword [rdx]
       ::   0x0800066c      4883c810       or rax, 0x10
       ::   0x08000670      488902         mov qword [rdx], rax
  ========< 0x08000673      e9bcfcffff     jmp 0x8000334
(reloc.gpbcon_123)
  --------> 0x08000678      488b15000000.  mov rdx, qword [0x0800067f] ; [0x800067f:8]=0x1111110125028b48  ; RELOC 32 gpbcon
       ::   0x0800067f      488b02         mov rax, qword [rdx]
       ::   0x08000682      2501111111     and eax, 0x11111101
       ::   0x08000687      488902         mov qword [rdx], rax
       ::   0x0800068a      488b15000000.  mov rdx, qword [0x08000691] ; [0x8000691:8]=0xeb01c88348028b48  ; RELOC 32 gpbcon
       ::   0x08000691      488b02         mov rax, qword [rdx]
       ::   0x08000694      4883c801       or rax, 1
       :`=< 0x08000698      eb8c           jmp 0x8000626
(reloc.gpbcon_157)
  --------> 0x0800069a      488b15000000.  mov rdx, qword [0x080006a1] ; [0x80006a1:8]=0x1111110125028b48  ; RELOC 32 gpbcon
       :    0x080006a1      488b02         mov rax, qword [rdx]
       :    0x080006a4      2501111111     and eax, 0x11111101
       :    0x080006a9      488902         mov qword [rdx], rax
       :    0x080006ac      488b15000000.  mov rdx, qword [0x080006b3] ; [0x80006b3:8]=0xe9fee08348028b48  ; RELOC 32 gpbcon
       :    0x080006b3      488b02         mov rax, qword [rdx]
       :    0x080006b6      4883e0fe       and rax, 0xfffffffffffffffe
  ========< 0x080006ba      e92afcffff     jmp 0x80002e9
(reloc.gpbcon_194)
  --------> 0x080006bf      488b15000000.  mov rdx, qword [0x080006c6] ; [0x80006c6:8]=0x1111110125028b48  ; RELOC 32 gpbcon
       :    0x080006c6      488b02         mov rax, qword [rdx]
       :    0x080006c9      2501111111     and eax, 0x11111101
       :    0x080006ce      488902         mov qword [rdx], rax
(reloc.gpbcon_212)
       :    0x080006d1      488b15000000.  mov rdx, qword [0x080006d8] ; [0x80006d8:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
       :    0x080006d8      488b02         mov rax, qword [rdx]
       :    0x080006db      4883c801       or rax, 1
       :.-> 0x080006df      488902         mov qword [rdx], rax
       ::   0x080006e2      488b15000000.  mov rdx, qword [0x080006e9] ; [0x80006e9:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
       ::   0x080006e9      488b02         mov rax, qword [rdx]
       ::   0x080006ec      4883c810       or rax, 0x10
       ::   0x080006f0      488902         mov qword [rdx], rax
  ========< 0x080006f3      e93cfcffff     jmp 0x8000334
  --------> 0x080006f8      488b15000000.  mov rdx, qword [0x080006ff] ; [0x80006ff:8]=0x1111110125028b48  ; RELOC 32 gpbcon
       ::   0x080006ff      488b02         mov rax, qword [rdx]
       ::   0x08000702      2501111111     and eax, 0x11111101
       ::   0x08000707      488902         mov qword [rdx], rax
(reloc.gpbcon_13)
       ::   0x0800070a      488b15000000.  mov rdx, qword [0x08000711] ; [0x8000711:8]=0xebfee08348028b48  ; RELOC 32 gpbcon
       ::   0x08000711      488b02         mov rax, qword [rdx]
       ::   0x08000714      4883e0fe       and rax, 0xfffffffffffffffe
       :`=< 0x08000718      ebc5           jmp 0x80006df
  --------> 0x0800071a      488b15000000.  mov rdx, qword [0x08000721] ; [0x8000721:8]=0x1111110125028b48  ; RELOC 32 gpbcon
       :    0x08000721      488b02         mov rax, qword [rdx]
       :    0x08000724      2501111111     and eax, 0x11111101
       :    0x08000729      488902         mov qword [rdx], rax
(reloc.gpbcon_47)
       :    0x0800072c      488b15000000.  mov rdx, qword [0x08000733] ; [0x8000733:8]=0xe9fee08348028b48  ; RELOC 32 gpbcon
       :    0x08000733      488b02         mov rax, qword [rdx]
       :    0x08000736      4883e0fe       and rax, 0xfffffffffffffffe
       `==< 0x0800073a      e920ffffff     jmp 0x800065f
            0x0800073f      90             nop
            ;-- led_drv_init:
            ;-- init_module:
            0x08000740      31c0           xor eax, eax
            0x08000742      66666666662e.  nop word cs:[rax + rax]
        .-> 0x08000750      48c780000000.  mov qword [rax], 0            ; RELOC 32
(reloc.gpbcon_94)
        :   0x0800075b      48c780000000.  mov qword [rax], 0            ; RELOC 32 gpbcon
        :   0x08000766      488d4008       lea rax, qword [rax + 8]    ; 8
        :   0x0800076a      4883f860       cmp rax, 0x60               ; '`' ; 96
        `=< 0x0800076e      75e0           jne 0x8000750
            0x08000770      55             push rbp
            0x08000771      49c7c0000000.  mov r8, 0                     ; RELOC 32
            0x08000778      48c7c1000000.  mov rcx, 0                    ; RELOC 32
            0x0800077f      4889e5         mov rbp, rsp
            0x08000782      ba00010000     mov edx, 0x100              ; 256
            0x08000787      53             push rbx
            0x08000788      31f6           xor esi, esi
            0x0800078a      31ff           xor edi, edi
            0x0800078c      488d6424f8     lea rsp, qword [rsp - 8]
            0x08000791      31db           xor ebx, ebx
(reloc.__register_chrdev_148)
            0x08000793      e800000000     call 0x8000798                ; RELOC 32 __register_chrdev
(reloc.__this_module_155)
            0x08000798      48c7c7000000.  mov rdi, 0                    ; RELOC 32 __this_module
            0x0800079f      48c7c2000000.  mov rdx, 0                    ; RELOC 32
            0x080007a6      48c7c6000000.  mov rsi, 0                    ; RELOC 32
(reloc.major_175)
            0x080007ad      890500000000   mov dword [0x080007b3], eax ; [0x80007b3:4]=232  ; RELOC 32 major
(reloc.__class_create_180)
            0x080007b3      e800000000     call 0x80007b8                ; RELOC 32 __class_create
            0x080007b8      488905000000.  mov qword [0x080007bf], rax ; [0x80007bf:8]=0x5c7  ; RELOC 32
(reloc.minor_193)
            0x080007bf      c70500000000.  mov dword [0x080007c9], 0   ; [0x80007c9:4]=0xeb388d48  ; RELOC 32 minor
            0x080007c9      488d38         lea rdi, qword [rax]
        ,=< 0x080007cc      eb09           jmp 0x80007d7
        |   0x080007ce      6690           nop
       .--> 0x080007d0      488b3d000000.  mov rdi, qword [0x080007d7] ; [0x80007d7:8]=0x8d4400000000158b  ; RELOC 32
(reloc.major_217)
       :`-> 0x080007d7      8b1500000000   mov edx, dword [0x080007dd] ; [0x80007dd:4]=0x14b8d44  ; RELOC 32 major
       :    0x080007dd      448d4b01       lea r9d, dword [rbx + 1]    ; 1
       :    0x080007e1      c1e214         shl edx, 0x14
       :    0x080007e4      31c9           xor ecx, ecx
       :    0x080007e6      09da           or edx, ebx
       :    0x080007e8      31f6           xor esi, esi
       :    0x080007ea      31c0           xor eax, eax
       :    0x080007ec      49c7c0000000.  mov r8, 0                     ; RELOC 32
(reloc.device_create_244)
       :    0x080007f3      e800000000     call 0x80007f8                ; RELOC 32 device_create
       :    0x080007f8      4863db         movsxd rbx, ebx
       :    0x080007fb      488904dd0000.  mov qword [rbx*8], rax        ; RELOC 32
(reloc.minor_5)
       :    0x08000803      8b0500000000   mov eax, dword [0x08000809] ; [0x8000809:4]=0xc383c389  ; RELOC 32 minor
       :    0x08000809      89c3           mov ebx, eax
       :    0x0800080b      83c301         add ebx, 1
       :    0x0800080e      83fb0b         cmp ebx, 0xb                ; 11
(reloc.minor_19)
       :    0x08000811      891d00000000   mov dword [0x08000817], ebx ; [0x8000817:4]=0x10beb776  ; RELOC 32 minor
       `==< 0x08000817      76b7           jbe 0x80007d0
            0x08000819      be10000000     mov esi, 0x10               ; 16
            0x0800081e      bfb8d1d0fe     mov edi, 0xfed0d1b8
(reloc.ioremap_nocache_36)
            0x08000823      e800000000     call 0x8000828                ; RELOC 32 ioremap_nocache
            0x08000828      be10000000     mov esi, 0x10               ; 16
            0x0800082d      bf28d0d0fe     mov edi, 0xfed0d028
(reloc.gpbcon_53)
            0x08000832      488905000000.  mov qword [0x08000839], rax ; [0x8000839:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_58)
            0x08000839      e800000000     call 0x800083e                ; RELOC 32 ioremap_nocache
            0x0800083e      be10000000     mov esi, 0x10               ; 16
            0x08000843      bfb8d0d0fe     mov edi, 0xfed0d0b8
(reloc.gpbcon_75)
            0x08000848      488905000000.  mov qword [0x0800084f], rax ; [0x800084f:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_80)
            0x0800084f      e800000000     call 0x8000854                ; RELOC 32 ioremap_nocache
            0x08000854      be10000000     mov esi, 0x10               ; 16
            0x08000859      bfd8d0d0fe     mov edi, 0xfed0d0d8
(reloc.gpbcon_97)
            0x0800085e      488905000000.  mov qword [0x08000865], rax ; [0x8000865:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_102)
            0x08000865      e800000000     call 0x800086a                ; RELOC 32 ioremap_nocache
            0x0800086a      be10000000     mov esi, 0x10               ; 16
            0x0800086f      bf88d0d0fe     mov edi, 0xfed0d088
(reloc.gpbcon_119)
            0x08000874      488905000000.  mov qword [0x0800087b], rax ; [0x800087b:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_124)
            0x0800087b      e800000000     call 0x8000880                ; RELOC 32 ioremap_nocache
            0x08000880      be10000000     mov esi, 0x10               ; 16
            0x08000885      bfa8d0d0fe     mov edi, 0xfed0d0a8
            0x0800088a      488905000000.  mov qword [0x08000891], rax ; [0x8000891:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_146)
            0x08000891      e800000000     call 0x8000896                ; RELOC 32 ioremap_nocache
            0x08000896      be10000000     mov esi, 0x10               ; 16
            0x0800089b      bf48d0d0fe     mov edi, 0xfed0d048
(reloc.gpbcon_163)
            0x080008a0      488905000000.  mov qword [0x080008a7], rax ; [0x80008a7:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_168)
            0x080008a7      e800000000     call 0x80008ac                ; RELOC 32 ioremap_nocache
            0x080008ac      be10000000     mov esi, 0x10               ; 16
            0x080008b1      bf68d0d0fe     mov edi, 0xfed0d068
(reloc.gpbcon_185)
            0x080008b6      488905000000.  mov qword [0x080008bd], rax ; [0x80008bd:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_190)
            0x080008bd      e800000000     call 0x80008c2                ; RELOC 32 ioremap_nocache
            0x080008c2      be10000000     mov esi, 0x10               ; 16
            0x080008c7      bf18d0d0fe     mov edi, 0xfed0d018
(reloc.gpbcon_207)
            0x080008cc      488905000000.  mov qword [0x080008d3], rax ; [0x80008d3:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_212)
            0x080008d3      e800000000     call 0x80008d8                ; RELOC 32 ioremap_nocache
            0x080008d8      be10000000     mov esi, 0x10               ; 16
            0x080008dd      bf38d0d0fe     mov edi, 0xfed0d038
(reloc.gpbcon_229)
            0x080008e2      488905000000.  mov qword [0x080008e9], rax ; [0x80008e9:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_234)
            0x080008e9      e800000000     call 0x80008ee                ; RELOC 32 ioremap_nocache
            0x080008ee      be10000000     mov esi, 0x10               ; 16
            0x080008f3      bf58d0d0fe     mov edi, 0xfed0d058
(reloc.gpbcon_251)
            0x080008f8      488905000000.  mov qword [0x080008ff], rax ; [0x80008ff:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_0)
            0x080008ff      e800000000     call 0x8000904                ; RELOC 32 ioremap_nocache
            0x08000904      be10000000     mov esi, 0x10               ; 16
            0x08000909      bf98d0d0fe     mov edi, 0xfed0d098
(reloc.gpbcon_17)
            0x0800090e      488905000000.  mov qword [0x08000915], rax ; [0x8000915:8]=0x5894800000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_22)
            0x08000915      e800000000     call 0x800091a                ; RELOC 32 ioremap_nocache
(reloc.gpbcon_29)
            0x0800091a      488905000000.  mov qword [0x08000921], rax ; [0x8000921:8]=0x5bc0310824648d48  ; RELOC 32 gpbcon
            0x08000921      488d642408     lea rsp, qword [rsp + 8]    ; 8
            0x08000926      31c0           xor eax, eax
            0x08000928      5b             pop rbx
            0x08000929      5d             pop rbp
            0x0800092a      c3             ret
            0x0800092b      0f1f440000     nop dword [rax + rax]
            ;-- led_drv_exit:
            ;-- cleanup_module:
            0x08000930      55             push rbp
            0x08000931      48c7c1000000.  mov rcx, 0                    ; RELOC 32
            0x08000938      ba00010000     mov edx, 0x100              ; 256
            0x0800093d      4889e5         mov rbp, rsp
            0x08000940      31f6           xor esi, esi
            0x08000942      53             push rbx
            0x08000943      488d6424f8     lea rsp, qword [rsp - 8]
(reloc.major_74)
            0x08000948      8b3d00000000   mov edi, dword [0x0800094e] ; [0x800094e:4]=232  ; RELOC 32 major
(reloc.__unregister_chrdev_79)
            0x0800094e      e800000000     call 0x8000953                ; RELOC 32 __unregister_chrdev
(reloc.minor_85)
            0x08000953      c70500000000.  mov dword [0x0800095d], 0   ; [0x800095d:4]=0x4890c031  ; RELOC 32 minor
            0x0800095d      31c0           xor eax, eax
            0x0800095f      90             nop
        .-> 0x08000960      4898           cdqe
        :   0x08000962      488b3cc50000.  mov rdi, qword [rax*8]        ; RELOC 32
(reloc.device_unregister_107)
        :   0x0800096a      e800000000     call 0x800096f                ; RELOC 32 device_unregister
(reloc.minor_113)
        :   0x0800096f      8b0500000000   mov eax, dword [0x08000975] ; [0x8000975:4]=0x8301c083  ; RELOC 32 minor
        :   0x08000975      83c001         add eax, 1
        :   0x08000978      83f80b         cmp eax, 0xb                ; 11
(reloc.minor_125)
        :   0x0800097b      890500000000   mov dword [0x08000981], eax ; [0x8000981:4]=0x8b48dd76  ; RELOC 32 minor
        `=< 0x08000981      76dd           jbe 0x8000960
            0x08000983      488b3d000000.  mov rdi, qword [0x0800098a] ; [0x800098a:8]=0xe800000000c3c748  ; RELOC 32
(reloc.gpbcon_141)
            0x0800098a      48c7c3000000.  mov rbx, 0                    ; RELOC 32 gpbcon
(reloc.class_destroy_146)
            0x08000991      e800000000     call 0x8000996                ; RELOC 32 class_destroy
            0x08000996      662e0f1f8400.  nop word cs:[rax + rax]
        .-> 0x080009a0      488b3b         mov rdi, qword [rbx]
        :   0x080009a3      488d5b08       lea rbx, qword [rbx + 8]    ; 8
(reloc.iounmap_168)
        :   0x080009a7      e800000000     call 0x80009ac                ; RELOC 32 iounmap
(reloc.gpbcon_175)
        :   0x080009ac      4881fb000000.  cmp rbx, 0                    ; RELOC 32 gpbcon
        `=< 0x080009b3      75eb           jne 0x80009a0
            0x080009b5      488d642408     lea rsp, qword [rsp + 8]    ; 8
            0x080009ba      5b             pop rbx
            0x080009bb      5d             pop rbp
            0x080009bc      c3             ret
            ;-- str.led1on:
            ;-- section_end..text:
            ;-- section..rodata.str1.1:
            0x080009bd     .string "led1on" ; len=7                    ; [04] m-r-- section size 214 named .rodata.str1.1
            ;-- str.led1off:
            0x080009c4     .string "led1off" ; len=8
            ;-- str.led2on:
            0x080009cc     .string "led2on" ; len=7
            ;-- str.led2off:
            0x080009d3     .string "led2off" ; len=8
            ;-- str.led3on:
            0x080009db     .string "led3on" ; len=7
            ;-- str.led3off:
            0x080009e2     .string "led3off" ; len=8
            ;-- str.led4on:
            0x080009ea     .string "led4on" ; len=7
            ;-- str.led4off:
            0x080009f1     .string "led4off" ; len=8
            ;-- str.led5on:
            0x080009f9     .string "led5on" ; len=7
            ;-- str.led5off:
            0x08000a00     .string "led5off" ; len=8
            ;-- str.led6on:
            0x08000a08     .string "led6on" ; len=7
            ;-- str.led6off:
            0x08000a0f     .string "led6off" ; len=8
            ;-- str.led7on:
            0x08000a17     .string "led7on" ; len=7
            ;-- str.led7off:
            0x08000a1e     .string "led7off" ; len=8
            ;-- str.led8on:
            0x08000a26     .string "led8on" ; len=7
            ;-- str.led8off:
            0x08000a2d     .string "led8off" ; len=8
            ;-- str.led9on:
            0x08000a35     .string "led9on" ; len=7
            ;-- str.led9off:
            0x08000a3c     .string "led9off" ; len=8
            ;-- str.led10on:
            0x08000a44     .string "led10on" ; len=8
            ;-- str.led10off:
            0x08000a4c     .string "led10off" ; len=9
            ;-- str.led11on:
            0x08000a55     .string "led11on" ; len=8
            ;-- str.led11off:
            0x08000a5d     .string "led11off" ; len=9
            ;-- str.led12on:
            0x08000a66     .string "led12on" ; len=8
            ;-- str.led12off:
            0x08000a6e     .string "led12off" ; len=9
            ;-- str.led_drv:
            0x08000a77     .string "led_drv" ; len=8
            ;-- str.leddrv_drv:
            0x08000a7f     .string "leddrv_drv" ; len=11
            ;-- str.leddrv_d:
            0x08000a8a     .string "leddrv%d" ; len=9
            ;-- section_end..rodata.str1.1:
            ;-- section..modinfo:
            ;-- __UNIQUE_ID_license0:
            0x08000a93      6c             insb byte [rdi], dx         ; [05] m-r-- section size 52 named .modinfo
            0x08000a94      6963656e7365.  imul esp, dword [rbx + 0x65], 0x3d65736e
        |   0x08000a9b      4750           push r8
        |   0x08000a9d  ~   4c00646570     add byte [rbp + 0x70], r12b
        |   ;-- __module_depends:
       ,==< 0x08000a9f      64657065       jo 0x8000b08
       ||   0x08000aa3      6e             outsb dx, byte [rsi]
      ,===< 0x08000aa4      64733d         jae 0x8000ae4
      |||   0x08000aa7  ~   007665         add byte [rsi + 0x65], dh
      |||   ;-- __UNIQUE_ID_vermagic0:
      |||   0x08000aa8      7665           jbe 0x8000b0f
     ,====< 0x08000aaa      726d           jb 0x8000b19
     ||||   0x08000aac      61             invalid
     ||||   0x08000aad      6769633d342e.  imul esp, dword [ebx + 0x3d], 0x2e302e34
     ||||   0x08000ab5      3020           xor byte [rax], ah
     ||||   0x08000ab7      53             push rbx
     ||||   0x08000ab8      4d50           push r8
     ||||   0x08000aba      206d6f         and byte [rbp + 0x6f], ch
     ||||   0x08000abd      645f           pop rdi
    ,=====< 0x08000abf      756e           jne 0x8000b2f
    |||||   0x08000ac1      6c             insb byte [rdi], dx
    |||||   0x08000ac2      6f             outsd dx, dword [rsi]
    |||||   0x08000ac3      61             invalid
    |||||   0x08000ac4      642000         and byte fs:[rax], al
    |||||   ;-- section_end..modinfo:
    |||||   0x08000ac7      ff             invalid
    |||||   0x08000ac8      ff             invalid
    |||||   0x08000ac9      ff             invalid
    |||||   0x08000aca      ff             invalid
    |||||   0x08000acb      ff             invalid
    |||||   0x08000acc      ff             invalid
    |||||   0x08000acd      ff             invalid
    |||||   0x08000ace      ff             invalid
    |||||   0x08000acf      ff             invalid
    |||||   0x08000ad0      ff             invalid
    |||||   0x08000ad1      ff             invalid
    |||||   0x08000ad2      ff             invalid
    |||||   0x08000ad3      ff             invalid
    |||||   0x08000ad4      ff             invalid
^Cx08000070]>
[0x08000070]>
[0x08000070]> ir
[Relocations]
vaddr=0x080000a1 paddr=0x00000031 type=SET_32 _copy_from_user - 0x080000a5
vaddr=0x080000ad paddr=0x0000003d type=SET_32
vaddr=0x080000c4 paddr=0x00000054 type=SET_32 0x00000007
vaddr=0x080000db paddr=0x0000006b type=SET_32 0x0000000f
vaddr=0x080000f2 paddr=0x00000082 type=SET_32 0x00000016
vaddr=0x08000109 paddr=0x00000099 type=SET_32 0x0000001e
vaddr=0x08000120 paddr=0x000000b0 type=SET_32 0x00000025
vaddr=0x08000137 paddr=0x000000c7 type=SET_32 0x0000002d
vaddr=0x0800014e paddr=0x000000de type=SET_32 0x00000034
vaddr=0x08000165 paddr=0x000000f5 type=SET_32 0x0000003c
vaddr=0x0800017c paddr=0x0000010c type=SET_32 0x00000043
vaddr=0x08000193 paddr=0x00000123 type=SET_32 0x0000004b
vaddr=0x080001aa paddr=0x0000013a type=SET_32 0x00000052
vaddr=0x080001c1 paddr=0x00000151 type=SET_32 0x0000005a
vaddr=0x080001d8 paddr=0x00000168 type=SET_32 0x00000061
vaddr=0x080001ef paddr=0x0000017f type=SET_32 0x00000069
vaddr=0x08000201 paddr=0x00000191 type=SET_32 0x00000070
vaddr=0x08000209 paddr=0x00000199 type=SET_32 strcmp - 0x0800020d
vaddr=0x08000218 paddr=0x000001a8 type=SET_32 0x00000078
vaddr=0x08000220 paddr=0x000001b0 type=SET_32 strcmp - 0x08000224
vaddr=0x0800022f paddr=0x000001bf type=SET_32 0x0000007f
vaddr=0x08000237 paddr=0x000001c7 type=SET_32 strcmp - 0x0800023b
vaddr=0x08000246 paddr=0x000001d6 type=SET_32 0x00000087
vaddr=0x0800024e paddr=0x000001de type=SET_32 strcmp - 0x08000252
vaddr=0x0800025d paddr=0x000001ed type=SET_32 0x0000008f
vaddr=0x08000265 paddr=0x000001f5 type=SET_32 strcmp - 0x08000269
vaddr=0x08000274 paddr=0x00000204 type=SET_32 0x00000098
vaddr=0x0800027c paddr=0x0000020c type=SET_32 strcmp - 0x08000280
vaddr=0x0800028b paddr=0x0000021b type=SET_32 0x000000a0
vaddr=0x08000293 paddr=0x00000223 type=SET_32 strcmp - 0x08000297
vaddr=0x080002a2 paddr=0x00000232 type=SET_32 0x000000a9
vaddr=0x080002aa paddr=0x0000023a type=SET_32 strcmp - 0x080002ae
vaddr=0x080002b9 paddr=0x00000249 type=SET_32 0x000000b1
vaddr=0x080002c1 paddr=0x00000251 type=SET_32 strcmp - 0x080002c5
vaddr=0x080002cc paddr=0x0000025c type=SET_32 gpbcon - 0x08000278
vaddr=0x080002de paddr=0x0000026e type=SET_32 gpbcon - 0x0800028a
vaddr=0x080002ef paddr=0x0000027f type=SET_32 gpbcon - 0x0800029b
vaddr=0x08000303 paddr=0x00000293 type=SET_32 gpbcon - 0x08000307
vaddr=0x08000315 paddr=0x000002a5 type=SET_32 gpbcon - 0x08000319
vaddr=0x08000326 paddr=0x000002b6 type=SET_32 gpbcon - 0x0800032a
vaddr=0x08000343 paddr=0x000002d3 type=SET_32 gpbcon - 0x08000347
vaddr=0x08000355 paddr=0x000002e5 type=SET_32 gpbcon - 0x08000359
vaddr=0x0800036b paddr=0x000002fb type=SET_32 gpbcon - 0x08000367
vaddr=0x0800037d paddr=0x0000030d type=SET_32 gpbcon - 0x08000379
vaddr=0x0800038e paddr=0x0000031e type=SET_32 gpbcon - 0x0800038a
vaddr=0x080003ab paddr=0x0000033b type=SET_32 gpbcon - 0x080003a7
vaddr=0x080003bd paddr=0x0000034d type=SET_32 gpbcon - 0x080003b9
vaddr=0x080003d3 paddr=0x00000363 type=SET_32 gpbcon - 0x080003c7
vaddr=0x080003e5 paddr=0x00000375 type=SET_32 gpbcon - 0x080003d9
vaddr=0x080003f6 paddr=0x00000386 type=SET_32 gpbcon - 0x080003ea
vaddr=0x08000413 paddr=0x000003a3 type=SET_32 gpbcon - 0x080003ff
vaddr=0x08000425 paddr=0x000003b5 type=SET_32 gpbcon - 0x08000411
vaddr=0x08000436 paddr=0x000003c6 type=SET_32 gpbcon - 0x08000422
vaddr=0x08000453 paddr=0x000003e3 type=SET_32 gpbcon - 0x08000447
vaddr=0x08000465 paddr=0x000003f5 type=SET_32 gpbcon - 0x08000459
vaddr=0x0800047b paddr=0x0000040b type=SET_32 gpbcon - 0x08000467
vaddr=0x0800048d paddr=0x0000041d type=SET_32 gpbcon - 0x08000479
vaddr=0x0800049d paddr=0x0000042d type=SET_32 gpbcon - 0x08000481
vaddr=0x080004af paddr=0x0000043f type=SET_32 gpbcon - 0x08000493
vaddr=0x080004c0 paddr=0x00000450 type=SET_32 gpbcon - 0x080004a4
vaddr=0x080004d6 paddr=0x00000466 type=SET_32 gpbcon - 0x080004ba
vaddr=0x080004e8 paddr=0x00000478 type=SET_32 gpbcon - 0x080004cc
vaddr=0x080004f8 paddr=0x00000488 type=SET_32 gpbcon - 0x080004d4
vaddr=0x0800050a paddr=0x0000049a type=SET_32 gpbcon - 0x080004e6
vaddr=0x0800051b paddr=0x000004ab type=SET_32 gpbcon - 0x080004f7
vaddr=0x08000531 paddr=0x000004c1 type=SET_32 gpbcon - 0x0800050d
vaddr=0x08000543 paddr=0x000004d3 type=SET_32 gpbcon - 0x0800051f
vaddr=0x08000553 paddr=0x000004e3 type=SET_32 gpbcon - 0x08000527
vaddr=0x08000565 paddr=0x000004f5 type=SET_32 gpbcon - 0x08000539
vaddr=0x08000576 paddr=0x00000506 type=SET_32 gpbcon - 0x0800054a
vaddr=0x0800058c paddr=0x0000051c type=SET_32 gpbcon - 0x08000560
vaddr=0x0800059e paddr=0x0000052e type=SET_32 gpbcon - 0x08000572
vaddr=0x080005ae paddr=0x0000053e type=SET_32 gpbcon - 0x0800057a
vaddr=0x080005c0 paddr=0x00000550 type=SET_32 gpbcon - 0x0800058c
vaddr=0x080005d1 paddr=0x00000561 type=SET_32 gpbcon - 0x0800059d
vaddr=0x080005e7 paddr=0x00000577 type=SET_32 gpbcon - 0x080005b3
vaddr=0x080005f9 paddr=0x00000589 type=SET_32 gpbcon - 0x080005c5
vaddr=0x08000609 paddr=0x00000599 type=SET_32 gpbcon - 0x080005cd
vaddr=0x0800061b paddr=0x000005ab type=SET_32 gpbcon - 0x080005df
vaddr=0x0800062c paddr=0x000005bc type=SET_32 gpbcon - 0x080005f0
vaddr=0x08000642 paddr=0x000005d2 type=SET_32 gpbcon - 0x080005fe
vaddr=0x08000654 paddr=0x000005e4 type=SET_32 gpbcon - 0x08000610
vaddr=0x08000665 paddr=0x000005f5 type=SET_32 gpbcon - 0x08000621
vaddr=0x0800067b paddr=0x0000060b type=SET_32 gpbcon - 0x0800063f
vaddr=0x0800068d paddr=0x0000061d type=SET_32 gpbcon - 0x08000651
vaddr=0x0800069d paddr=0x0000062d type=SET_32 gpbcon - 0x08000649
vaddr=0x080006af paddr=0x0000063f type=SET_32 gpbcon - 0x0800065b
vaddr=0x080006c2 paddr=0x00000652 type=SET_32 gpbcon - 0x08000676
vaddr=0x080006d4 paddr=0x00000664 type=SET_32 gpbcon - 0x08000688
vaddr=0x080006e5 paddr=0x00000675 type=SET_32 gpbcon - 0x08000699
vaddr=0x080006fb paddr=0x0000068b type=SET_32 gpbcon - 0x080006af
vaddr=0x0800070d paddr=0x0000069d type=SET_32 gpbcon - 0x080006c1
vaddr=0x0800071d paddr=0x000006ad type=SET_32 gpbcon - 0x080006d9
vaddr=0x0800072f paddr=0x000006bf type=SET_32 gpbcon - 0x080006eb
vaddr=0x08000753 paddr=0x000006e3 type=SET_32 0x00000080
vaddr=0x0800075e paddr=0x000006ee type=SET_32 gpbcon
vaddr=0x08000774 paddr=0x00000704 type=SET_32
vaddr=0x0800077b paddr=0x0000070b type=SET_32 0x000000ba
vaddr=0x08000794 paddr=0x00000724 type=SET_32 __register_chrdev - 0x08000798
vaddr=0x0800079b paddr=0x0000072b type=SET_32 __this_module
vaddr=0x080007a2 paddr=0x00000732 type=SET_32 0x00000080
vaddr=0x080007a9 paddr=0x00000739 type=SET_32 0x000000c2
vaddr=0x080007af paddr=0x0000073f type=SET_32 major - 0x080007b3
vaddr=0x080007b4 paddr=0x00000744 type=SET_32 __class_create - 0x080007b8
vaddr=0x080007bb paddr=0x0000074b type=SET_32 - 0x080006df
vaddr=0x080007c1 paddr=0x00000751 type=SET_32 minor - 0x080007c9
vaddr=0x080007d3 paddr=0x00000763 type=SET_32 - 0x080006f7
vaddr=0x080007d9 paddr=0x00000769 type=SET_32 major - 0x080007dd
vaddr=0x080007ef paddr=0x0000077f type=SET_32 0x000000cd
vaddr=0x080007f4 paddr=0x00000784 type=SET_32 device_create - 0x080007f8
vaddr=0x080007ff paddr=0x0000078f type=SET_32 0x00000080
vaddr=0x08000805 paddr=0x00000795 type=SET_32 minor - 0x08000809
vaddr=0x08000813 paddr=0x000007a3 type=SET_32 minor - 0x08000817
vaddr=0x08000824 paddr=0x000007b4 type=SET_32 ioremap_nocache - 0x08000828
vaddr=0x08000835 paddr=0x000007c5 type=SET_32 gpbcon - 0x08000839
vaddr=0x0800083a paddr=0x000007ca type=SET_32 ioremap_nocache - 0x0800083e
vaddr=0x0800084b paddr=0x000007db type=SET_32 gpbcon - 0x08000847
vaddr=0x08000850 paddr=0x000007e0 type=SET_32 ioremap_nocache - 0x08000854
vaddr=0x08000861 paddr=0x000007f1 type=SET_32 gpbcon - 0x08000855
vaddr=0x08000866 paddr=0x000007f6 type=SET_32 ioremap_nocache - 0x0800086a
vaddr=0x08000877 paddr=0x00000807 type=SET_32 gpbcon - 0x08000863
vaddr=0x0800087c paddr=0x0000080c type=SET_32 ioremap_nocache - 0x08000880
vaddr=0x0800088d paddr=0x0000081d type=SET_32 gpbcon - 0x08000871
vaddr=0x08000892 paddr=0x00000822 type=SET_32 ioremap_nocache - 0x08000896
vaddr=0x080008a3 paddr=0x00000833 type=SET_32 gpbcon - 0x0800087f
vaddr=0x080008a8 paddr=0x00000838 type=SET_32 ioremap_nocache - 0x080008ac
vaddr=0x080008b9 paddr=0x00000849 type=SET_32 gpbcon - 0x0800088d
vaddr=0x080008be paddr=0x0000084e type=SET_32 ioremap_nocache - 0x080008c2
vaddr=0x080008cf paddr=0x0000085f type=SET_32 gpbcon - 0x0800089b
vaddr=0x080008d4 paddr=0x00000864 type=SET_32 ioremap_nocache - 0x080008d8
vaddr=0x080008e5 paddr=0x00000875 type=SET_32 gpbcon - 0x080008a9
vaddr=0x080008ea paddr=0x0000087a type=SET_32 ioremap_nocache - 0x080008ee
vaddr=0x080008fb paddr=0x0000088b type=SET_32 gpbcon - 0x080008b7
vaddr=0x08000900 paddr=0x00000890 type=SET_32 ioremap_nocache - 0x08000904
vaddr=0x08000911 paddr=0x000008a1 type=SET_32 gpbcon - 0x080008c5
vaddr=0x08000916 paddr=0x000008a6 type=SET_32 ioremap_nocache - 0x0800091a
vaddr=0x0800091d paddr=0x000008ad type=SET_32 gpbcon - 0x080008c9
vaddr=0x08000934 paddr=0x000008c4 type=SET_32 0x000000ba
vaddr=0x0800094a paddr=0x000008da type=SET_32 major - 0x0800094e
vaddr=0x0800094f paddr=0x000008df type=SET_32 __unregister_chrdev - 0x08000953
vaddr=0x08000955 paddr=0x000008e5 type=SET_32 minor - 0x0800095d
vaddr=0x08000966 paddr=0x000008f6 type=SET_32 0x00000080
vaddr=0x0800096b paddr=0x000008fb type=SET_32 device_unregister - 0x0800096f
vaddr=0x08000971 paddr=0x00000901 type=SET_32 minor - 0x08000975
vaddr=0x0800097d paddr=0x0000090d type=SET_32 minor - 0x08000981
vaddr=0x08000986 paddr=0x00000916 type=SET_32 - 0x080008aa
vaddr=0x0800098d paddr=0x0000091d type=SET_32 gpbcon
vaddr=0x08000992 paddr=0x00000922 type=SET_32 class_destroy - 0x08000996
vaddr=0x080009a8 paddr=0x00000938 type=SET_32 iounmap - 0x080009ac
vaddr=0x080009af paddr=0x0000093f type=SET_32 gpbcon 0x00000060
vaddr=0x08000ae0 paddr=0x00000000 type=SET_64 __this_module
vaddr=0x08000af8 paddr=0x00000018 type=SET_64 0x00000010
vaddr=0x08000b50 paddr=0x00000070 type=SET_64
vaddr=0x08000d30 paddr=0x00000150 type=SET_64 init_module
vaddr=0x08000df0 paddr=0x00000210 type=SET_64 cleanup_module

155 relocations

[0x08000070]> aa
[x] Analyze all flags starting with sym. and entry0 (aa)
[0x08000070]> pdf led_drv_write
[0x08000070]> pdf @ led_drv_write
Invalid address (led_drv_write)
|ERROR| Invalid command 'pdf @ led_drv_write' (0x70)
[0x08000070]> pdf @ 0x08000080
/ (fcn) sym.led_drv_write 1693
|   sym.led_drv_write (int arg_18h);
|           ; var int local_1ch @ rbp-0x1c
|           ; var int local_14h @ rbp-0x14
|           ; arg int arg_18h @ rsp+0x18
|           0x08000080      55             push rbp
|           0x08000081      4889e5         mov rbp, rsp
|           0x08000084      53             push rbx
|           0x08000085      488d6424e8     lea rsp, qword [rsp - 0x18]
|           0x0800008a      488d5de4       lea rbx, qword [local_1ch]
|           0x0800008e      488d3b         lea rdi, qword [rbx]
|           0x08000091      48c745e40000.  mov qword [local_1ch], 0
|           0x08000099      c745ec000000.  mov dword [local_14h], 0
(reloc._copy_from_user_161)
|           0x080000a0      e800000000     call 0x80000a5                ; RELOC 32 _copy_from_user
|              ; CALL XREF from 0x080000a0 (sym.led_drv_write)
|           0x080000a5      b907000000     mov ecx, 7
|           0x080000aa      48c7c7000000.  mov rdi, 0                    ; RELOC 32
|           0x080000b1      488d33         lea rsi, qword [rbx]
|           0x080000b4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
|       ,=< 0x080000b6      0f8484020000   je 0x8000340
|       |   0x080000bc      b908000000     mov ecx, 8
|       |   0x080000c1      48c7c7000000.  mov rdi, 0                    ; RELOC 32
|       |   0x080000c8      488d33         lea rsi, qword [rbx]
|       |   0x080000cb      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
|      ,==< 0x080000cd      0f842d020000   je 0x8000300
|      ||   0x080000d3      b907000000     mov ecx, 7
|      ||   0x080000d8      48c7c7000000.  mov rdi, 0                    ; RELOC 32
|      ||   0x080000df      488d33         lea rsi, qword [rbx]
|      ||   0x080000e2      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
|     ,===< 0x080000e4      0f84be020000   je 0x80003a8
|     |||   0x080000ea      b908000000     mov ecx, 8
|     |||   0x080000ef      48c7c7000000.  mov rdi, 0                    ; RELOC 32
|     |||   0x080000f6      488d33         lea rsi, qword [rbx]
|     |||   0x080000f9      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
|    ,====< 0x080000fb      0f8467020000   je 0x8000368
|    ||||   0x08000101      b907000000     mov ecx, 7
|    ||||   0x08000106      48c7c7000000.  mov rdi, 0                    ; RELOC 32
|    ||||   0x0800010d      488d33         lea rsi, qword [rbx]
|    ||||   0x08000110      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
|   ,=====< 0x08000112      0f84b8020000   je 0x80003d0
|   |||||   0x08000118      b908000000     mov ecx, 8
|   |||||   0x0800011d      48c7c7000000.  mov rdi, 0                    ; RELOC 32
|   |||||   0x08000124      488d33         lea rsi, qword [rbx]
|   |||||   0x08000127      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
|  ,======< 0x08000129      0f8421030000   je 0x8000450
|  ||||||   0x0800012f      b907000000     mov ecx, 7
|  ||||||   0x08000134      48c7c7000000.  mov rdi, 0                    ; RELOC 32
|  ||||||   0x0800013b      488d33         lea rsi, qword [rbx]
|  ||||||   0x0800013e      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ,=======< 0x08000140      0f84ca020000   je 0x8000410
| |||||||   0x08000146      b908000000     mov ecx, 8
| |||||||   0x0800014b      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x08000152      488d33         lea rsi, qword [rbx]
| |||||||   0x08000155      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x08000157      0f841b030000   je 0x8000478
| |||||||   0x0800015d      b907000000     mov ecx, 7
| |||||||   0x08000162      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x08000169      488d33         lea rsi, qword [rbx]
| |||||||   0x0800016c      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x0800016e      0f8426030000   je 0x800049a
| |||||||   0x08000174      b908000000     mov ecx, 8
| |||||||   0x08000179      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x08000180      488d33         lea rsi, qword [rbx]
| |||||||   0x08000183      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x08000185      0f8448030000   je 0x80004d3
| |||||||   0x0800018b      b907000000     mov ecx, 7
| |||||||   0x08000190      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x08000197      488d33         lea rsi, qword [rbx]
| |||||||   0x0800019a      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x0800019c      0f8453030000   je 0x80004f5
| |||||||   0x080001a2      b908000000     mov ecx, 8
| |||||||   0x080001a7      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x080001ae      488d33         lea rsi, qword [rbx]
| |||||||   0x080001b1      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x080001b3      0f8475030000   je 0x800052e
| |||||||   0x080001b9      b907000000     mov ecx, 7
| |||||||   0x080001be      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x080001c5      488d33         lea rsi, qword [rbx]
| |||||||   0x080001c8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x080001ca      0f8480030000   je 0x8000550
| |||||||   0x080001d0      b908000000     mov ecx, 8
| |||||||   0x080001d5      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x080001dc      488d33         lea rsi, qword [rbx]
| |||||||   0x080001df      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x080001e1      0f84a2030000   je 0x8000589
| |||||||   0x080001e7      b907000000     mov ecx, 7
| |||||||   0x080001ec      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x080001f3      488d33         lea rsi, qword [rbx]
| |||||||   0x080001f6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x080001f8      0f84ad030000   je 0x80005ab
| |||||||   0x080001fe      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x08000205      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_9)
| |||||||   0x08000208      e800000000     call 0x800020d                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x08000208 (sym.led_drv_write)
| |||||||   0x0800020d      85c0           test eax, eax
| ========< 0x0800020f      0f84cf030000   je 0x80005e4
| |||||||   0x08000215      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x0800021c      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_32)
| |||||||   0x0800021f      e800000000     call 0x8000224                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x0800021f (sym.led_drv_write)
| |||||||   0x08000224      85c0           test eax, eax
| ========< 0x08000226      0f84da030000   je 0x8000606
| |||||||   0x0800022c      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x08000233      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_55)
| |||||||   0x08000236      e800000000     call 0x800023b                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x08000236 (sym.led_drv_write)
| |||||||   0x0800023b      85c0           test eax, eax
| ========< 0x0800023d      0f8435040000   je 0x8000678
| |||||||   0x08000243      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x0800024a      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_78)
| |||||||   0x0800024d      e800000000     call 0x8000252                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x0800024d (sym.led_drv_write)
| |||||||   0x08000252      85c0           test eax, eax
| ========< 0x08000254      0f84e5030000   je 0x800063f
| |||||||   0x0800025a      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x08000261      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_101)
| |||||||   0x08000264      e800000000     call 0x8000269                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x08000264 (sym.led_drv_write)
| |||||||   0x08000269      85c0           test eax, eax
| ========< 0x0800026b      0f84a9040000   je 0x800071a
| |||||||   0x08000271      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x08000278      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_124)
| |||||||   0x0800027b      e800000000     call 0x8000280                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x0800027b (sym.led_drv_write)
| |||||||   0x08000280      85c0           test eax, eax
| ========< 0x08000282      0f8470040000   je 0x80006f8
| |||||||   0x08000288      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x0800028f      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_147)
| |||||||   0x08000292      e800000000     call 0x8000297                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x08000292 (sym.led_drv_write)
| |||||||   0x08000297      85c0           test eax, eax
| ========< 0x08000299      0f8420040000   je 0x80006bf
| |||||||   0x0800029f      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x080002a6      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_170)
| |||||||   0x080002a9      e800000000     call 0x80002ae                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x080002a9 (sym.led_drv_write)
| |||||||   0x080002ae      85c0           test eax, eax
| ========< 0x080002b0      0f84e4030000   je 0x800069a
| |||||||   0x080002b6      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x080002bd      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_193)
| |||||||   0x080002c0      e800000000     call 0x80002c5                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x080002c0 (sym.led_drv_write)
| |||||||   0x080002c5      85c0           test eax, eax
| ========< 0x080002c7      756b           jne 0x8000334
(reloc.gpbcon_204)
| |||||||   0x080002c9      488b15000000.  mov rdx, qword [0x080002d0] ; [0x80002d0:8]=0x1111110125028b48  ; RELOC 32 gpbcon
| |||||||      ; DATA XREF from 0x080002c9 (sym.led_drv_write)
| |||||||   0x080002d0      488b02         mov rax, qword [rdx]
| |||||||   0x080002d3      2501111111     and eax, 0x11111101
| |||||||   0x080002d8      488902         mov qword [rdx], rax
(reloc.gpbcon_222)
| |||||||   0x080002db      488b15000000.  mov rdx, qword [0x080002e2] ; [0x80002e2:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
| |||||||      ; DATA XREF from 0x080002db (sym.led_drv_write)
| |||||||   0x080002e2      488b02         mov rax, qword [rdx]
| |||||||   0x080002e5      4883c801       or rax, 1
| |||||||      ; JMP XREF from 0x080006ba (sym.led_drv_write)
| --------> 0x080002e9      488902         mov qword [rdx], rax
(reloc.gpbcon_239)
| |||||||   0x080002ec      488b15000000.  mov rdx, qword [0x080002f3] ; [0x80002f3:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
| |||||||      ; DATA XREF from 0x080002ec (sym.led_drv_write)
| |||||||   0x080002f3      488b02         mov rax, qword [rdx]
| |||||||   0x080002f6      4883c810       or rax, 0x10
| |||||||   0x080002fa      488902         mov qword [rdx], rax
| ========< 0x080002fd      eb35           jmp 0x8000334
  |||||||   0x080002ff      90             nop
(reloc.gpbcon_3)
| |||||`--> 0x08000300      488b15000000.  mov rdx, qword [0x08000307] ; [0x8000307:8]=0x1111110125028b48  ; RELOC 32 gpbcon
| ||||| |      ; DATA XREF from 0x08000300 (sym.led_drv_write)
| ||||| |   0x08000307      488b02         mov rax, qword [rdx]
| ||||| |   0x0800030a      2501111111     and eax, 0x11111101
| ||||| |   0x0800030f      488902         mov qword [rdx], rax
(reloc.gpbcon_21)
| ||||| |   0x08000312      488b15000000.  mov rdx, qword [0x08000319] ; [0x8000319:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
| ||||| |      ; DATA XREF from 0x08000312 (sym.led_drv_write)
| ||||| |   0x08000319      488b02         mov rax, qword [rdx]
| ||||| |   0x0800031c      4883c801       or rax, 1
| ||||| |      ; JMP XREF from 0x08000360 (sym.led_drv_write)
| |||||.--> 0x08000320      488902         mov qword [rdx], rax
(reloc.gpbcon_38)
| |||||:|   0x08000323      488b15000000.  mov rdx, qword [0x0800032a] ; [0x800032a:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
| |||||:|      ; DATA XREF from 0x08000323 (sym.led_drv_write)
| |||||:|   0x0800032a      488b02         mov rax, qword [rdx]
| |||||:|   0x0800032d      4883c810       or rax, 0x10
| |||||:|   0x08000331      488902         mov qword [rdx], rax
| |||||:|      ; XREFS: JMP 0x08000404  JMP 0x08000444  JMP 0x080004ce  JMP 0x08000529  JMP 0x08000584  JMP 0x080005df
| |||||:|      ; XREFS: JMP 0x0800063a  JMP 0x08000673  JMP 0x080006f3  JMP 0x080002fd
| --------> 0x08000334      488d642418     lea rsp, qword [arg_18h]    ; 0x18 ; 24
| |||||:|   0x08000339      31c0           xor eax, eax
| |||||:|   0x0800033b      5b             pop rbx
| |||||:|   0x0800033c      5d             pop rbp
| |||||:|   0x0800033d      c3             ret
  |||||:|   0x0800033e      6690           nop
| |||||:`-> 0x08000340      488b15000000.  mov rdx, qword [0x08000347] ; [0x8000347:8]=0x1111110125028b48  ; RELOC 32 gpbcon
| |||||:       ; DATA XREF from 0x08000340 (sym.led_drv_write)
| |||||:    0x08000347      488b02         mov rax, qword [rdx]
| |||||:    0x0800034a      2501111111     and eax, 0x11111101
| |||||:    0x0800034f      488902         mov qword [rdx], rax
(reloc.gpbcon_85)
| |||||:    0x08000352      488b15000000.  mov rdx, qword [0x08000359] ; [0x8000359:8]=0xebfee08348028b48  ; RELOC 32 gpbcon
| |||||:       ; DATA XREF from 0x08000352 (sym.led_drv_write)
| |||||:    0x08000359      488b02         mov rax, qword [rdx]
| |||||:    0x0800035c      4883e0fe       and rax, 0xfffffffffffffffe
| |||||`==< 0x08000360      ebbe           jmp 0x8000320
  |||||     0x08000362      660f1f440000   nop word [rax + rax]
(reloc.gpbcon_107)
| |||`----> 0x08000368      488b15000000.  mov rdx, qword [0x0800036f] ; [0x800036f:8]=0x1111110125028b48  ; RELOC 32 gpbcon
| ||| |        ; DATA XREF from 0x08000368 (sym.led_drv_write)
| ||| |     0x0800036f      488b02         mov rax, qword [rdx]
| ||| |     0x08000372      2501111111     and eax, 0x11111101
| ||| |     0x08000377      488902         mov qword [rdx], rax
(reloc.gpbcon_125)
| ||| |     0x0800037a      488b15000000.  mov rdx, qword [0x08000381] ; [0x8000381:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
| ||| |        ; DATA XREF from 0x0800037a (sym.led_drv_write)
| ||| |     0x08000381      488b02         mov rax, qword [rdx]
| ||| |     0x08000384      4883e0fe       and rax, 0xfffffffffffffffe
| ||| |        ; JMP XREF from 0x080003c8 (sym.led_drv_write)
| ||| | .-> 0x08000388      488902         mov qword [rdx], rax
(reloc.gpbcon_142)
| ||| | :   0x0800038b      488b15000000.  mov rdx, qword [0x08000392] ; [0x8000392:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
| ||| | :      ; DATA XREF from 0x0800038b (sym.led_drv_write)
| ||| | :   0x08000392      488b02         mov rax, qword [rdx]
| ||| | :   0x08000395      4883c810       or rax, 0x10
| ||| | :   0x08000399      488902         mov qword [rdx], rax
| ||| | :   0x0800039c      488d642418     lea rsp, qword [arg_18h]    ; 0x18 ; 24
| ||| | :   0x080003a1      31c0           xor eax, eax
| ||| | :   0x080003a3      5b             pop rbx
| ||| | :   0x080003a4      5d             pop rbp
| ||| | :   0x080003a5      c3             ret
  ||| | :   0x080003a6      6690           nop
(reloc.gpbcon_171)
| ||| `---> 0x080003a8      488b15000000.  mov rdx, qword [0x080003af] ; [0x80003af:8]=0x1111110125028b48  ; RELOC 32 gpbcon
| |||   :      ; DATA XREF from 0x080003a8 (sym.led_drv_write)
| |||   :   0x080003af      488b02         mov rax, qword [rdx]
| |||   :   0x080003b2      2501111111     and eax, 0x11111101
| |||   :   0x080003b7      488902         mov qword [rdx], rax
(reloc.gpbcon_189)
| |||   :   0x080003ba      488b15000000.  mov rdx, qword [0x080003c1] ; [0x80003c1:8]=0xeb01c88348028b48  ; RELOC 32 gpbcon
| |||   :      ; DATA XREF from 0x080003ba (sym.led_drv_write)
| |||   :   0x080003c1      488b02         mov rax, qword [rdx]
| |||   :   0x080003c4      4883c801       or rax, 1
| |||   `=< 0x080003c8      ebbe           jmp 0x8000388
  |||       0x080003ca      660f1f440000   nop word [rax + rax]
(reloc.gpbcon_211)
| ||`-----> 0x080003d0      488b15000000.  mov rdx, qword [0x080003d7] ; [0x80003d7:8]=0x1111110125028b48  ; RELOC 32 gpbcon
| ||           ; DATA XREF from 0x080003d0 (sym.led_drv_write)
| ||        0x080003d7      488b02         mov rax, qword [rdx]
| ||        0x080003da      2501111111     and eax, 0x11111101
| ||        0x080003df      488902         mov qword [rdx], rax
| ||        0x080003e2      488b15000000.  mov rdx, qword [0x080003e9] ; [0x80003e9:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
| ||           ; DATA XREF from 0x080003e2 (sym.led_drv_write)
| ||        0x080003e9      488b02         mov rax, qword [rdx]
| ||        0x080003ec      4883e0fe       and rax, 0xfffffffffffffffe
| ||           ; JMP XREF from 0x08000470 (sym.led_drv_write)
| ||    .-> 0x080003f0      488902         mov qword [rdx], rax
(reloc.gpbcon_246)
| ||    :   0x080003f3      488b15000000.  mov rdx, qword [0x080003fa] ; [0x80003fa:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
| ||    :      ; DATA XREF from 0x080003f3 (sym.led_drv_write)
| ||    :   0x080003fa      488b02         mov rax, qword [rdx]
| ||    :   0x080003fd      4883c810       or rax, 0x10
| ||    :   0x08000401      488902         mov qword [rdx], rax
| ========< 0x08000404      e92bffffff     jmp 0x8000334
  ||    :   0x08000409      0f1f80000000.  nop dword [rax]
(reloc.gpbcon_19)
| `-------> 0x08000410      488b15000000.  mov rdx, qword [0x08000417] ; [0x8000417:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|  |    :      ; DATA XREF from 0x08000410 (sym.led_drv_write)
|  |    :   0x08000417      488b02         mov rax, qword [rdx]
|  |    :   0x0800041a      2501111111     and eax, 0x11111101
|  |    :   0x0800041f      488902         mov qword [rdx], rax
(reloc.gpbcon_37)
|  |    :   0x08000422      488b15000000.  mov rdx, qword [0x08000429] ; [0x8000429:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
|  |    :      ; DATA XREF from 0x08000422 (sym.led_drv_write)
|  |    :   0x08000429      488b02         mov rax, qword [rdx]
|  |    :   0x0800042c      4883c801       or rax, 1
|  |    :      ; JMP XREF from 0x08000498 (sym.led_drv_write)
|  |   .--> 0x08000430      488902         mov qword [rdx], rax
(reloc.gpbcon_54)
|  |   ::   0x08000433      488b15000000.  mov rdx, qword [0x0800043a] ; [0x800043a:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
|  |   ::      ; DATA XREF from 0x08000433 (sym.led_drv_write)
|  |   ::   0x0800043a      488b02         mov rax, qword [rdx]
|  |   ::   0x0800043d      4883c810       or rax, 0x10
|  |   ::   0x08000441      488902         mov qword [rdx], rax
| ========< 0x08000444      e9ebfeffff     jmp 0x8000334
   |   ::   0x08000449      0f1f80000000.  nop dword [rax]
|  `------> 0x08000450      488b15000000.  mov rdx, qword [0x08000457] ; [0x8000457:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x08000450 (sym.led_drv_write)
|      ::   0x08000457      488b02         mov rax, qword [rdx]
|      ::   0x0800045a      2501111111     and eax, 0x11111101
|      ::   0x0800045f      488902         mov qword [rdx], rax
|      ::   0x08000462      488b15000000.  mov rdx, qword [0x08000469] ; [0x8000469:8]=0xe901c88348028b48  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x08000462 (sym.led_drv_write)
|      ::   0x08000469      488b02         mov rax, qword [rdx]
|      ::   0x0800046c      4883c801       or rax, 1
|      :`=< 0x08000470      e97bffffff     jmp 0x80003f0
       :    0x08000475      0f1f00         nop dword [rax]
| --------> 0x08000478      488b15000000.  mov rdx, qword [0x0800047f] ; [0x800047f:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x08000478 (sym.led_drv_write)
|      :    0x0800047f      488b02         mov rax, qword [rdx]
|      :    0x08000482      2501111111     and eax, 0x11111101
|      :    0x08000487      488902         mov qword [rdx], rax
|      :    0x0800048a      488b15000000.  mov rdx, qword [0x08000491] ; [0x8000491:8]=0xebfee08348028b48  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x0800048a (sym.led_drv_write)
|      :    0x08000491      488b02         mov rax, qword [rdx]
|      :    0x08000494      4883e0fe       and rax, 0xfffffffffffffffe
|      `==< 0x08000498      eb96           jmp 0x8000430
| --------> 0x0800049a      488b15000000.  mov rdx, qword [0x080004a1] ; [0x80004a1:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x0800049a (sym.led_drv_write)
|           0x080004a1      488b02         mov rax, qword [rdx]
|           0x080004a4      2501111111     and eax, 0x11111101
|           0x080004a9      488902         mov qword [rdx], rax
|           0x080004ac      488b15000000.  mov rdx, qword [0x080004b3] ; [0x80004b3:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x080004ac (sym.led_drv_write)
|           0x080004b3      488b02         mov rax, qword [rdx]
|           0x080004b6      4883e0fe       and rax, 0xfffffffffffffffe
|              ; JMP XREF from 0x080004f3 (sym.led_drv_write)
|       .-> 0x080004ba      488902         mov qword [rdx], rax
|       :   0x080004bd      488b15000000.  mov rdx, qword [0x080004c4] ; [0x80004c4:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x080004bd (sym.led_drv_write)
|       :   0x080004c4      488b02         mov rax, qword [rdx]
|       :   0x080004c7      4883c810       or rax, 0x10
|       :   0x080004cb      488902         mov qword [rdx], rax
| ========< 0x080004ce      e961feffff     jmp 0x8000334
(reloc.gpbcon_214)
| --------> 0x080004d3      488b15000000.  mov rdx, qword [0x080004da] ; [0x80004da:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x080004d3 (sym.led_drv_write)
|       :   0x080004da      488b02         mov rax, qword [rdx]
|       :   0x080004dd      2501111111     and eax, 0x11111101
|       :   0x080004e2      488902         mov qword [rdx], rax
(reloc.gpbcon_232)
|       :   0x080004e5      488b15000000.  mov rdx, qword [0x080004ec] ; [0x80004ec:8]=0xeb01c88348028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x080004e5 (sym.led_drv_write)
|       :   0x080004ec      488b02         mov rax, qword [rdx]
|       :   0x080004ef      4883c801       or rax, 1
|       `=< 0x080004f3      ebc5           jmp 0x80004ba
(reloc.gpbcon_248)
| --------> 0x080004f5      488b15000000.  mov rdx, qword [0x080004fc] ; [0x80004fc:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x080004f5 (sym.led_drv_write)
|           0x080004fc      488b02         mov rax, qword [rdx]
|           0x080004ff      2501111111     and eax, 0x11111101
|           0x08000504      488902         mov qword [rdx], rax
(reloc.gpbcon_10)
|           0x08000507      488b15000000.  mov rdx, qword [0x0800050e] ; [0x800050e:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x08000507 (sym.led_drv_write)
|           0x0800050e      488b02         mov rax, qword [rdx]
|           0x08000511      4883c801       or rax, 1
|              ; JMP XREF from 0x0800054e (sym.led_drv_write)
|       .-> 0x08000515      488902         mov qword [rdx], rax
|       :   0x08000518      488b15000000.  mov rdx, qword [0x0800051f] ; [0x800051f:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x08000518 (sym.led_drv_write)
|       :   0x0800051f      488b02         mov rax, qword [rdx]
|       :   0x08000522      4883c810       or rax, 0x10
|       :   0x08000526      488902         mov qword [rdx], rax
| ========< 0x08000529      e906feffff     jmp 0x8000334
(reloc.gpbcon_49)
| --------> 0x0800052e      488b15000000.  mov rdx, qword [0x08000535] ; [0x8000535:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x0800052e (sym.led_drv_write)
|       :   0x08000535      488b02         mov rax, qword [rdx]
|       :   0x08000538      2501111111     and eax, 0x11111101
|       :   0x0800053d      488902         mov qword [rdx], rax
(reloc.gpbcon_67)
|       :   0x08000540      488b15000000.  mov rdx, qword [0x08000547] ; [0x8000547:8]=0xebfee08348028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x08000540 (sym.led_drv_write)
|       :   0x08000547      488b02         mov rax, qword [rdx]
|       :   0x0800054a      4883e0fe       and rax, 0xfffffffffffffffe
|       `=< 0x0800054e      ebc5           jmp 0x8000515
(reloc.gpbcon_83)
| --------> 0x08000550      488b15000000.  mov rdx, qword [0x08000557] ; [0x8000557:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x08000550 (sym.led_drv_write)
|           0x08000557      488b02         mov rax, qword [rdx]
|           0x0800055a      2501111111     and eax, 0x11111101
|           0x0800055f      488902         mov qword [rdx], rax
|           0x08000562      488b15000000.  mov rdx, qword [0x08000569] ; [0x8000569:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x08000562 (sym.led_drv_write)
|           0x08000569      488b02         mov rax, qword [rdx]
|           0x0800056c      4883e0fe       and rax, 0xfffffffffffffffe
|              ; JMP XREF from 0x080005a9 (sym.led_drv_write)
|       .-> 0x08000570      488902         mov qword [rdx], rax
(reloc.gpbcon_118)
|       :   0x08000573      488b15000000.  mov rdx, qword [0x0800057a] ; [0x800057a:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x08000573 (sym.led_drv_write)
|       :   0x0800057a      488b02         mov rax, qword [rdx]
|       :   0x0800057d      4883c810       or rax, 0x10
|       :   0x08000581      488902         mov qword [rdx], rax
| ========< 0x08000584      e9abfdffff     jmp 0x8000334
(reloc.gpbcon_140)
| --------> 0x08000589      488b15000000.  mov rdx, qword [0x08000590] ; [0x8000590:8]=0x1111110125028b48 ; "H\x8b\x02%\x01\x11\x11\x11H\x89\x02H\x8b\x15"  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x08000589 (sym.led_drv_write)
|       :   0x08000590      488b02         mov rax, qword [rdx]
|       :   0x08000593      2501111111     and eax, 0x11111101
|       :   0x08000598      488902         mov qword [rdx], rax
(reloc.gpbcon_158)
|       :   0x0800059b      488b15000000.  mov rdx, qword [0x080005a2] ; [0x80005a2:8]=0xeb01c88348028b48 ; "H\x8b\x02H\x83\xc8\x01\xeb\xc5H\x8b\x15"  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x0800059b (sym.led_drv_write)
|       :   0x080005a2      488b02         mov rax, qword [rdx]
|       :   0x080005a5      4883c801       or rax, 1
|       `=< 0x080005a9      ebc5           jmp 0x8000570
(reloc.gpbcon_174)
| --------> 0x080005ab      488b15000000.  mov rdx, qword [0x080005b2] ; [0x80005b2:8]=0x1111110125028b48 ; "H\x8b\x02%\x01\x11\x11\x11H\x89\x02H\x8b\x15"  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x080005ab (sym.led_drv_write)
|           0x080005b2      488b02         mov rax, qword [rdx]
|           0x080005b5      2501111111     and eax, 0x11111101
|           0x080005ba      488902         mov qword [rdx], rax
(reloc.gpbcon_192)
|           0x080005bd      488b15000000.  mov rdx, qword [0x080005c4] ; [0x80005c4:8]=0x4801c88348028b48 ; "H\x8b\x02H\x83\xc8\x01H\x89\x02H\x8b\x15"  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x080005bd (sym.led_drv_write)
|           0x080005c4      488b02         mov rax, qword [rdx]
|           0x080005c7      4883c801       or rax, 1
|              ; JMP XREF from 0x08000604 (sym.led_drv_write)
|       .-> 0x080005cb      488902         mov qword [rdx], rax
(reloc.gpbcon_209)
|       :   0x080005ce      488b15000000.  mov rdx, qword [0x080005d5] ; [0x80005d5:8]=0x4810c88348028b48 ; "H\x8b\x02H\x83\xc8\x10H\x89\x02\xe9P\xfd\xff\xffH\x8b\x15"  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x080005ce (sym.led_drv_write)
|       :   0x080005d5      488b02         mov rax, qword [rdx]
|       :   0x080005d8      4883c810       or rax, 0x10
|       :   0x080005dc      488902         mov qword [rdx], rax
| ========< 0x080005df      e950fdffff     jmp 0x8000334
(reloc.gpbcon_231)
| --------> 0x080005e4      488b15000000.  mov rdx, qword [0x080005eb] ; [0x80005eb:8]=0x1111110125028b48 ; "H\x8b\x02%\x01\x11\x11\x11H\x89\x02H\x8b\x15"  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x080005e4 (sym.led_drv_write)
|       :   0x080005eb      488b02         mov rax, qword [rdx]
|       :   0x080005ee      2501111111     and eax, 0x11111101
|       :   0x080005f3      488902         mov qword [rdx], rax
(reloc.gpbcon_249)
|       :   0x080005f6      488b15000000.  mov rdx, qword [0x080005fd] ; [0x80005fd:8]=0xebfee08348028b48 ; "H\x8b\x02H\x83\xe0\xfe\xeb\xc5H\x8b\x15"  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x080005f6 (sym.led_drv_write)
|       :   0x080005fd      488b02         mov rax, qword [rdx]
|       :   0x08000600      4883e0fe       and rax, 0xfffffffffffffffe
|       `=< 0x08000604      ebc5           jmp 0x80005cb
(reloc.gpbcon_9)
| --------> 0x08000606      488b15000000.  mov rdx, qword [0x0800060d] ; [0x800060d:8]=0x1111110125028b48 ; "H\x8b\x02%\x01\x11\x11\x11H\x89\x02H\x8b\x15"  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x08000606 (sym.led_drv_write)
|           0x0800060d      488b02         mov rax, qword [rdx]
|           0x08000610      2501111111     and eax, 0x11111101
|           0x08000615      488902         mov qword [rdx], rax
(reloc.gpbcon_27)
|           0x08000618      488b15000000.  mov rdx, qword [0x0800061f] ; [0x800061f:8]=0x48fee08348028b48 ; "H\x8b\x02H\x83\xe0\xfeH\x89\x02H\x8b\x15"  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x08000618 (sym.led_drv_write)
|           0x0800061f      488b02         mov rax, qword [rdx]
|           0x08000622      4883e0fe       and rax, 0xfffffffffffffffe
|              ; JMP XREF from 0x08000698 (sym.led_drv_write)
|       .-> 0x08000626      488902         mov qword [rdx], rax
(reloc.gpbcon_44)
|       :   0x08000629      488b15000000.  mov rdx, qword [0x08000630] ; [0x8000630:8]=0x4810c88348028b48 ; "H\x8b\x02H\x83\xc8\x10H\x89\x02\xe9\xf5\xfc\xff\xffH\x8b\x15"  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x08000629 (sym.led_drv_write)
|       :   0x08000630      488b02         mov rax, qword [rdx]
|       :   0x08000633      4883c810       or rax, 0x10
|       :   0x08000637      488902         mov qword [rdx], rax
| ========< 0x0800063a      e9f5fcffff     jmp 0x8000334
(reloc.gpbcon_66)
| --------> 0x0800063f      488b15000000.  mov rdx, qword [0x08000646] ; [0x8000646:8]=0x1111110125028b48 ; "H\x8b\x02%\x01\x11\x11\x11H\x89\x02H\x8b\x15"  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x0800063f (sym.led_drv_write)
|       :   0x08000646      488b02         mov rax, qword [rdx]
|       :   0x08000649      2501111111     and eax, 0x11111101
|       :   0x0800064e      488902         mov qword [rdx], rax
(reloc.gpbcon_84)
|       :   0x08000651      488b15000000.  mov rdx, qword [0x08000658] ; [0x8000658:8]=0x4801c88348028b48 ; "H\x8b\x02H\x83\xc8\x01H\x89\x02H\x8b\x15"  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x08000651 (sym.led_drv_write)
|       :   0x08000658      488b02         mov rax, qword [rdx]
|       :   0x0800065b      4883c801       or rax, 1
|       :      ; JMP XREF from 0x0800073a (sym.led_drv_write)
|      .--> 0x0800065f      488902         mov qword [rdx], rax
(reloc.gpbcon_101)
|      ::   0x08000662      488b15000000.  mov rdx, qword [0x08000669] ; [0x8000669:8]=0x4810c88348028b48 ; "H\x8b\x02H\x83\xc8\x10H\x89\x02\xe9\xbc\xfc\xff\xffH\x8b\x15"  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x08000662 (sym.led_drv_write)
|      ::   0x08000669      488b02         mov rax, qword [rdx]
|      ::   0x0800066c      4883c810       or rax, 0x10
|      ::   0x08000670      488902         mov qword [rdx], rax
| ========< 0x08000673      e9bcfcffff     jmp 0x8000334
(reloc.gpbcon_123)
| --------> 0x08000678      488b15000000.  mov rdx, qword [0x0800067f] ; [0x800067f:8]=0x1111110125028b48 ; "H\x8b\x02%\x01\x11\x11\x11H\x89\x02H\x8b\x15"  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x08000678 (sym.led_drv_write)
|      ::   0x0800067f      488b02         mov rax, qword [rdx]
|      ::   0x08000682      2501111111     and eax, 0x11111101
|      ::   0x08000687      488902         mov qword [rdx], rax
|      ::   0x0800068a      488b15000000.  mov rdx, qword [0x08000691] ; [0x8000691:8]=0xeb01c88348028b48 ; "H\x8b\x02H\x83\xc8\x01\xeb\x8cH\x8b\x15"  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x0800068a (sym.led_drv_write)
|      ::   0x08000691      488b02         mov rax, qword [rdx]
|      ::   0x08000694      4883c801       or rax, 1
|      :`=< 0x08000698      eb8c           jmp 0x8000626
(reloc.gpbcon_157)
| --------> 0x0800069a      488b15000000.  mov rdx, qword [0x080006a1] ; [0x80006a1:8]=0x1111110125028b48 ; "H\x8b\x02%\x01\x11\x11\x11H\x89\x02H\x8b\x15"  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x0800069a (sym.led_drv_write)
|      :    0x080006a1      488b02         mov rax, qword [rdx]
|      :    0x080006a4      2501111111     and eax, 0x11111101
|      :    0x080006a9      488902         mov qword [rdx], rax
|      :    0x080006ac      488b15000000.  mov rdx, qword [0x080006b3] ; [0x80006b3:8]=0xe9fee08348028b48 ; "H\x8b\x02H\x83\xe0\xfe\xe9*\xfc\xff\xffH\x8b\x15"  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x080006ac (sym.led_drv_write)
|      :    0x080006b3      488b02         mov rax, qword [rdx]
|      :    0x080006b6      4883e0fe       and rax, 0xfffffffffffffffe
| ========< 0x080006ba      e92afcffff     jmp 0x80002e9
(reloc.gpbcon_194)
| --------> 0x080006bf      488b15000000.  mov rdx, qword [0x080006c6] ; [0x80006c6:8]=0x1111110125028b48 ; "H\x8b\x02%\x01\x11\x11\x11H\x89\x02H\x8b\x15"  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x080006bf (sym.led_drv_write)
|      :    0x080006c6      488b02         mov rax, qword [rdx]
|      :    0x080006c9      2501111111     and eax, 0x11111101
|      :    0x080006ce      488902         mov qword [rdx], rax
(reloc.gpbcon_212)
|      :    0x080006d1      488b15000000.  mov rdx, qword [0x080006d8] ; [0x80006d8:8]=0x4801c88348028b48 ; "H\x8b\x02H\x83\xc8\x01H\x89\x02H\x8b\x15"  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x080006d1 (sym.led_drv_write)
|      :    0x080006d8      488b02         mov rax, qword [rdx]
|      :    0x080006db      4883c801       or rax, 1
|      :       ; JMP XREF from 0x08000718 (sym.led_drv_write)
|      :.-> 0x080006df      488902         mov qword [rdx], rax
|      ::   0x080006e2      488b15000000.  mov rdx, qword [0x080006e9] ; [0x80006e9:8]=0x4810c88348028b48 ; "H\x8b\x02H\x83\xc8\x10H\x89\x02\xe9<\xfc\xff\xffH\x8b\x15"  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x080006e2 (sym.led_drv_write)
|      ::   0x080006e9      488b02         mov rax, qword [rdx]
|      ::   0x080006ec      4883c810       or rax, 0x10
|      ::   0x080006f0      488902         mov qword [rdx], rax
| ========< 0x080006f3      e93cfcffff     jmp 0x8000334
| --------> 0x080006f8      488b15000000.  mov rdx, qword [0x080006ff] ; [0x80006ff:8]=0x1111110125028b48 ; "H\x8b\x02%\x01\x11\x11\x11H\x89\x02H\x8b\x15"  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x080006f8 (sym.led_drv_write)
|      ::   0x080006ff      488b02         mov rax, qword [rdx]
|      ::   0x08000702      2501111111     and eax, 0x11111101
|      ::   0x08000707      488902         mov qword [rdx], rax
(reloc.gpbcon_13)
|      ::   0x0800070a      488b15000000.  mov rdx, qword [0x08000711] ; [0x8000711:8]=0xebfee08348028b48 ; "H\x8b\x02H\x83\xe0\xfe\xeb\xc5H\x8b\x15"  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x0800070a (sym.led_drv_write)
|      ::   0x08000711      488b02         mov rax, qword [rdx]
|      ::   0x08000714      4883e0fe       and rax, 0xfffffffffffffffe
|      :`=< 0x08000718      ebc5           jmp 0x80006df
| --------> 0x0800071a      488b15000000.  mov rdx, qword [0x08000721] ; [0x8000721:8]=0x1111110125028b48 ; "H\x8b\x02%\x01\x11\x11\x11H\x89\x02H\x8b\x15"  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x0800071a (sym.led_drv_write)
|      :    0x08000721      488b02         mov rax, qword [rdx]
|      :    0x08000724      2501111111     and eax, 0x11111101
|      :    0x08000729      488902         mov qword [rdx], rax
(reloc.gpbcon_47)
|      :    0x0800072c      488b15000000.  mov rdx, qword [0x08000733] ; [0x8000733:8]=0xe9fee08348028b48 ; "H\x8b\x02H\x83\xe0\xfe\xe9 \xff\xff\xff\x901\xc0fffff.\x0f\x1f\x84"  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x0800072c (sym.led_drv_write)
|      :    0x08000733      488b02         mov rax, qword [rdx]
|      :    0x08000736      4883e0fe       and rax, 0xfffffffffffffffe
\      `==< 0x0800073a      e920ffffff     jmp 0x800065f
[0x08000070]> pdf @ 0x08000080
/ (fcn) sym.led_drv_write 1693
|   sym.led_drv_write (int arg_18h);
|           ; var int local_1ch @ rbp-0x1c
|           ; var int local_14h @ rbp-0x14
|           ; arg int arg_18h @ rsp+0x18
|           0x08000080      55             push rbp
|           0x08000081      4889e5         mov rbp, rsp
|           0x08000084      53             push rbx
|           0x08000085      488d6424e8     lea rsp, qword [rsp - 0x18]
|           0x0800008a      488d5de4       lea rbx, qword [local_1ch]
|           0x0800008e      488d3b         lea rdi, qword [rbx]
|           0x08000091      48c745e40000.  mov qword [local_1ch], 0
|           0x08000099      c745ec000000.  mov dword [local_14h], 0
(reloc._copy_from_user_161)
|           0x080000a0      e800000000     call 0x80000a5                ; RELOC 32 _copy_from_user
|              ; CALL XREF from 0x080000a0 (sym.led_drv_write)
|           0x080000a5      b907000000     mov ecx, 7
|           0x080000aa      48c7c7000000.  mov rdi, 0                    ; RELOC 32
|           0x080000b1      488d33         lea rsi, qword [rbx]
|           0x080000b4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
|       ,=< 0x080000b6      0f8484020000   je 0x8000340
|       |   0x080000bc      b908000000     mov ecx, 8
|       |   0x080000c1      48c7c7000000.  mov rdi, 0                    ; RELOC 32
|       |   0x080000c8      488d33         lea rsi, qword [rbx]
|       |   0x080000cb      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
|      ,==< 0x080000cd      0f842d020000   je 0x8000300
|      ||   0x080000d3      b907000000     mov ecx, 7
|      ||   0x080000d8      48c7c7000000.  mov rdi, 0                    ; RELOC 32
|      ||   0x080000df      488d33         lea rsi, qword [rbx]
|      ||   0x080000e2      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
|     ,===< 0x080000e4      0f84be020000   je 0x80003a8
|     |||   0x080000ea      b908000000     mov ecx, 8
|     |||   0x080000ef      48c7c7000000.  mov rdi, 0                    ; RELOC 32
|     |||   0x080000f6      488d33         lea rsi, qword [rbx]
|     |||   0x080000f9      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
|    ,====< 0x080000fb      0f8467020000   je 0x8000368
|    ||||   0x08000101      b907000000     mov ecx, 7
|    ||||   0x08000106      48c7c7000000.  mov rdi, 0                    ; RELOC 32
|    ||||   0x0800010d      488d33         lea rsi, qword [rbx]
|    ||||   0x08000110      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
|   ,=====< 0x08000112      0f84b8020000   je 0x80003d0
|   |||||   0x08000118      b908000000     mov ecx, 8
|   |||||   0x0800011d      48c7c7000000.  mov rdi, 0                    ; RELOC 32
|   |||||   0x08000124      488d33         lea rsi, qword [rbx]
|   |||||   0x08000127      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
|  ,======< 0x08000129      0f8421030000   je 0x8000450
|  ||||||   0x0800012f      b907000000     mov ecx, 7
|  ||||||   0x08000134      48c7c7000000.  mov rdi, 0                    ; RELOC 32
|  ||||||   0x0800013b      488d33         lea rsi, qword [rbx]
|  ||||||   0x0800013e      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ,=======< 0x08000140      0f84ca020000   je 0x8000410
| |||||||   0x08000146      b908000000     mov ecx, 8
| |||||||   0x0800014b      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x08000152      488d33         lea rsi, qword [rbx]
| |||||||   0x08000155      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x08000157      0f841b030000   je 0x8000478
| |||||||   0x0800015d      b907000000     mov ecx, 7
| |||||||   0x08000162      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x08000169      488d33         lea rsi, qword [rbx]
| |||||||   0x0800016c      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x0800016e      0f8426030000   je 0x800049a
| |||||||   0x08000174      b908000000     mov ecx, 8
| |||||||   0x08000179      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x08000180      488d33         lea rsi, qword [rbx]
| |||||||   0x08000183      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x08000185      0f8448030000   je 0x80004d3
| |||||||   0x0800018b      b907000000     mov ecx, 7
| |||||||   0x08000190      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x08000197      488d33         lea rsi, qword [rbx]
| |||||||   0x0800019a      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x0800019c      0f8453030000   je 0x80004f5
| |||||||   0x080001a2      b908000000     mov ecx, 8
| |||||||   0x080001a7      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x080001ae      488d33         lea rsi, qword [rbx]
| |||||||   0x080001b1      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x080001b3      0f8475030000   je 0x800052e
| |||||||   0x080001b9      b907000000     mov ecx, 7
| |||||||   0x080001be      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x080001c5      488d33         lea rsi, qword [rbx]
| |||||||   0x080001c8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x080001ca      0f8480030000   je 0x8000550
| |||||||   0x080001d0      b908000000     mov ecx, 8
| |||||||   0x080001d5      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x080001dc      488d33         lea rsi, qword [rbx]
| |||||||   0x080001df      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x080001e1      0f84a2030000   je 0x8000589
| |||||||   0x080001e7      b907000000     mov ecx, 7
| |||||||   0x080001ec      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x080001f3      488d33         lea rsi, qword [rbx]
| |||||||   0x080001f6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x080001f8      0f84ad030000   je 0x80005ab
| |||||||   0x080001fe      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x08000205      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_9)
| |||||||   0x08000208      e800000000     call 0x800020d                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x08000208 (sym.led_drv_write)
| |||||||   0x0800020d      85c0           test eax, eax
| ========< 0x0800020f      0f84cf030000   je 0x80005e4
| |||||||   0x08000215      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x0800021c      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_32)
| |||||||   0x0800021f      e800000000     call 0x8000224                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x0800021f (sym.led_drv_write)
| |||||||   0x08000224      85c0           test eax, eax
| ========< 0x08000226      0f84da030000   je 0x8000606
| |||||||   0x0800022c      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x08000233      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_55)
| |||||||   0x08000236      e800000000     call 0x800023b                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x08000236 (sym.led_drv_write)
| |||||||   0x0800023b      85c0           test eax, eax
| ========< 0x0800023d      0f8435040000   je 0x8000678
| |||||||   0x08000243      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x0800024a      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_78)
| |||||||   0x0800024d      e800000000     call 0x8000252                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x0800024d (sym.led_drv_write)
| |||||||   0x08000252      85c0           test eax, eax
| ========< 0x08000254      0f84e5030000   je 0x800063f
| |||||||   0x0800025a      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x08000261      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_101)
| |||||||   0x08000264      e800000000     call 0x8000269                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x08000264 (sym.led_drv_write)
| |||||||   0x08000269      85c0           test eax, eax
| ========< 0x0800026b      0f84a9040000   je 0x800071a
| |||||||   0x08000271      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x08000278      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_124)
| |||||||   0x0800027b      e800000000     call 0x8000280                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x0800027b (sym.led_drv_write)
| |||||||   0x08000280      85c0           test eax, eax
| ========< 0x08000282      0f8470040000   je 0x80006f8
| |||||||   0x08000288      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x0800028f      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_147)
| |||||||   0x08000292      e800000000     call 0x8000297                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x08000292 (sym.led_drv_write)
| |||||||   0x08000297      85c0           test eax, eax
| ========< 0x08000299      0f8420040000   je 0x80006bf
| |||||||   0x0800029f      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x080002a6      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_170)
| |||||||   0x080002a9      e800000000     call 0x80002ae                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x080002a9 (sym.led_drv_write)
| |||||||   0x080002ae      85c0           test eax, eax
| ========< 0x080002b0      0f84e4030000   je 0x800069a
| |||||||   0x080002b6      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x080002bd      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_193)
| |||||||   0x080002c0      e800000000     call 0x80002c5                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x080002c0 (sym.led_drv_write)
| |||||||   0x080002c5      85c0           test eax, eax
| ========< 0x080002c7      756b           jne 0x8000334
(reloc.gpbcon_204)
| |||||||   0x080002c9      488b15000000.  mov rdx, qword [0x080002d0] ; [0x80002d0:8]=0x1111110125028b48  ; RELOC 32 gpbcon
| |||||||      ; DATA XREF from 0x080002c9 (sym.led_drv_write)
| |||||||   0x080002d0      488b02         mov rax, qword [rdx]
| |||||||   0x080002d3      2501111111     and eax, 0x11111101
| |||||||   0x080002d8      488902         mov qword [rdx], rax
(reloc.gpbcon_222)
| |||||||   0x080002db      488b15000000.  mov rdx, qword [0x080002e2] ; [0x80002e2:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
| |||||||      ; DATA XREF from 0x080002db (sym.led_drv_write)
| |||||||   0x080002e2      488b02         mov rax, qword [rdx]
| |||||||   0x080002e5      4883c801       or rax, 1
| |||||||      ; JMP XREF from 0x080006ba (sym.led_drv_write)
| --------> 0x080002e9      488902         mov qword [rdx], rax
(reloc.gpbcon_239)
| |||||||   0x080002ec      488b15000000.  mov rdx, qword [0x080002f3] ; [0x80002f3:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
| |||||||      ; DATA XREF from 0x080002ec (sym.led_drv_write)
| |||||||   0x080002f3      488b02         mov rax, qword [rdx]
| |||||||   0x080002f6      4883c810       or rax, 0x10
| |||||||   0x080002fa      488902         mov qword [rdx], rax
| ========< 0x080002fd      eb35           jmp 0x8000334
  |||||||   0x080002ff      90             nop
(reloc.gpbcon_3)
| |||||`--> 0x08000300      488b15000000.  mov rdx, qword [0x08000307] ; [0x8000307:8]=0x1111110125028b48  ; RELOC 32 gpbcon
| ||||| |      ; DATA XREF from 0x08000300 (sym.led_drv_write)
| ||||| |   0x08000307      488b02         mov rax, qword [rdx]
| ||||| |   0x0800030a      2501111111     and eax, 0x11111101
| ||||| |   0x0800030f      488902         mov qword [rdx], rax
(reloc.gpbcon_21)
| ||||| |   0x08000312      488b15000000.  mov rdx, qword [0x08000319] ; [0x8000319:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
| ||||| |      ; DATA XREF from 0x08000312 (sym.led_drv_write)
| ||||| |   0x08000319      488b02         mov rax, qword [rdx]
| ||||| |   0x0800031c      4883c801       or rax, 1
| ||||| |      ; JMP XREF from 0x08000360 (sym.led_drv_write)
| |||||.--> 0x08000320      488902         mov qword [rdx], rax
(reloc.gpbcon_38)
| |||||:|   0x08000323      488b15000000.  mov rdx, qword [0x0800032a] ; [0x800032a:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
| |||||:|      ; DATA XREF from 0x08000323 (sym.led_drv_write)
| |||||:|   0x0800032a      488b02         mov rax, qword [rdx]
| |||||:|   0x0800032d      4883c810       or rax, 0x10
| |||||:|   0x08000331      488902         mov qword [rdx], rax
| |||||:|      ; XREFS: JMP 0x08000404  JMP 0x08000444  JMP 0x080004ce  JMP 0x08000529  JMP 0x08000584  JMP 0x080005df  JMP 0x0800063a  JMP 0x08000673  JMP 0x080006f3  JMP 0x080002fd
| --------> 0x08000334      488d642418     lea rsp, qword [arg_18h]    ; 0x18 ; 24
| |||||:|   0x08000339      31c0           xor eax, eax
| |||||:|   0x0800033b      5b             pop rbx
| |||||:|   0x0800033c      5d             pop rbp
| |||||:|   0x0800033d      c3             ret
  |||||:|   0x0800033e      6690           nop
| |||||:`-> 0x08000340      488b15000000.  mov rdx, qword [0x08000347] ; [0x8000347:8]=0x1111110125028b48  ; RELOC 32 gpbcon
| |||||:       ; DATA XREF from 0x08000340 (sym.led_drv_write)
| |||||:    0x08000347      488b02         mov rax, qword [rdx]
| |||||:    0x0800034a      2501111111     and eax, 0x11111101
| |||||:    0x0800034f      488902         mov qword [rdx], rax
(reloc.gpbcon_85)
| |||||:    0x08000352      488b15000000.  mov rdx, qword [0x08000359] ; [0x8000359:8]=0xebfee08348028b48  ; RELOC 32 gpbcon
| |||||:       ; DATA XREF from 0x08000352 (sym.led_drv_write)
| |||||:    0x08000359      488b02         mov rax, qword [rdx]
| |||||:    0x0800035c      4883e0fe       and rax, 0xfffffffffffffffe
| |||||`==< 0x08000360      ebbe           jmp 0x8000320
  |||||     0x08000362      660f1f440000   nop word [rax + rax]
(reloc.gpbcon_107)
| |||`----> 0x08000368      488b15000000.  mov rdx, qword [0x0800036f] ; [0x800036f:8]=0x1111110125028b48  ; RELOC 32 gpbcon
| ||| |        ; DATA XREF from 0x08000368 (sym.led_drv_write)
| ||| |     0x0800036f      488b02         mov rax, qword [rdx]
| ||| |     0x08000372      2501111111     and eax, 0x11111101
| ||| |     0x08000377      488902         mov qword [rdx], rax
(reloc.gpbcon_125)
| ||| |     0x0800037a      488b15000000.  mov rdx, qword [0x08000381] ; [0x8000381:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
| ||| |        ; DATA XREF from 0x0800037a (sym.led_drv_write)
| ||| |     0x08000381      488b02         mov rax, qword [rdx]
| ||| |     0x08000384      4883e0fe       and rax, 0xfffffffffffffffe
| ||| |        ; JMP XREF from 0x080003c8 (sym.led_drv_write)
| ||| | .-> 0x08000388      488902         mov qword [rdx], rax
(reloc.gpbcon_142)
| ||| | :   0x0800038b      488b15000000.  mov rdx, qword [0x08000392] ; [0x8000392:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
| ||| | :      ; DATA XREF from 0x0800038b (sym.led_drv_write)
| ||| | :   0x08000392      488b02         mov rax, qword [rdx]
| ||| | :   0x08000395      4883c810       or rax, 0x10
| ||| | :   0x08000399      488902         mov qword [rdx], rax
| ||| | :   0x0800039c      488d642418     lea rsp, qword [arg_18h]    ; 0x18 ; 24
| ||| | :   0x080003a1      31c0           xor eax, eax
| ||| | :   0x080003a3      5b             pop rbx
| ||| | :   0x080003a4      5d             pop rbp
| ||| | :   0x080003a5      c3             ret
  ||| | :   0x080003a6      6690           nop
(reloc.gpbcon_171)
| ||| `---> 0x080003a8      488b15000000.  mov rdx, qword [0x080003af] ; [0x80003af:8]=0x1111110125028b48  ; RELOC 32 gpbcon
| |||   :      ; DATA XREF from 0x080003a8 (sym.led_drv_write)
| |||   :   0x080003af      488b02         mov rax, qword [rdx]
| |||   :   0x080003b2      2501111111     and eax, 0x11111101
| |||   :   0x080003b7      488902         mov qword [rdx], rax
(reloc.gpbcon_189)
| |||   :   0x080003ba      488b15000000.  mov rdx, qword [0x080003c1] ; [0x80003c1:8]=0xeb01c88348028b48  ; RELOC 32 gpbcon
| |||   :      ; DATA XREF from 0x080003ba (sym.led_drv_write)
| |||   :   0x080003c1      488b02         mov rax, qword [rdx]
| |||   :   0x080003c4      4883c801       or rax, 1
| |||   `=< 0x080003c8      ebbe           jmp 0x8000388
  |||       0x080003ca      660f1f440000   nop word [rax + rax]
(reloc.gpbcon_211)
| ||`-----> 0x080003d0      488b15000000.  mov rdx, qword [0x080003d7] ; [0x80003d7:8]=0x1111110125028b48  ; RELOC 32 gpbcon
| ||           ; DATA XREF from 0x080003d0 (sym.led_drv_write)
| ||        0x080003d7      488b02         mov rax, qword [rdx]
| ||        0x080003da      2501111111     and eax, 0x11111101
| ||        0x080003df      488902         mov qword [rdx], rax
| ||        0x080003e2      488b15000000.  mov rdx, qword [0x080003e9] ; [0x80003e9:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
| ||           ; DATA XREF from 0x080003e2 (sym.led_drv_write)
| ||        0x080003e9      488b02         mov rax, qword [rdx]
| ||        0x080003ec      4883e0fe       and rax, 0xfffffffffffffffe
| ||           ; JMP XREF from 0x08000470 (sym.led_drv_write)
| ||    .-> 0x080003f0      488902         mov qword [rdx], rax
(reloc.gpbcon_246)
| ||    :   0x080003f3      488b15000000.  mov rdx, qword [0x080003fa] ; [0x80003fa:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
| ||    :      ; DATA XREF from 0x080003f3 (sym.led_drv_write)
| ||    :   0x080003fa      488b02         mov rax, qword [rdx]
| ||    :   0x080003fd      4883c810       or rax, 0x10
| ||    :   0x08000401      488902         mov qword [rdx], rax
| ========< 0x08000404      e92bffffff     jmp 0x8000334
  ||    :   0x08000409      0f1f80000000.  nop dword [rax]
(reloc.gpbcon_19)
| `-------> 0x08000410      488b15000000.  mov rdx, qword [0x08000417] ; [0x8000417:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|  |    :      ; DATA XREF from 0x08000410 (sym.led_drv_write)
|  |    :   0x08000417      488b02         mov rax, qword [rdx]
|  |    :   0x0800041a      2501111111     and eax, 0x11111101
|  |    :   0x0800041f      488902         mov qword [rdx], rax
(reloc.gpbcon_37)
|  |    :   0x08000422      488b15000000.  mov rdx, qword [0x08000429] ; [0x8000429:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
|  |    :      ; DATA XREF from 0x08000422 (sym.led_drv_write)
|  |    :   0x08000429      488b02         mov rax, qword [rdx]
|  |    :   0x0800042c      4883c801       or rax, 1
|  |    :      ; JMP XREF from 0x08000498 (sym.led_drv_write)
|  |   .--> 0x08000430      488902         mov qword [rdx], rax
(reloc.gpbcon_54)
|  |   ::   0x08000433      488b15000000.  mov rdx, qword [0x0800043a] ; [0x800043a:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
|  |   ::      ; DATA XREF from 0x08000433 (sym.led_drv_write)
|  |   ::   0x0800043a      488b02         mov rax, qword [rdx]
|  |   ::   0x0800043d      4883c810       or rax, 0x10
|  |   ::   0x08000441      488902         mov qword [rdx], rax
| ========< 0x08000444      e9ebfeffff     jmp 0x8000334
   |   ::   0x08000449      0f1f80000000.  nop dword [rax]
|  `------> 0x08000450      488b15000000.  mov rdx, qword [0x08000457] ; [0x8000457:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x08000450 (sym.led_drv_write)
|      ::   0x08000457      488b02         mov rax, qword [rdx]
|      ::   0x0800045a      2501111111     and eax, 0x11111101
|      ::   0x0800045f      488902         mov qword [rdx], rax
|      ::   0x08000462      488b15000000.  mov rdx, qword [0x08000469] ; [0x8000469:8]=0xe901c88348028b48  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x08000462 (sym.led_drv_write)
|      ::   0x08000469      488b02         mov rax, qword [rdx]
|      ::   0x0800046c      4883c801       or rax, 1
|      :`=< 0x08000470      e97bffffff     jmp 0x80003f0
       :    0x08000475      0f1f00         nop dword [rax]
| --------> 0x08000478      488b15000000.  mov rdx, qword [0x0800047f] ; [0x800047f:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x08000478 (sym.led_drv_write)
|      :    0x0800047f      488b02         mov rax, qword [rdx]
|      :    0x08000482      2501111111     and eax, 0x11111101
|      :    0x08000487      488902         mov qword [rdx], rax
|      :    0x0800048a      488b15000000.  mov rdx, qword [0x08000491] ; [0x8000491:8]=0xebfee08348028b48  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x0800048a (sym.led_drv_write)
|      :    0x08000491      488b02         mov rax, qword [rdx]
|      :    0x08000494      4883e0fe       and rax, 0xfffffffffffffffe
|      `==< 0x08000498      eb96           jmp 0x8000430
| --------> 0x0800049a      488b15000000.  mov rdx, qword [0x080004a1] ; [0x80004a1:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x0800049a (sym.led_drv_write)
|           0x080004a1      488b02         mov rax, qword [rdx]
|           0x080004a4      2501111111     and eax, 0x11111101
|           0x080004a9      488902         mov qword [rdx], rax
|           0x080004ac      488b15000000.  mov rdx, qword [0x080004b3] ; [0x80004b3:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x080004ac (sym.led_drv_write)
|           0x080004b3      488b02         mov rax, qword [rdx]
|           0x080004b6      4883e0fe       and rax, 0xfffffffffffffffe
|              ; JMP XREF from 0x080004f3 (sym.led_drv_write)
|       .-> 0x080004ba      488902         mov qword [rdx], rax
|       :   0x080004bd      488b15000000.  mov rdx, qword [0x080004c4] ; [0x80004c4:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x080004bd (sym.led_drv_write)
|       :   0x080004c4      488b02         mov rax, qword [rdx]
|       :   0x080004c7      4883c810       or rax, 0x10
|       :   0x080004cb      488902         mov qword [rdx], rax
| ========< 0x080004ce      e961feffff     jmp 0x8000334
(reloc.gpbcon_214)
| --------> 0x080004d3      488b15000000.  mov rdx, qword [0x080004da] ; [0x80004da:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x080004d3 (sym.led_drv_write)
|       :   0x080004da      488b02         mov rax, qword [rdx]
|       :   0x080004dd      2501111111     and eax, 0x11111101
|       :   0x080004e2      488902         mov qword [rdx], rax
(reloc.gpbcon_232)
|       :   0x080004e5      488b15000000.  mov rdx, qword [0x080004ec] ; [0x80004ec:8]=0xeb01c88348028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x080004e5 (sym.led_drv_write)
|       :   0x080004ec      488b02         mov rax, qword [rdx]
|       :   0x080004ef      4883c801       or rax, 1
|       `=< 0x080004f3      ebc5           jmp 0x80004ba
(reloc.gpbcon_248)
| --------> 0x080004f5      488b15000000.  mov rdx, qword [0x080004fc] ; [0x80004fc:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x080004f5 (sym.led_drv_write)
|           0x080004fc      488b02         mov rax, qword [rdx]
|           0x080004ff      2501111111     and eax, 0x11111101
|           0x08000504      488902         mov qword [rdx], rax
(reloc.gpbcon_10)
|           0x08000507      488b15000000.  mov rdx, qword [0x0800050e] ; [0x800050e:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x08000507 (sym.led_drv_write)
|           0x0800050e      488b02         mov rax, qword [rdx]
|           0x08000511      4883c801       or rax, 1
|              ; JMP XREF from 0x0800054e (sym.led_drv_write)
|       .-> 0x08000515      488902         mov qword [rdx], rax
|       :   0x08000518      488b15000000.  mov rdx, qword [0x0800051f] ; [0x800051f:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x08000518 (sym.led_drv_write)
|       :   0x0800051f      488b02         mov rax, qword [rdx]
|       :   0x08000522      4883c810       or rax, 0x10
|       :   0x08000526      488902         mov qword [rdx], rax
| ========< 0x08000529      e906feffff     jmp 0x8000334
(reloc.gpbcon_49)
| --------> 0x0800052e      488b15000000.  mov rdx, qword [0x08000535] ; [0x8000535:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x0800052e (sym.led_drv_write)
|       :   0x08000535      488b02         mov rax, qword [rdx]
|       :   0x08000538      2501111111     and eax, 0x11111101
|       :   0x0800053d      488902         mov qword [rdx], rax
(reloc.gpbcon_67)
|       :   0x08000540      488b15000000.  mov rdx, qword [0x08000547] ; [0x8000547:8]=0xebfee08348028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x08000540 (sym.led_drv_write)
|       :   0x08000547      488b02         mov rax, qword [rdx]
|       :   0x0800054a      4883e0fe       and rax, 0xfffffffffffffffe
|       `=< 0x0800054e      ebc5           jmp 0x8000515
(reloc.gpbcon_83)
| --------> 0x08000550      488b15000000.  mov rdx, qword [0x08000557] ; [0x8000557:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x08000550 (sym.led_drv_write)
|           0x08000557      488b02         mov rax, qword [rdx]
|           0x0800055a      2501111111     and eax, 0x11111101
|           0x0800055f      488902         mov qword [rdx], rax
|           0x08000562      488b15000000.  mov rdx, qword [0x08000569] ; [0x8000569:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x08000562 (sym.led_drv_write)
|           0x08000569      488b02         mov rax, qword [rdx]
|           0x0800056c      4883e0fe       and rax, 0xfffffffffffffffe
|              ; JMP XREF from 0x080005a9 (sym.led_drv_write)
|       .-> 0x08000570      488902         mov qword [rdx], rax
(reloc.gpbcon_118)
|       :   0x08000573      488b15000000.  mov rdx, qword [0x0800057a] ; [0x800057a:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x08000573 (sym.led_drv_write)
|       :   0x0800057a      488b02         mov rax, qword [rdx]
|       :   0x0800057d      4883c810       or rax, 0x10
|       :   0x08000581      488902         mov qword [rdx], rax
| ========< 0x08000584      e9abfdffff     jmp 0x8000334
(reloc.gpbcon_140)
| --------> 0x08000589      488b15000000.  mov rdx, qword [0x08000590] ; [0x8000590:8]=0x1111110125028b48 ; "H\x8b\x02%\x01\x11\x11\x11H\x89\x02H\x8b\x15"  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x08000589 (sym.led_drv_write)
|       :   0x08000590      488b02         mov rax, qword [rdx]
|       :   0x08000593      2501111111     and eax, 0x11111101
|       :   0x08000598      488902         mov qword [rdx], rax
(reloc.gpbcon_158)
|       :   0x0800059b      488b15000000.  mov rdx, qword [0x080005a2] ; [0x80005a2:8]=0xeb01c88348028b48 ; "H\x8b\x02H\x83\xc8\x01\xeb\xc5H\x8b\x15"  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x0800059b (sym.led_drv_write)
|       :   0x080005a2      488b02         mov rax, qword [rdx]
|       :   0x080005a5      4883c801       or rax, 1
|       `=< 0x080005a9      ebc5           jmp 0x8000570
(reloc.gpbcon_174)
| --------> 0x080005ab      488b15000000.  mov rdx, qword [0x080005b2] ; [0x80005b2:8]=0x1111110125028b48 ; "H\x8b\x02%\x01\x11\x11\x11H\x89\x02H\x8b\x15"  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x080005ab (sym.led_drv_write)
|           0x080005b2      488b02         mov rax, qword [rdx]
|           0x080005b5      2501111111     and eax, 0x11111101
|           0x080005ba      488902         mov qword [rdx], rax
(reloc.gpbcon_192)
|           0x080005bd      488b15000000.  mov rdx, qword [0x080005c4] ; [0x80005c4:8]=0x4801c88348028b48 ; "H\x8b\x02H\x83\xc8\x01H\x89\x02H\x8b\x15"  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x080005bd (sym.led_drv_write)
|           0x080005c4      488b02         mov rax, qword [rdx]
|           0x080005c7      4883c801       or rax, 1
|              ; JMP XREF from 0x08000604 (sym.led_drv_write)
|       .-> 0x080005cb      488902         mov qword [rdx], rax
(reloc.gpbcon_209)
|       :   0x080005ce      488b15000000.  mov rdx, qword [0x080005d5] ; [0x80005d5:8]=0x4810c88348028b48 ; "H\x8b\x02H\x83\xc8\x10H\x89\x02\xe9P\xfd\xff\xffH\x8b\x15"  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x080005ce (sym.led_drv_write)
|       :   0x080005d5      488b02         mov rax, qword [rdx]
|       :   0x080005d8      4883c810       or rax, 0x10
|       :   0x080005dc      488902         mov qword [rdx], rax
| ========< 0x080005df      e950fdffff     jmp 0x8000334
(reloc.gpbcon_231)
| --------> 0x080005e4      488b15000000.  mov rdx, qword [0x080005eb] ; [0x80005eb:8]=0x1111110125028b48 ; "H\x8b\x02%\x01\x11\x11\x11H\x89\x02H\x8b\x15"  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x080005e4 (sym.led_drv_write)
|       :   0x080005eb      488b02         mov rax, qword [rdx]
|       :   0x080005ee      2501111111     and eax, 0x11111101
|       :   0x080005f3      488902         mov qword [rdx], rax
(reloc.gpbcon_249)
|       :   0x080005f6      488b15000000.  mov rdx, qword [0x080005fd] ; [0x80005fd:8]=0xebfee08348028b48 ; "H\x8b\x02H\x83\xe0\xfe\xeb\xc5H\x8b\x15"  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x080005f6 (sym.led_drv_write)
|       :   0x080005fd      488b02         mov rax, qword [rdx]
|       :   0x08000600      4883e0fe       and rax, 0xfffffffffffffffe
|       `=< 0x08000604      ebc5           jmp 0x80005cb
(reloc.gpbcon_9)
| --------> 0x08000606      488b15000000.  mov rdx, qword [0x0800060d] ; [0x800060d:8]=0x1111110125028b48 ; "H\x8b\x02%\x01\x11\x11\x11H\x89\x02H\x8b\x15"  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x08000606 (sym.led_drv_write)
|           0x0800060d      488b02         mov rax, qword [rdx]
|           0x08000610      2501111111     and eax, 0x11111101
|           0x08000615      488902         mov qword [rdx], rax
(reloc.gpbcon_27)
|           0x08000618      488b15000000.  mov rdx, qword [0x0800061f] ; [0x800061f:8]=0x48fee08348028b48 ; "H\x8b\x02H\x83\xe0\xfeH\x89\x02H\x8b\x15"  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x08000618 (sym.led_drv_write)
|           0x0800061f      488b02         mov rax, qword [rdx]
|           0x08000622      4883e0fe       and rax, 0xfffffffffffffffe
|              ; JMP XREF from 0x08000698 (sym.led_drv_write)
|       .-> 0x08000626      488902         mov qword [rdx], rax
(reloc.gpbcon_44)
|       :   0x08000629      488b15000000.  mov rdx, qword [0x08000630] ; [0x8000630:8]=0x4810c88348028b48 ; "H\x8b\x02H\x83\xc8\x10H\x89\x02\xe9\xf5\xfc\xff\xffH\x8b\x15"  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x08000629 (sym.led_drv_write)
|       :   0x08000630      488b02         mov rax, qword [rdx]
|       :   0x08000633      4883c810       or rax, 0x10
|       :   0x08000637      488902         mov qword [rdx], rax
| ========< 0x0800063a      e9f5fcffff     jmp 0x8000334
(reloc.gpbcon_66)
| --------> 0x0800063f      488b15000000.  mov rdx, qword [0x08000646] ; [0x8000646:8]=0x1111110125028b48 ; "H\x8b\x02%\x01\x11\x11\x11H\x89\x02H\x8b\x15"  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x0800063f (sym.led_drv_write)
|       :   0x08000646      488b02         mov rax, qword [rdx]
|       :   0x08000649      2501111111     and eax, 0x11111101
|       :   0x0800064e      488902         mov qword [rdx], rax
(reloc.gpbcon_84)
|       :   0x08000651      488b15000000.  mov rdx, qword [0x08000658] ; [0x8000658:8]=0x4801c88348028b48 ; "H\x8b\x02H\x83\xc8\x01H\x89\x02H\x8b\x15"  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x08000651 (sym.led_drv_write)
|       :   0x08000658      488b02         mov rax, qword [rdx]
|       :   0x0800065b      4883c801       or rax, 1
|       :      ; JMP XREF from 0x0800073a (sym.led_drv_write)
|      .--> 0x0800065f      488902         mov qword [rdx], rax
(reloc.gpbcon_101)
|      ::   0x08000662      488b15000000.  mov rdx, qword [0x08000669] ; [0x8000669:8]=0x4810c88348028b48 ; "H\x8b\x02H\x83\xc8\x10H\x89\x02\xe9\xbc\xfc\xff\xffH\x8b\x15"  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x08000662 (sym.led_drv_write)
|      ::   0x08000669      488b02         mov rax, qword [rdx]
|      ::   0x0800066c      4883c810       or rax, 0x10
|      ::   0x08000670      488902         mov qword [rdx], rax
| ========< 0x08000673      e9bcfcffff     jmp 0x8000334
(reloc.gpbcon_123)
| --------> 0x08000678      488b15000000.  mov rdx, qword [0x0800067f] ; [0x800067f:8]=0x1111110125028b48 ; "H\x8b\x02%\x01\x11\x11\x11H\x89\x02H\x8b\x15"  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x08000678 (sym.led_drv_write)
|      ::   0x0800067f      488b02         mov rax, qword [rdx]
|      ::   0x08000682      2501111111     and eax, 0x11111101
|      ::   0x08000687      488902         mov qword [rdx], rax
|      ::   0x0800068a      488b15000000.  mov rdx, qword [0x08000691] ; [0x8000691:8]=0xeb01c88348028b48 ; "H\x8b\x02H\x83\xc8\x01\xeb\x8cH\x8b\x15"  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x0800068a (sym.led_drv_write)
|      ::   0x08000691      488b02         mov rax, qword [rdx]
|      ::   0x08000694      4883c801       or rax, 1
|      :`=< 0x08000698      eb8c           jmp 0x8000626
(reloc.gpbcon_157)
| --------> 0x0800069a      488b15000000.  mov rdx, qword [0x080006a1] ; [0x80006a1:8]=0x1111110125028b48 ; "H\x8b\x02%\x01\x11\x11\x11H\x89\x02H\x8b\x15"  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x0800069a (sym.led_drv_write)
|      :    0x080006a1      488b02         mov rax, qword [rdx]
|      :    0x080006a4      2501111111     and eax, 0x11111101
|      :    0x080006a9      488902         mov qword [rdx], rax
|      :    0x080006ac      488b15000000.  mov rdx, qword [0x080006b3] ; [0x80006b3:8]=0xe9fee08348028b48 ; "H\x8b\x02H\x83\xe0\xfe\xe9*\xfc\xff\xffH\x8b\x15"  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x080006ac (sym.led_drv_write)
|      :    0x080006b3      488b02         mov rax, qword [rdx]
|      :    0x080006b6      4883e0fe       and rax, 0xfffffffffffffffe
| ========< 0x080006ba      e92afcffff     jmp 0x80002e9
(reloc.gpbcon_194)
| --------> 0x080006bf      488b15000000.  mov rdx, qword [0x080006c6] ; [0x80006c6:8]=0x1111110125028b48 ; "H\x8b\x02%\x01\x11\x11\x11H\x89\x02H\x8b\x15"  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x080006bf (sym.led_drv_write)
|      :    0x080006c6      488b02         mov rax, qword [rdx]
|      :    0x080006c9      2501111111     and eax, 0x11111101
|      :    0x080006ce      488902         mov qword [rdx], rax
(reloc.gpbcon_212)
|      :    0x080006d1      488b15000000.  mov rdx, qword [0x080006d8] ; [0x80006d8:8]=0x4801c88348028b48 ; "H\x8b\x02H\x83\xc8\x01H\x89\x02H\x8b\x15"  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x080006d1 (sym.led_drv_write)
|      :    0x080006d8      488b02         mov rax, qword [rdx]
|      :    0x080006db      4883c801       or rax, 1
|      :       ; JMP XREF from 0x08000718 (sym.led_drv_write)
|      :.-> 0x080006df      488902         mov qword [rdx], rax
|      ::   0x080006e2      488b15000000.  mov rdx, qword [0x080006e9] ; [0x80006e9:8]=0x4810c88348028b48 ; "H\x8b\x02H\x83\xc8\x10H\x89\x02\xe9<\xfc\xff\xffH\x8b\x15"  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x080006e2 (sym.led_drv_write)
|      ::   0x080006e9      488b02         mov rax, qword [rdx]
|      ::   0x080006ec      4883c810       or rax, 0x10
|      ::   0x080006f0      488902         mov qword [rdx], rax
| ========< 0x080006f3      e93cfcffff     jmp 0x8000334
| --------> 0x080006f8      488b15000000.  mov rdx, qword [0x080006ff] ; [0x80006ff:8]=0x1111110125028b48 ; "H\x8b\x02%\x01\x11\x11\x11H\x89\x02H\x8b\x15"  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x080006f8 (sym.led_drv_write)
|      ::   0x080006ff      488b02         mov rax, qword [rdx]
|      ::   0x08000702      2501111111     and eax, 0x11111101
|      ::   0x08000707      488902         mov qword [rdx], rax
(reloc.gpbcon_13)
|      ::   0x0800070a      488b15000000.  mov rdx, qword [0x08000711] ; [0x8000711:8]=0xebfee08348028b48 ; "H\x8b\x02H\x83\xe0\xfe\xeb\xc5H\x8b\x15"  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x0800070a (sym.led_drv_write)
|      ::   0x08000711      488b02         mov rax, qword [rdx]
|      ::   0x08000714      4883e0fe       and rax, 0xfffffffffffffffe
|      :`=< 0x08000718      ebc5           jmp 0x80006df
| --------> 0x0800071a      488b15000000.  mov rdx, qword [0x08000721] ; [0x8000721:8]=0x1111110125028b48 ; "H\x8b\x02%\x01\x11\x11\x11H\x89\x02H\x8b\x15"  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x0800071a (sym.led_drv_write)
|      :    0x08000721      488b02         mov rax, qword [rdx]
|      :    0x08000724      2501111111     and eax, 0x11111101
|      :    0x08000729      488902         mov qword [rdx], rax
(reloc.gpbcon_47)
|      :    0x0800072c      488b15000000.  mov rdx, qword [0x08000733] ; [0x8000733:8]=0xe9fee08348028b48 ; "H\x8b\x02H\x83\xe0\xfe\xe9 \xff\xff\xff\x901\xc0fffff.\x0f\x1f\x84"  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x0800072c (sym.led_drv_write)
|      :    0x08000733      488b02         mov rax, qword [rdx]
|      :    0x08000736      4883e0fe       and rax, 0xfffffffffffffffe
\      `==< 0x0800073a      e920ffffff     jmp 0x800065f
[0x08000070]> pd 600
Do you want to print 880 lines? (y/N)
            ;-- section..text:
            ;-- rip:
/ (fcn) entry0 8
|   entry0 ();
|           0x08000070      55             push rbp                    ; [02] m-r-x section size 2381 named .text
|           0x08000071      31c0           xor eax, eax
|           0x08000073      4889e5         mov rbp, rsp
|           0x08000076      5d             pop rbp
\           0x08000077      c3             ret
            0x08000078      0f1f84000000.  nop dword [rax + rax]
/ (fcn) sym.led_drv_write 1693
|   sym.led_drv_write (int arg_18h);
|           ; var int local_1ch @ rbp-0x1c
|           ; var int local_14h @ rbp-0x14
|           ; arg int arg_18h @ rsp+0x18
|           0x08000080      55             push rbp
|           0x08000081      4889e5         mov rbp, rsp
|           0x08000084      53             push rbx
|           0x08000085      488d6424e8     lea rsp, qword [rsp - 0x18]
|           0x0800008a      488d5de4       lea rbx, qword [local_1ch]
|           0x0800008e      488d3b         lea rdi, qword [rbx]
|           0x08000091      48c745e40000.  mov qword [local_1ch], 0
|           0x08000099      c745ec000000.  mov dword [local_14h], 0
(reloc._copy_from_user_161)
|           0x080000a0      e800000000     call 0x80000a5                ; RELOC 32 _copy_from_user
|              ; CALL XREF from 0x080000a0 (sym.led_drv_write)
|           0x080000a5      b907000000     mov ecx, 7
|           0x080000aa      48c7c7000000.  mov rdi, 0                    ; RELOC 32
|           0x080000b1      488d33         lea rsi, qword [rbx]
|           0x080000b4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
|       ,=< 0x080000b6      0f8484020000   je 0x8000340
|       |   0x080000bc      b908000000     mov ecx, 8
|       |   0x080000c1      48c7c7000000.  mov rdi, 0                    ; RELOC 32
|       |   0x080000c8      488d33         lea rsi, qword [rbx]
|       |   0x080000cb      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
|      ,==< 0x080000cd      0f842d020000   je 0x8000300
|      ||   0x080000d3      b907000000     mov ecx, 7
|      ||   0x080000d8      48c7c7000000.  mov rdi, 0                    ; RELOC 32
|      ||   0x080000df      488d33         lea rsi, qword [rbx]
|      ||   0x080000e2      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
|     ,===< 0x080000e4      0f84be020000   je 0x80003a8
|     |||   0x080000ea      b908000000     mov ecx, 8
|     |||   0x080000ef      48c7c7000000.  mov rdi, 0                    ; RELOC 32
|     |||   0x080000f6      488d33         lea rsi, qword [rbx]
|     |||   0x080000f9      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
|    ,====< 0x080000fb      0f8467020000   je 0x8000368
|    ||||   0x08000101      b907000000     mov ecx, 7
|    ||||   0x08000106      48c7c7000000.  mov rdi, 0                    ; RELOC 32
|    ||||   0x0800010d      488d33         lea rsi, qword [rbx]
|    ||||   0x08000110      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
|   ,=====< 0x08000112      0f84b8020000   je 0x80003d0
|   |||||   0x08000118      b908000000     mov ecx, 8
|   |||||   0x0800011d      48c7c7000000.  mov rdi, 0                    ; RELOC 32
|   |||||   0x08000124      488d33         lea rsi, qword [rbx]
|   |||||   0x08000127      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
|  ,======< 0x08000129      0f8421030000   je 0x8000450
|  ||||||   0x0800012f      b907000000     mov ecx, 7
|  ||||||   0x08000134      48c7c7000000.  mov rdi, 0                    ; RELOC 32
|  ||||||   0x0800013b      488d33         lea rsi, qword [rbx]
|  ||||||   0x0800013e      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ,=======< 0x08000140      0f84ca020000   je 0x8000410
| |||||||   0x08000146      b908000000     mov ecx, 8
| |||||||   0x0800014b      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x08000152      488d33         lea rsi, qword [rbx]
| |||||||   0x08000155      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x08000157      0f841b030000   je 0x8000478
| |||||||   0x0800015d      b907000000     mov ecx, 7
| |||||||   0x08000162      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x08000169      488d33         lea rsi, qword [rbx]
| |||||||   0x0800016c      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x0800016e      0f8426030000   je 0x800049a
| |||||||   0x08000174      b908000000     mov ecx, 8
| |||||||   0x08000179      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x08000180      488d33         lea rsi, qword [rbx]
| |||||||   0x08000183      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x08000185      0f8448030000   je 0x80004d3
| |||||||   0x0800018b      b907000000     mov ecx, 7
| |||||||   0x08000190      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x08000197      488d33         lea rsi, qword [rbx]
| |||||||   0x0800019a      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x0800019c      0f8453030000   je 0x80004f5
| |||||||   0x080001a2      b908000000     mov ecx, 8
| |||||||   0x080001a7      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x080001ae      488d33         lea rsi, qword [rbx]
| |||||||   0x080001b1      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x080001b3      0f8475030000   je 0x800052e
| |||||||   0x080001b9      b907000000     mov ecx, 7
| |||||||   0x080001be      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x080001c5      488d33         lea rsi, qword [rbx]
| |||||||   0x080001c8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x080001ca      0f8480030000   je 0x8000550
| |||||||   0x080001d0      b908000000     mov ecx, 8
| |||||||   0x080001d5      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x080001dc      488d33         lea rsi, qword [rbx]
| |||||||   0x080001df      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x080001e1      0f84a2030000   je 0x8000589
| |||||||   0x080001e7      b907000000     mov ecx, 7
| |||||||   0x080001ec      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x080001f3      488d33         lea rsi, qword [rbx]
| |||||||   0x080001f6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x080001f8      0f84ad030000   je 0x80005ab
| |||||||   0x080001fe      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x08000205      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_9)
| |||||||   0x08000208      e800000000     call 0x800020d                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x08000208 (sym.led_drv_write)
| |||||||   0x0800020d      85c0           test eax, eax
| ========< 0x0800020f      0f84cf030000   je 0x80005e4
| |||||||   0x08000215      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x0800021c      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_32)
| |||||||   0x0800021f      e800000000     call 0x8000224                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x0800021f (sym.led_drv_write)
| |||||||   0x08000224      85c0           test eax, eax
| ========< 0x08000226      0f84da030000   je 0x8000606
| |||||||   0x0800022c      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x08000233      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_55)
| |||||||   0x08000236      e800000000     call 0x800023b                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x08000236 (sym.led_drv_write)
| |||||||   0x0800023b      85c0           test eax, eax
| ========< 0x0800023d      0f8435040000   je 0x8000678
| |||||||   0x08000243      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x0800024a      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_78)
| |||||||   0x0800024d      e800000000     call 0x8000252                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x0800024d (sym.led_drv_write)
| |||||||   0x08000252      85c0           test eax, eax
| ========< 0x08000254      0f84e5030000   je 0x800063f
| |||||||   0x0800025a      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x08000261      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_101)
| |||||||   0x08000264      e800000000     call 0x8000269                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x08000264 (sym.led_drv_write)
| |||||||   0x08000269      85c0           test eax, eax
| ========< 0x0800026b      0f84a9040000   je 0x800071a
| |||||||   0x08000271      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x08000278      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_124)
| |||||||   0x0800027b      e800000000     call 0x8000280                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x0800027b (sym.led_drv_write)
| |||||||   0x08000280      85c0           test eax, eax
| ========< 0x08000282      0f8470040000   je 0x80006f8
| |||||||   0x08000288      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x0800028f      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_147)
| |||||||   0x08000292      e800000000     call 0x8000297                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x08000292 (sym.led_drv_write)
| |||||||   0x08000297      85c0           test eax, eax
| ========< 0x08000299      0f8420040000   je 0x80006bf
| |||||||   0x0800029f      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x080002a6      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_170)
| |||||||   0x080002a9      e800000000     call 0x80002ae                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x080002a9 (sym.led_drv_write)
| |||||||   0x080002ae      85c0           test eax, eax
| ========< 0x080002b0      0f84e4030000   je 0x800069a
| |||||||   0x080002b6      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x080002bd      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_193)
| |||||||   0x080002c0      e800000000     call 0x80002c5                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x080002c0 (sym.led_drv_write)
| |||||||   0x080002c5      85c0           test eax, eax
| ========< 0x080002c7      756b           jne 0x8000334
(reloc.gpbcon_204)
| |||||||   0x080002c9      488b15000000.  mov rdx, qword [0x080002d0] ; [0x80002d0:8]=0x1111110125028b48  ; RELOC 32 gpbcon
| |||||||      ; DATA XREF from 0x080002c9 (sym.led_drv_write)
| |||||||   0x080002d0      488b02         mov rax, qword [rdx]
| |||||||   0x080002d3      2501111111     and eax, 0x11111101
| |||||||   0x080002d8      488902         mov qword [rdx], rax
(reloc.gpbcon_222)
| |||||||   0x080002db      488b15000000.  mov rdx, qword [0x080002e2] ; [0x80002e2:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
| |||||||      ; DATA XREF from 0x080002db (sym.led_drv_write)
| |||||||   0x080002e2      488b02         mov rax, qword [rdx]
| |||||||   0x080002e5      4883c801       or rax, 1
| |||||||      ; JMP XREF from 0x080006ba (sym.led_drv_write)
| --------> 0x080002e9      488902         mov qword [rdx], rax
(reloc.gpbcon_239)
| |||||||   0x080002ec      488b15000000.  mov rdx, qword [0x080002f3] ; [0x80002f3:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
| |||||||      ; DATA XREF from 0x080002ec (sym.led_drv_write)
| |||||||   0x080002f3      488b02         mov rax, qword [rdx]
| |||||||   0x080002f6      4883c810       or rax, 0x10
| |||||||   0x080002fa      488902         mov qword [rdx], rax
| ========< 0x080002fd      eb35           jmp 0x8000334
  |||||||   0x080002ff      90             nop
(reloc.gpbcon_3)
| |||||`--> 0x08000300      488b15000000.  mov rdx, qword [0x08000307] ; [0x8000307:8]=0x1111110125028b48  ; RELOC 32 gpbcon
| ||||| |      ; DATA XREF from 0x08000300 (sym.led_drv_write)
| ||||| |   0x08000307      488b02         mov rax, qword [rdx]
| ||||| |   0x0800030a      2501111111     and eax, 0x11111101
| ||||| |   0x0800030f      488902         mov qword [rdx], rax
(reloc.gpbcon_21)
| ||||| |   0x08000312      488b15000000.  mov rdx, qword [0x08000319] ; [0x8000319:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
| ||||| |      ; DATA XREF from 0x08000312 (sym.led_drv_write)
| ||||| |   0x08000319      488b02         mov rax, qword [rdx]
| ||||| |   0x0800031c      4883c801       or rax, 1
| ||||| |      ; JMP XREF from 0x08000360 (sym.led_drv_write)
| |||||.--> 0x08000320      488902         mov qword [rdx], rax
(reloc.gpbcon_38)
| |||||:|   0x08000323      488b15000000.  mov rdx, qword [0x0800032a] ; [0x800032a:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
| |||||:|      ; DATA XREF from 0x08000323 (sym.led_drv_write)
| |||||:|   0x0800032a      488b02         mov rax, qword [rdx]
| |||||:|   0x0800032d      4883c810       or rax, 0x10
| |||||:|   0x08000331      488902         mov qword [rdx], rax
| |||||:|      ; XREFS: JMP 0x08000404  JMP 0x08000444  JMP 0x080004ce  JMP 0x08000529  JMP 0x08000584  JMP 0x080005df  JMP 0x0800063a  JMP 0x08000673  JMP 0x080006f3  JMP 0x080002fd
| --------> 0x08000334      488d642418     lea rsp, qword [arg_18h]    ; 0x18 ; 24
| |||||:|   0x08000339      31c0           xor eax, eax
| |||||:|   0x0800033b      5b             pop rbx
| |||||:|   0x0800033c      5d             pop rbp
| |||||:|   0x0800033d      c3             ret
  |||||:|   0x0800033e      6690           nop
| |||||:`-> 0x08000340      488b15000000.  mov rdx, qword [0x08000347] ; [0x8000347:8]=0x1111110125028b48  ; RELOC 32 gpbcon
| |||||:       ; DATA XREF from 0x08000340 (sym.led_drv_write)
| |||||:    0x08000347      488b02         mov rax, qword [rdx]
| |||||:    0x0800034a      2501111111     and eax, 0x11111101
| |||||:    0x0800034f      488902         mov qword [rdx], rax
(reloc.gpbcon_85)
| |||||:    0x08000352      488b15000000.  mov rdx, qword [0x08000359] ; [0x8000359:8]=0xebfee08348028b48  ; RELOC 32 gpbcon
| |||||:       ; DATA XREF from 0x08000352 (sym.led_drv_write)
| |||||:    0x08000359      488b02         mov rax, qword [rdx]
| |||||:    0x0800035c      4883e0fe       and rax, 0xfffffffffffffffe
| |||||`==< 0x08000360      ebbe           jmp 0x8000320
  |||||     0x08000362      660f1f440000   nop word [rax + rax]
(reloc.gpbcon_107)
| |||`----> 0x08000368      488b15000000.  mov rdx, qword [0x0800036f] ; [0x800036f:8]=0x1111110125028b48  ; RELOC 32 gpbcon
| ||| |        ; DATA XREF from 0x08000368 (sym.led_drv_write)
| ||| |     0x0800036f      488b02         mov rax, qword [rdx]
| ||| |     0x08000372      2501111111     and eax, 0x11111101
| ||| |     0x08000377      488902         mov qword [rdx], rax
(reloc.gpbcon_125)
| ||| |     0x0800037a      488b15000000.  mov rdx, qword [0x08000381] ; [0x8000381:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
| ||| |        ; DATA XREF from 0x0800037a (sym.led_drv_write)
| ||| |     0x08000381      488b02         mov rax, qword [rdx]
| ||| |     0x08000384      4883e0fe       and rax, 0xfffffffffffffffe
| ||| |        ; JMP XREF from 0x080003c8 (sym.led_drv_write)
| ||| | .-> 0x08000388      488902         mov qword [rdx], rax
(reloc.gpbcon_142)
| ||| | :   0x0800038b      488b15000000.  mov rdx, qword [0x08000392] ; [0x8000392:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
| ||| | :      ; DATA XREF from 0x0800038b (sym.led_drv_write)
| ||| | :   0x08000392      488b02         mov rax, qword [rdx]
| ||| | :   0x08000395      4883c810       or rax, 0x10
| ||| | :   0x08000399      488902         mov qword [rdx], rax
| ||| | :   0x0800039c      488d642418     lea rsp, qword [arg_18h]    ; 0x18 ; 24
| ||| | :   0x080003a1      31c0           xor eax, eax
| ||| | :   0x080003a3      5b             pop rbx
| ||| | :   0x080003a4      5d             pop rbp
| ||| | :   0x080003a5      c3             ret
  ||| | :   0x080003a6      6690           nop
(reloc.gpbcon_171)
| ||| `---> 0x080003a8      488b15000000.  mov rdx, qword [0x080003af] ; [0x80003af:8]=0x1111110125028b48  ; RELOC 32 gpbcon
| |||   :      ; DATA XREF from 0x080003a8 (sym.led_drv_write)
| |||   :   0x080003af      488b02         mov rax, qword [rdx]
| |||   :   0x080003b2      2501111111     and eax, 0x11111101
| |||   :   0x080003b7      488902         mov qword [rdx], rax
(reloc.gpbcon_189)
| |||   :   0x080003ba      488b15000000.  mov rdx, qword [0x080003c1] ; [0x80003c1:8]=0xeb01c88348028b48  ; RELOC 32 gpbcon
| |||   :      ; DATA XREF from 0x080003ba (sym.led_drv_write)
| |||   :   0x080003c1      488b02         mov rax, qword [rdx]
| |||   :   0x080003c4      4883c801       or rax, 1
| |||   `=< 0x080003c8      ebbe           jmp 0x8000388
  |||       0x080003ca      660f1f440000   nop word [rax + rax]
(reloc.gpbcon_211)
| ||`-----> 0x080003d0      488b15000000.  mov rdx, qword [0x080003d7] ; [0x80003d7:8]=0x1111110125028b48  ; RELOC 32 gpbcon
| ||           ; DATA XREF from 0x080003d0 (sym.led_drv_write)
| ||        0x080003d7      488b02         mov rax, qword [rdx]
| ||        0x080003da      2501111111     and eax, 0x11111101
| ||        0x080003df      488902         mov qword [rdx], rax
| ||        0x080003e2      488b15000000.  mov rdx, qword [0x080003e9] ; [0x80003e9:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
| ||           ; DATA XREF from 0x080003e2 (sym.led_drv_write)
| ||        0x080003e9      488b02         mov rax, qword [rdx]
| ||        0x080003ec      4883e0fe       and rax, 0xfffffffffffffffe
| ||           ; JMP XREF from 0x08000470 (sym.led_drv_write)
| ||    .-> 0x080003f0      488902         mov qword [rdx], rax
(reloc.gpbcon_246)
| ||    :   0x080003f3      488b15000000.  mov rdx, qword [0x080003fa] ; [0x80003fa:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
| ||    :      ; DATA XREF from 0x080003f3 (sym.led_drv_write)
| ||    :   0x080003fa      488b02         mov rax, qword [rdx]
| ||    :   0x080003fd      4883c810       or rax, 0x10
| ||    :   0x08000401      488902         mov qword [rdx], rax
| ========< 0x08000404      e92bffffff     jmp 0x8000334
  ||    :   0x08000409      0f1f80000000.  nop dword [rax]
(reloc.gpbcon_19)
| `-------> 0x08000410      488b15000000.  mov rdx, qword [0x08000417] ; [0x8000417:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|  |    :      ; DATA XREF from 0x08000410 (sym.led_drv_write)
|  |    :   0x08000417      488b02         mov rax, qword [rdx]
|  |    :   0x0800041a      2501111111     and eax, 0x11111101
|  |    :   0x0800041f      488902         mov qword [rdx], rax
(reloc.gpbcon_37)
|  |    :   0x08000422      488b15000000.  mov rdx, qword [0x08000429] ; [0x8000429:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
|  |    :      ; DATA XREF from 0x08000422 (sym.led_drv_write)
|  |    :   0x08000429      488b02         mov rax, qword [rdx]
|  |    :   0x0800042c      4883c801       or rax, 1
|  |    :      ; JMP XREF from 0x08000498 (sym.led_drv_write)
|  |   .--> 0x08000430      488902         mov qword [rdx], rax
(reloc.gpbcon_54)
|  |   ::   0x08000433      488b15000000.  mov rdx, qword [0x0800043a] ; [0x800043a:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
|  |   ::      ; DATA XREF from 0x08000433 (sym.led_drv_write)
|  |   ::   0x0800043a      488b02         mov rax, qword [rdx]
|  |   ::   0x0800043d      4883c810       or rax, 0x10
|  |   ::   0x08000441      488902         mov qword [rdx], rax
| ========< 0x08000444      e9ebfeffff     jmp 0x8000334
   |   ::   0x08000449      0f1f80000000.  nop dword [rax]
|  `------> 0x08000450      488b15000000.  mov rdx, qword [0x08000457] ; [0x8000457:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x08000450 (sym.led_drv_write)
|      ::   0x08000457      488b02         mov rax, qword [rdx]
|      ::   0x0800045a      2501111111     and eax, 0x11111101
|      ::   0x0800045f      488902         mov qword [rdx], rax
|      ::   0x08000462      488b15000000.  mov rdx, qword [0x08000469] ; [0x8000469:8]=0xe901c88348028b48  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x08000462 (sym.led_drv_write)
|      ::   0x08000469      488b02         mov rax, qword [rdx]
|      ::   0x0800046c      4883c801       or rax, 1
|      :`=< 0x08000470      e97bffffff     jmp 0x80003f0
       :    0x08000475      0f1f00         nop dword [rax]
| --------> 0x08000478      488b15000000.  mov rdx, qword [0x0800047f] ; [0x800047f:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x08000478 (sym.led_drv_write)
|      :    0x0800047f      488b02         mov rax, qword [rdx]
|      :    0x08000482      2501111111     and eax, 0x11111101
|      :    0x08000487      488902         mov qword [rdx], rax
|      :    0x0800048a      488b15000000.  mov rdx, qword [0x08000491] ; [0x8000491:8]=0xebfee08348028b48  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x0800048a (sym.led_drv_write)
|      :    0x08000491      488b02         mov rax, qword [rdx]
|      :    0x08000494      4883e0fe       and rax, 0xfffffffffffffffe
|      `==< 0x08000498      eb96           jmp 0x8000430
| --------> 0x0800049a      488b15000000.  mov rdx, qword [0x080004a1] ; [0x80004a1:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x0800049a (sym.led_drv_write)
|           0x080004a1      488b02         mov rax, qword [rdx]
|           0x080004a4      2501111111     and eax, 0x11111101
|           0x080004a9      488902         mov qword [rdx], rax
|           0x080004ac      488b15000000.  mov rdx, qword [0x080004b3] ; [0x80004b3:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x080004ac (sym.led_drv_write)
|           0x080004b3      488b02         mov rax, qword [rdx]
|           0x080004b6      4883e0fe       and rax, 0xfffffffffffffffe
|              ; JMP XREF from 0x080004f3 (sym.led_drv_write)
|       .-> 0x080004ba      488902         mov qword [rdx], rax
|       :   0x080004bd      488b15000000.  mov rdx, qword [0x080004c4] ; [0x80004c4:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x080004bd (sym.led_drv_write)
|       :   0x080004c4      488b02         mov rax, qword [rdx]
|       :   0x080004c7      4883c810       or rax, 0x10
|       :   0x080004cb      488902         mov qword [rdx], rax
| ========< 0x080004ce      e961feffff     jmp 0x8000334
(reloc.gpbcon_214)
| --------> 0x080004d3      488b15000000.  mov rdx, qword [0x080004da] ; [0x80004da:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x080004d3 (sym.led_drv_write)
|       :   0x080004da      488b02         mov rax, qword [rdx]
|       :   0x080004dd      2501111111     and eax, 0x11111101
|       :   0x080004e2      488902         mov qword [rdx], rax
(reloc.gpbcon_232)
|       :   0x080004e5      488b15000000.  mov rdx, qword [0x080004ec] ; [0x80004ec:8]=0xeb01c88348028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x080004e5 (sym.led_drv_write)
|       :   0x080004ec      488b02         mov rax, qword [rdx]
|       :   0x080004ef      4883c801       or rax, 1
|       `=< 0x080004f3      ebc5           jmp 0x80004ba
(reloc.gpbcon_248)
| --------> 0x080004f5      488b15000000.  mov rdx, qword [0x080004fc] ; [0x80004fc:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x080004f5 (sym.led_drv_write)
|           0x080004fc      488b02         mov rax, qword [rdx]
|           0x080004ff      2501111111     and eax, 0x11111101
|           0x08000504      488902         mov qword [rdx], rax
(reloc.gpbcon_10)
|           0x08000507      488b15000000.  mov rdx, qword [0x0800050e] ; [0x800050e:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x08000507 (sym.led_drv_write)
|           0x0800050e      488b02         mov rax, qword [rdx]
|           0x08000511      4883c801       or rax, 1
|              ; JMP XREF from 0x0800054e (sym.led_drv_write)
|       .-> 0x08000515      488902         mov qword [rdx], rax
|       :   0x08000518      488b15000000.  mov rdx, qword [0x0800051f] ; [0x800051f:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x08000518 (sym.led_drv_write)
|       :   0x0800051f      488b02         mov rax, qword [rdx]
|       :   0x08000522      4883c810       or rax, 0x10
|       :   0x08000526      488902         mov qword [rdx], rax
| ========< 0x08000529      e906feffff     jmp 0x8000334
(reloc.gpbcon_49)
| --------> 0x0800052e      488b15000000.  mov rdx, qword [0x08000535] ; [0x8000535:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x0800052e (sym.led_drv_write)
|       :   0x08000535      488b02         mov rax, qword [rdx]
|       :   0x08000538      2501111111     and eax, 0x11111101
|       :   0x0800053d      488902         mov qword [rdx], rax
(reloc.gpbcon_67)
|       :   0x08000540      488b15000000.  mov rdx, qword [0x08000547] ; [0x8000547:8]=0xebfee08348028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x08000540 (sym.led_drv_write)
|       :   0x08000547      488b02         mov rax, qword [rdx]
|       :   0x0800054a      4883e0fe       and rax, 0xfffffffffffffffe
|       `=< 0x0800054e      ebc5           jmp 0x8000515
(reloc.gpbcon_83)
| --------> 0x08000550      488b15000000.  mov rdx, qword [0x08000557] ; [0x8000557:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x08000550 (sym.led_drv_write)
|           0x08000557      488b02         mov rax, qword [rdx]
|           0x0800055a      2501111111     and eax, 0x11111101
|           0x0800055f      488902         mov qword [rdx], rax
|           0x08000562      488b15000000.  mov rdx, qword [0x08000569] ; [0x8000569:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x08000562 (sym.led_drv_write)
|           0x08000569      488b02         mov rax, qword [rdx]
|           0x0800056c      4883e0fe       and rax, 0xfffffffffffffffe
|              ; JMP XREF from 0x080005a9 (sym.led_drv_write)
|       .-> 0x08000570      488902         mov qword [rdx], rax
(reloc.gpbcon_118)
|       :   0x08000573      488b15000000.  mov rdx, qword [0x0800057a] ; [0x800057a:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x08000573 (sym.led_drv_write)
|       :   0x0800057a      488b02         mov rax, qword [rdx]
|       :   0x0800057d      4883c810       or rax, 0x10
|       :   0x08000581      488902         mov qword [rdx], rax
| ========< 0x08000584      e9abfdffff     jmp 0x8000334
(reloc.gpbcon_140)
| --------> 0x08000589      488b15000000.  mov rdx, qword [0x08000590] ; [0x8000590:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x08000589 (sym.led_drv_write)
|       :   0x08000590      488b02         mov rax, qword [rdx]
|       :   0x08000593      2501111111     and eax, 0x11111101
|       :   0x08000598      488902         mov qword [rdx], rax
(reloc.gpbcon_158)
|       :   0x0800059b      488b15000000.  mov rdx, qword [0x080005a2] ; [0x80005a2:8]=0xeb01c88348028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x0800059b (sym.led_drv_write)
|       :   0x080005a2      488b02         mov rax, qword [rdx]
|       :   0x080005a5      4883c801       or rax, 1
|       `=< 0x080005a9      ebc5           jmp 0x8000570
(reloc.gpbcon_174)
| --------> 0x080005ab      488b15000000.  mov rdx, qword [0x080005b2] ; [0x80005b2:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x080005ab (sym.led_drv_write)
|           0x080005b2      488b02         mov rax, qword [rdx]
|           0x080005b5      2501111111     and eax, 0x11111101
|           0x080005ba      488902         mov qword [rdx], rax
(reloc.gpbcon_192)
|           0x080005bd      488b15000000.  mov rdx, qword [0x080005c4] ; [0x80005c4:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x080005bd (sym.led_drv_write)
|           0x080005c4      488b02         mov rax, qword [rdx]
|           0x080005c7      4883c801       or rax, 1
|              ; JMP XREF from 0x08000604 (sym.led_drv_write)
|       .-> 0x080005cb      488902         mov qword [rdx], rax
(reloc.gpbcon_209)
|       :   0x080005ce      488b15000000.  mov rdx, qword [0x080005d5] ; [0x80005d5:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x080005ce (sym.led_drv_write)
|       :   0x080005d5      488b02         mov rax, qword [rdx]
|       :   0x080005d8      4883c810       or rax, 0x10
|       :   0x080005dc      488902         mov qword [rdx], rax
| ========< 0x080005df      e950fdffff     jmp 0x8000334
(reloc.gpbcon_231)
| --------> 0x080005e4      488b15000000.  mov rdx, qword [0x080005eb] ; [0x80005eb:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x080005e4 (sym.led_drv_write)
|       :   0x080005eb      488b02         mov rax, qword [rdx]
|       :   0x080005ee      2501111111     and eax, 0x11111101
|       :   0x080005f3      488902         mov qword [rdx], rax
(reloc.gpbcon_249)
|       :   0x080005f6      488b15000000.  mov rdx, qword [0x080005fd] ; [0x80005fd:8]=0xebfee08348028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x080005f6 (sym.led_drv_write)
|       :   0x080005fd      488b02         mov rax, qword [rdx]
|       :   0x08000600      4883e0fe       and rax, 0xfffffffffffffffe
|       `=< 0x08000604      ebc5           jmp 0x80005cb
(reloc.gpbcon_9)
| --------> 0x08000606      488b15000000.  mov rdx, qword [0x0800060d] ; [0x800060d:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x08000606 (sym.led_drv_write)
|           0x0800060d      488b02         mov rax, qword [rdx]
|           0x08000610      2501111111     and eax, 0x11111101
|           0x08000615      488902         mov qword [rdx], rax
(reloc.gpbcon_27)
|           0x08000618      488b15000000.  mov rdx, qword [0x0800061f] ; [0x800061f:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x08000618 (sym.led_drv_write)
|           0x0800061f      488b02         mov rax, qword [rdx]
|           0x08000622      4883e0fe       and rax, 0xfffffffffffffffe
|              ; JMP XREF from 0x08000698 (sym.led_drv_write)
|       .-> 0x08000626      488902         mov qword [rdx], rax
(reloc.gpbcon_44)
|       :   0x08000629      488b15000000.  mov rdx, qword [0x08000630] ; [0x8000630:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x08000629 (sym.led_drv_write)
|       :   0x08000630      488b02         mov rax, qword [rdx]
|       :   0x08000633      4883c810       or rax, 0x10
|       :   0x08000637      488902         mov qword [rdx], rax
| ========< 0x0800063a      e9f5fcffff     jmp 0x8000334
(reloc.gpbcon_66)
| --------> 0x0800063f      488b15000000.  mov rdx, qword [0x08000646] ; [0x8000646:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x0800063f (sym.led_drv_write)
|       :   0x08000646      488b02         mov rax, qword [rdx]
|       :   0x08000649      2501111111     and eax, 0x11111101
|       :   0x0800064e      488902         mov qword [rdx], rax
(reloc.gpbcon_84)
|       :   0x08000651      488b15000000.  mov rdx, qword [0x08000658] ; [0x8000658:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x08000651 (sym.led_drv_write)
|       :   0x08000658      488b02         mov rax, qword [rdx]
|       :   0x0800065b      4883c801       or rax, 1
|       :      ; JMP XREF from 0x0800073a (sym.led_drv_write)
|      .--> 0x0800065f      488902         mov qword [rdx], rax
(reloc.gpbcon_101)
|      ::   0x08000662      488b15000000.  mov rdx, qword [0x08000669] ; [0x8000669:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x08000662 (sym.led_drv_write)
|      ::   0x08000669      488b02         mov rax, qword [rdx]
|      ::   0x0800066c      4883c810       or rax, 0x10
|      ::   0x08000670      488902         mov qword [rdx], rax
| ========< 0x08000673      e9bcfcffff     jmp 0x8000334
(reloc.gpbcon_123)
| --------> 0x08000678      488b15000000.  mov rdx, qword [0x0800067f] ; [0x800067f:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x08000678 (sym.led_drv_write)
|      ::   0x0800067f      488b02         mov rax, qword [rdx]
|      ::   0x08000682      2501111111     and eax, 0x11111101
|      ::   0x08000687      488902         mov qword [rdx], rax
|      ::   0x0800068a      488b15000000.  mov rdx, qword [0x08000691] ; [0x8000691:8]=0xeb01c88348028b48  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x0800068a (sym.led_drv_write)
|      ::   0x08000691      488b02         mov rax, qword [rdx]
|      ::   0x08000694      4883c801       or rax, 1
|      :`=< 0x08000698      eb8c           jmp 0x8000626
(reloc.gpbcon_157)
| --------> 0x0800069a      488b15000000.  mov rdx, qword [0x080006a1] ; [0x80006a1:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x0800069a (sym.led_drv_write)
|      :    0x080006a1      488b02         mov rax, qword [rdx]
|      :    0x080006a4      2501111111     and eax, 0x11111101
|      :    0x080006a9      488902         mov qword [rdx], rax
|      :    0x080006ac      488b15000000.  mov rdx, qword [0x080006b3] ; [0x80006b3:8]=0xe9fee08348028b48  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x080006ac (sym.led_drv_write)
|      :    0x080006b3      488b02         mov rax, qword [rdx]
|      :    0x080006b6      4883e0fe       and rax, 0xfffffffffffffffe
| ========< 0x080006ba      e92afcffff     jmp 0x80002e9
(reloc.gpbcon_194)
| --------> 0x080006bf      488b15000000.  mov rdx, qword [0x080006c6] ; [0x80006c6:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x080006bf (sym.led_drv_write)
|      :    0x080006c6      488b02         mov rax, qword [rdx]
|      :    0x080006c9      2501111111     and eax, 0x11111101
|      :    0x080006ce      488902         mov qword [rdx], rax
(reloc.gpbcon_212)
|      :    0x080006d1      488b15000000.  mov rdx, qword [0x080006d8] ; [0x80006d8:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x080006d1 (sym.led_drv_write)
|      :    0x080006d8      488b02         mov rax, qword [rdx]
|      :    0x080006db      4883c801       or rax, 1
|      :       ; JMP XREF from 0x08000718 (sym.led_drv_write)
|      :.-> 0x080006df      488902         mov qword [rdx], rax
|      ::   0x080006e2      488b15000000.  mov rdx, qword [0x080006e9] ; [0x80006e9:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x080006e2 (sym.led_drv_write)
|      ::   0x080006e9      488b02         mov rax, qword [rdx]
|      ::   0x080006ec      4883c810       or rax, 0x10
|      ::   0x080006f0      488902         mov qword [rdx], rax
| ========< 0x080006f3      e93cfcffff     jmp 0x8000334
| --------> 0x080006f8      488b15000000.  mov rdx, qword [0x080006ff] ; [0x80006ff:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x080006f8 (sym.led_drv_write)
|      ::   0x080006ff      488b02         mov rax, qword [rdx]
|      ::   0x08000702      2501111111     and eax, 0x11111101
|      ::   0x08000707      488902         mov qword [rdx], rax
(reloc.gpbcon_13)
|      ::   0x0800070a      488b15000000.  mov rdx, qword [0x08000711] ; [0x8000711:8]=0xebfee08348028b48  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x0800070a (sym.led_drv_write)
|      ::   0x08000711      488b02         mov rax, qword [rdx]
|      ::   0x08000714      4883e0fe       and rax, 0xfffffffffffffffe
|      :`=< 0x08000718      ebc5           jmp 0x80006df
| --------> 0x0800071a      488b15000000.  mov rdx, qword [0x08000721] ; [0x8000721:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x0800071a (sym.led_drv_write)
|      :    0x08000721      488b02         mov rax, qword [rdx]
|      :    0x08000724      2501111111     and eax, 0x11111101
|      :    0x08000729      488902         mov qword [rdx], rax
(reloc.gpbcon_47)
|      :    0x0800072c      488b15000000.  mov rdx, qword [0x08000733] ; [0x8000733:8]=0xe9fee08348028b48  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x0800072c (sym.led_drv_write)
|      :    0x08000733      488b02         mov rax, qword [rdx]
|      :    0x08000736      4883e0fe       and rax, 0xfffffffffffffffe
\      `==< 0x0800073a      e920ffffff     jmp 0x800065f
            0x0800073f      90             nop
\           ;-- init_module:
/ (fcn) sym.led_drv_init 489
|   sym.led_drv_init ();
|           ; var int local_8h @ rsp+0x8
|           0x08000740      31c0           xor eax, eax
|           0x08000742      66666666662e.  nop word cs:[rax + rax]
|       .-> 0x08000750      48c780000000.  mov qword [rax], 0            ; RELOC 32
(reloc.gpbcon_94)
|       :   0x0800075b      48c780000000.  mov qword [rax], 0            ; RELOC 32 gpbcon
|       :   0x08000766      488d4008       lea rax, qword [rax + 8]    ; 8
|       :   0x0800076a      4883f860       cmp rax, 0x60               ; '`' ; 96
|       `=< 0x0800076e      75e0           jne 0x8000750
|           0x08000770      55             push rbp
|           0x08000771      49c7c0000000.  mov r8, 0                     ; RELOC 32
|           0x08000778      48c7c1000000.  mov rcx, 0                    ; RELOC 32
|           0x0800077f      4889e5         mov rbp, rsp
|           0x08000782      ba00010000     mov edx, 0x100              ; 256
|           0x08000787      53             push rbx
|           0x08000788      31f6           xor esi, esi
|           0x0800078a      31ff           xor edi, edi
|           0x0800078c      488d6424f8     lea rsp, qword [rsp - 8]
|           0x08000791      31db           xor ebx, ebx
(reloc.__register_chrdev_148)
|           0x08000793      e800000000     call 0x8000798                ; RELOC 32 __register_chrdev
(reloc.__this_module_155)
|              ; CALL XREF from 0x08000793 (sym.led_drv_init)
|           0x08000798      48c7c7000000.  mov rdi, 0                    ; RELOC 32 __this_module
|           0x0800079f      48c7c2000000.  mov rdx, 0                    ; RELOC 32
|           0x080007a6      48c7c6000000.  mov rsi, 0                    ; RELOC 32
(reloc.major_175)
|           0x080007ad      890500000000   mov dword [0x080007b3], eax ; [0x80007b3:4]=232  ; RELOC 32 major
(reloc.__class_create_180)
|              ; DATA XREF from 0x080007ad (sym.led_drv_init)
|           0x080007b3      e800000000     call 0x80007b8                ; RELOC 32 __class_create
|              ; CALL XREF from 0x080007b3 (sym.led_drv_init)
|           0x080007b8      488905000000.  mov qword [0x080007bf], rax ; [0x80007bf:8]=0x5c7  ; RELOC 32
(reloc.minor_193)
|              ; DATA XREF from 0x080007b8 (sym.led_drv_init)
|           0x080007bf      c70500000000.  mov dword [0x080007c9], 0   ; [0x80007c9:4]=0xeb388d48  ; RELOC 32 minor
|              ; DATA XREF from 0x080007bf (sym.led_drv_init)
|           0x080007c9      488d38         lea rdi, qword [rax]
|       ,=< 0x080007cc      eb09           jmp 0x80007d7
        |   0x080007ce      6690           nop
|      .--> 0x080007d0      488b3d000000.  mov rdi, qword [0x080007d7] ; [0x80007d7:8]=0x8d4400000000158b  ; RELOC 32
(reloc.major_217)
|      :|      ; JMP XREF from 0x080007cc (sym.led_drv_init)
|      :|      ; DATA XREF from 0x080007d0 (sym.led_drv_init)
|      :`-> 0x080007d7      8b1500000000   mov edx, dword [0x080007dd] ; [0x80007dd:4]=0x14b8d44  ; RELOC 32 major
|      :       ; DATA XREF from 0x080007d7 (sym.led_drv_init)
|      :    0x080007dd      448d4b01       lea r9d, dword [rbx + 1]    ; 1
|      :    0x080007e1      c1e214         shl edx, 0x14
|      :    0x080007e4      31c9           xor ecx, ecx
|      :    0x080007e6      09da           or edx, ebx
|      :    0x080007e8      31f6           xor esi, esi
|      :    0x080007ea      31c0           xor eax, eax
|      :    0x080007ec      49c7c0000000.  mov r8, 0                     ; RELOC 32
(reloc.device_create_244)
|      :    0x080007f3      e800000000     call 0x80007f8                ; RELOC 32 device_create
|      :       ; CALL XREF from 0x080007f3 (sym.led_drv_init)
|      :    0x080007f8      4863db         movsxd rbx, ebx
|      :    0x080007fb      488904dd0000.  mov qword [rbx*8], rax        ; RELOC 32
(reloc.minor_5)
|      :    0x08000803      8b0500000000   mov eax, dword [0x08000809] ; [0x8000809:4]=0xc383c389  ; RELOC 32 minor
|      :       ; DATA XREF from 0x08000803 (sym.led_drv_init)
|      :    0x08000809      89c3           mov ebx, eax
|      :    0x0800080b      83c301         add ebx, 1
|      :    0x0800080e      83fb0b         cmp ebx, 0xb                ; 11
(reloc.minor_19)
|      :    0x08000811      891d00000000   mov dword [0x08000817], ebx ; [0x8000817:4]=0x10beb776  ; RELOC 32 minor
|      |       ; DATA XREF from 0x08000811 (sym.led_drv_init)
|      `==< 0x08000817      76b7           jbe 0x80007d0
|           0x08000819      be10000000     mov esi, 0x10               ; 16
|           0x0800081e      bfb8d1d0fe     mov edi, 0xfed0d1b8
(reloc.ioremap_nocache_36)
|           0x08000823      e800000000     call 0x8000828                ; RELOC 32 ioremap_nocache
|              ; CALL XREF from 0x08000823 (sym.led_drv_init)
|           0x08000828      be10000000     mov esi, 0x10               ; 16
|           0x0800082d      bf28d0d0fe     mov edi, 0xfed0d028
(reloc.gpbcon_53)
|           0x08000832      488905000000.  mov qword [0x08000839], rax ; [0x8000839:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_58)
|              ; DATA XREF from 0x08000832 (sym.led_drv_init)
|           0x08000839      e800000000     call 0x800083e                ; RELOC 32 ioremap_nocache
|              ; CALL XREF from 0x08000839 (sym.led_drv_init)
|           0x0800083e      be10000000     mov esi, 0x10               ; 16
|           0x08000843      bfb8d0d0fe     mov edi, 0xfed0d0b8
(reloc.gpbcon_75)
|           0x08000848      488905000000.  mov qword [0x0800084f], rax ; [0x800084f:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_80)
|              ; DATA XREF from 0x08000848 (sym.led_drv_init)
|           0x0800084f      e800000000     call 0x8000854                ; RELOC 32 ioremap_nocache
|              ; CALL XREF from 0x0800084f (sym.led_drv_init)
|           0x08000854      be10000000     mov esi, 0x10               ; 16
|           0x08000859      bfd8d0d0fe     mov edi, 0xfed0d0d8
(reloc.gpbcon_97)
|           0x0800085e      488905000000.  mov qword [0x08000865], rax ; [0x8000865:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_102)
|              ; DATA XREF from 0x0800085e (sym.led_drv_init)
|           0x08000865      e800000000     call 0x800086a                ; RELOC 32 ioremap_nocache
|              ; CALL XREF from 0x08000865 (sym.led_drv_init)
|           0x0800086a      be10000000     mov esi, 0x10               ; 16
|           0x0800086f      bf88d0d0fe     mov edi, 0xfed0d088
(reloc.gpbcon_119)
|           0x08000874      488905000000.  mov qword [0x0800087b], rax ; [0x800087b:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_124)
|              ; DATA XREF from 0x08000874 (sym.led_drv_init)
|           0x0800087b      e800000000     call 0x8000880                ; RELOC 32 ioremap_nocache
|              ; CALL XREF from 0x0800087b (sym.led_drv_init)
|           0x08000880      be10000000     mov esi, 0x10               ; 16
|           0x08000885      bfa8d0d0fe     mov edi, 0xfed0d0a8
|           0x0800088a      488905000000.  mov qword [0x08000891], rax ; [0x8000891:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_146)
|              ; DATA XREF from 0x0800088a (sym.led_drv_init)
|           0x08000891      e800000000     call 0x8000896                ; RELOC 32 ioremap_nocache
|              ; CALL XREF from 0x08000891 (sym.led_drv_init)
|           0x08000896      be10000000     mov esi, 0x10               ; 16
|           0x0800089b      bf48d0d0fe     mov edi, 0xfed0d048
(reloc.gpbcon_163)
|           0x080008a0      488905000000.  mov qword [0x080008a7], rax ; [0x80008a7:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_168)
|              ; DATA XREF from 0x080008a0 (sym.led_drv_init)
|           0x080008a7      e800000000     call 0x80008ac                ; RELOC 32 ioremap_nocache
|              ; CALL XREF from 0x080008a7 (sym.led_drv_init)
|           0x080008ac      be10000000     mov esi, 0x10               ; 16
|           0x080008b1      bf68d0d0fe     mov edi, 0xfed0d068
(reloc.gpbcon_185)
|           0x080008b6      488905000000.  mov qword [0x080008bd], rax ; [0x80008bd:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_190)
|              ; DATA XREF from 0x080008b6 (sym.led_drv_init)
|           0x080008bd      e800000000     call 0x80008c2                ; RELOC 32 ioremap_nocache
|              ; CALL XREF from 0x080008bd (sym.led_drv_init)
|           0x080008c2      be10000000     mov esi, 0x10               ; 16
|           0x080008c7      bf18d0d0fe     mov edi, 0xfed0d018
(reloc.gpbcon_207)
|           0x080008cc      488905000000.  mov qword [0x080008d3], rax ; [0x80008d3:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_212)
|              ; DATA XREF from 0x080008cc (sym.led_drv_init)
|           0x080008d3      e800000000     call 0x80008d8                ; RELOC 32 ioremap_nocache
|              ; CALL XREF from 0x080008d3 (sym.led_drv_init)
|           0x080008d8      be10000000     mov esi, 0x10               ; 16
|           0x080008dd      bf38d0d0fe     mov edi, 0xfed0d038
(reloc.gpbcon_229)
|           0x080008e2      488905000000.  mov qword [0x080008e9], rax ; [0x80008e9:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_234)
|              ; DATA XREF from 0x080008e2 (sym.led_drv_init)
|           0x080008e9      e800000000     call 0x80008ee                ; RELOC 32 ioremap_nocache
|              ; CALL XREF from 0x080008e9 (sym.led_drv_init)
|           0x080008ee      be10000000     mov esi, 0x10               ; 16
|           0x080008f3      bf58d0d0fe     mov edi, 0xfed0d058
(reloc.gpbcon_251)
|           0x080008f8      488905000000.  mov qword [0x080008ff], rax ; [0x80008ff:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_0)
|              ; DATA XREF from 0x080008f8 (sym.led_drv_init)
|           0x080008ff      e800000000     call 0x8000904                ; RELOC 32 ioremap_nocache
|              ; CALL XREF from 0x080008ff (sym.led_drv_init)
|           0x08000904      be10000000     mov esi, 0x10               ; 16
|           0x08000909      bf98d0d0fe     mov edi, 0xfed0d098
(reloc.gpbcon_17)
|           0x0800090e      488905000000.  mov qword [0x08000915], rax ; [0x8000915:8]=0x5894800000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_22)
|              ; DATA XREF from 0x0800090e (sym.led_drv_init)
|           0x08000915      e800000000     call 0x800091a                ; RELOC 32 ioremap_nocache
(reloc.gpbcon_29)
|              ; CALL XREF from 0x08000915 (sym.led_drv_init)
|           0x0800091a      488905000000.  mov qword [0x08000921], rax ; [0x8000921:8]=0x5bc0310824648d48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x0800091a (sym.led_drv_init)
|           0x08000921      488d642408     lea rsp, qword [local_8h]   ; 8
|           0x08000926      31c0           xor eax, eax
|           0x08000928      5b             pop rbx
|           0x08000929      5d             pop rbp
\           0x0800092a      c3             ret
            0x0800092b      0f1f440000     nop dword [rax + rax]
\           ;-- cleanup_module:
/ (fcn) sym.led_drv_exit 141
|   sym.led_drv_exit ();
|           ; var int local_8h @ rsp+0x8
|              ; CALL XREF from 0x0800094e (sym.led_drv_exit)
|              ; CALL XREF from 0x0800096a (sym.led_drv_exit)
|              ; CALL XREF from 0x08000991 (sym.led_drv_exit)
|              ; CALL XREF from 0x080009a7 (sym.led_drv_exit)
|           0x08000930      55             push rbp
|           0x08000931      48c7c1000000.  mov rcx, 0                    ; RELOC 32
|           0x08000938      ba00010000     mov edx, 0x100              ; 256
|           0x0800093d      4889e5         mov rbp, rsp
|           0x08000940      31f6           xor esi, esi
|           0x08000942      53             push rbx
|           0x08000943      488d6424f8     lea rsp, qword [rsp - 8]
(reloc.major_74)
|           0x08000948      8b3d00000000   mov edi, dword [0x0800094e] ; [0x800094e:4]=232  ; RELOC 32 major
(reloc.__unregister_chrdev_79)
|              ; DATA XREF from 0x08000948 (sym.led_drv_exit)
|           0x0800094e      e800000000     call 0x8000953                ; RELOC 32 __unregister_chrdev
(reloc.minor_85)
|              ; CALL XREF from 0x0800094e (sym.led_drv_exit)
|           0x08000953      c70500000000.  mov dword [0x0800095d], 0   ; [0x800095d:4]=0x4890c031  ; RELOC 32 minor
|              ; DATA XREF from 0x08000953 (sym.led_drv_exit)
|           0x0800095d      31c0           xor eax, eax
|           0x0800095f      90             nop
|       .-> 0x08000960      4898           cdqe
|       :   0x08000962      488b3cc50000.  mov rdi, qword [rax*8]        ; RELOC 32
(reloc.device_unregister_107)
|       :   0x0800096a      e800000000     call 0x800096f                ; RELOC 32 device_unregister
(reloc.minor_113)
|       :      ; CALL XREF from 0x0800096a (sym.led_drv_exit)
|       :   0x0800096f      8b0500000000   mov eax, dword [0x08000975] ; [0x8000975:4]=0x8301c083  ; RELOC 32 minor
|       :      ; DATA XREF from 0x0800096f (sym.led_drv_exit)
|       :   0x08000975      83c001         add eax, 1
|       :   0x08000978      83f80b         cmp eax, 0xb                ; 11
(reloc.minor_125)
|       :   0x0800097b      890500000000   mov dword [0x08000981], eax ; [0x8000981:4]=0x8b48dd76  ; RELOC 32 minor
|       |      ; DATA XREF from 0x0800097b (sym.led_drv_exit)
|       `=< 0x08000981      76dd           jbe 0x8000960
|           0x08000983      488b3d000000.  mov rdi, qword [0x0800098a] ; [0x800098a:8]=0xe800000000c3c748  ; RELOC 32
(reloc.gpbcon_141)
|              ; DATA XREF from 0x08000983 (sym.led_drv_exit)
|           0x0800098a      48c7c3000000.  mov rbx, 0                    ; RELOC 32 gpbcon
(reloc.class_destroy_146)
|           0x08000991      e800000000     call 0x8000996                ; RELOC 32 class_destroy
|              ; CALL XREF from 0x08000991 (sym.led_drv_exit)
|           0x08000996      662e0f1f8400.  nop word cs:[rax + rax]
|       .-> 0x080009a0      488b3b         mov rdi, qword [rbx]
|       :   0x080009a3      488d5b08       lea rbx, qword [rbx + 8]    ; 8
(reloc.iounmap_168)
|       :   0x080009a7      e800000000     call 0x80009ac                ; RELOC 32 iounmap
(reloc.gpbcon_175)
|       :      ; CALL XREF from 0x080009a7 (sym.led_drv_exit)
|       :   0x080009ac      4881fb000000.  cmp rbx, 0                    ; RELOC 32 gpbcon
|       `=< 0x080009b3      75eb           jne 0x80009a0
|           0x080009b5      488d642408     lea rsp, qword [local_8h]   ; 8
|           0x080009ba      5b             pop rbx
|           0x080009bb      5d             pop rbp
\           0x080009bc      c3             ret
            ;-- str.led1on:
            ;-- section_end..text:
            ;-- section..rodata.str1.1:
            0x080009bd     .string "led1on" ; len=7                    ; [04] m-r-- section size 214 named .rodata.str1.1
            ;-- str.led1off:
            0x080009c4     .string "led1off" ; len=8
            ;-- str.led2on:
            0x080009cc     .string "led2on" ; len=7
            ;-- str.led2off:
            0x080009d3     .string "led2off" ; len=8
            ;-- str.led3on:
            0x080009db     .string "led3on" ; len=7
            ;-- str.led3off:
            0x080009e2     .string "led3off" ; len=8
            ;-- str.led4on:
            0x080009ea     .string "led4on" ; len=7
            ;-- str.led4off:
            0x080009f1     .string "led4off" ; len=8
            ;-- str.led5on:
            0x080009f9     .string "led5on" ; len=7
            ;-- str.led5off:
            0x08000a00     .string "led5off" ; len=8
            ;-- str.led6on:
            0x08000a08     .string "led6on" ; len=7
            ;-- str.led6off:
            0x08000a0f     .string "led6off" ; len=8
            ;-- str.led7on:
            0x08000a17     .string "led7on" ; len=7
            ;-- str.led7off:
            0x08000a1e     .string "led7off" ; len=8
            ;-- str.led8on:
            0x08000a26     .string "led8on" ; len=7
            ;-- str.led8off:
            0x08000a2d     .string "led8off" ; len=8
            ;-- str.led9on:
            0x08000a35     .string "led9on" ; len=7
            ;-- str.led9off:
            0x08000a3c     .string "led9off" ; len=8
            ;-- str.led10on:
            0x08000a44     .string "led10on" ; len=8
            ;-- str.led10off:
            0x08000a4c     .string "led10off" ; len=9
            ;-- str.led11on:
            0x08000a55     .string "led11on" ; len=8
            ;-- str.led11off:
            0x08000a5d     .string "led11off" ; len=9
            ;-- str.led12on:
            0x08000a66     .string "led12on" ; len=8
            ;-- str.led12off:
            0x08000a6e     .string "led12off" ; len=9
            ;-- str.led_drv:
            0x08000a77     .string "led_drv" ; len=8
            ;-- str.leddrv_drv:
            0x08000a7f     .string "leddrv_drv" ; len=11
            ;-- str.leddrv_d:
            0x08000a8a     .string "leddrv%d" ; len=9
            ;-- section_end..rodata.str1.1:
            ;-- section..modinfo:
            ;-- __UNIQUE_ID_license0:
            0x08000a93      6c             insb byte [rdi], dx         ; [05] m-r-- section size 52 named .modinfo
            0x08000a94      6963656e7365.  imul esp, dword [rbx + 0x65], 0x3d65736e
        |   0x08000a9b      4750           push r8
        |   0x08000a9d  ~   4c00646570     add byte [rbp + 0x70], r12b
        |   ;-- __module_depends:
       ,==< 0x08000a9f      64657065       jo 0x8000b08
       ||   0x08000aa3      6e             outsb dx, byte [rsi]
      ,===< 0x08000aa4      64733d         jae 0x8000ae4
      |||   0x08000aa7  ~   007665         add byte [rsi + 0x65], dh
      |||   ;-- __UNIQUE_ID_vermagic0:
      |||   0x08000aa8      7665           jbe 0x8000b0f
     ,====< 0x08000aaa      726d           jb 0x8000b19
     ||||   0x08000aac      61             invalid
     ||||   0x08000aad      6769633d342e.  imul esp, dword [ebx + 0x3d], 0x2e302e34
     ||||   0x08000ab5      3020           xor byte [rax], ah
     ||||   0x08000ab7      53             push rbx
     ||||   0x08000ab8      4d50           push r8
     ||||   0x08000aba      206d6f         and byte [rbp + 0x6f], ch
     ||||   0x08000abd      645f           pop rdi
    ,=====< 0x08000abf      756e           jne 0x8000b2f
    |||||   0x08000ac1      6c             insb byte [rdi], dx
    |||||   0x08000ac2      6f             outsd dx, dword [rsi]
    |||||   0x08000ac3      61             invalid
    |||||   0x08000ac4      642000         and byte fs:[rax], al
    |||||   ;-- section_end..modinfo:
    |||||   0x08000ac7      ff             invalid
    |||||   0x08000ac8      ff             invalid
    |||||   0x08000ac9      ff             invalid
    |||||   0x08000aca      ff             invalid
    |||||   0x08000acb      ff             invalid
    |||||   0x08000acc      ff             invalid
    |||||   0x08000acd      ff             invalid
    |||||   0x08000ace      ff             invalid
    |||||   0x08000acf      ff             invalid
    |||||   0x08000ad0      ff             invalid
    |||||   0x08000ad1      ff             invalid
    |||||   0x08000ad2      ff             invalid
    |||||   0x08000ad3      ff             invalid
    |||||   0x08000ad4      ff             invalid
[0x08000070]>
[0x08000070]> ir
[Relocations]
vaddr=0x080000a1 paddr=0x00000031 type=SET_32 _copy_from_user - 0x080000a5
vaddr=0x080000ad paddr=0x0000003d type=SET_32
vaddr=0x080000c4 paddr=0x00000054 type=SET_32 0x00000007
vaddr=0x080000db paddr=0x0000006b type=SET_32 0x0000000f
vaddr=0x080000f2 paddr=0x00000082 type=SET_32 0x00000016
vaddr=0x08000109 paddr=0x00000099 type=SET_32 0x0000001e
vaddr=0x08000120 paddr=0x000000b0 type=SET_32 0x00000025
vaddr=0x08000137 paddr=0x000000c7 type=SET_32 0x0000002d
vaddr=0x0800014e paddr=0x000000de type=SET_32 0x00000034
vaddr=0x08000165 paddr=0x000000f5 type=SET_32 0x0000003c
vaddr=0x0800017c paddr=0x0000010c type=SET_32 0x00000043
vaddr=0x08000193 paddr=0x00000123 type=SET_32 0x0000004b
vaddr=0x080001aa paddr=0x0000013a type=SET_32 0x00000052
vaddr=0x080001c1 paddr=0x00000151 type=SET_32 0x0000005a
vaddr=0x080001d8 paddr=0x00000168 type=SET_32 0x00000061
vaddr=0x080001ef paddr=0x0000017f type=SET_32 0x00000069
vaddr=0x08000201 paddr=0x00000191 type=SET_32 0x00000070
vaddr=0x08000209 paddr=0x00000199 type=SET_32 strcmp - 0x0800020d
vaddr=0x08000218 paddr=0x000001a8 type=SET_32 0x00000078
vaddr=0x08000220 paddr=0x000001b0 type=SET_32 strcmp - 0x08000224
vaddr=0x0800022f paddr=0x000001bf type=SET_32 0x0000007f
vaddr=0x08000237 paddr=0x000001c7 type=SET_32 strcmp - 0x0800023b
vaddr=0x08000246 paddr=0x000001d6 type=SET_32 0x00000087
vaddr=0x0800024e paddr=0x000001de type=SET_32 strcmp - 0x08000252
vaddr=0x0800025d paddr=0x000001ed type=SET_32 0x0000008f
vaddr=0x08000265 paddr=0x000001f5 type=SET_32 strcmp - 0x08000269
vaddr=0x08000274 paddr=0x00000204 type=SET_32 0x00000098
vaddr=0x0800027c paddr=0x0000020c type=SET_32 strcmp - 0x08000280
vaddr=0x0800028b paddr=0x0000021b type=SET_32 0x000000a0
vaddr=0x08000293 paddr=0x00000223 type=SET_32 strcmp - 0x08000297
vaddr=0x080002a2 paddr=0x00000232 type=SET_32 0x000000a9
vaddr=0x080002aa paddr=0x0000023a type=SET_32 strcmp - 0x080002ae
vaddr=0x080002b9 paddr=0x00000249 type=SET_32 0x000000b1
vaddr=0x080002c1 paddr=0x00000251 type=SET_32 strcmp - 0x080002c5
vaddr=0x080002cc paddr=0x0000025c type=SET_32 gpbcon - 0x08000278
vaddr=0x080002de paddr=0x0000026e type=SET_32 gpbcon - 0x0800028a
vaddr=0x080002ef paddr=0x0000027f type=SET_32 gpbcon - 0x0800029b
vaddr=0x08000303 paddr=0x00000293 type=SET_32 gpbcon - 0x08000307
vaddr=0x08000315 paddr=0x000002a5 type=SET_32 gpbcon - 0x08000319
vaddr=0x08000326 paddr=0x000002b6 type=SET_32 gpbcon - 0x0800032a
vaddr=0x08000343 paddr=0x000002d3 type=SET_32 gpbcon - 0x08000347
vaddr=0x08000355 paddr=0x000002e5 type=SET_32 gpbcon - 0x08000359
vaddr=0x0800036b paddr=0x000002fb type=SET_32 gpbcon - 0x08000367
vaddr=0x0800037d paddr=0x0000030d type=SET_32 gpbcon - 0x08000379
vaddr=0x0800038e paddr=0x0000031e type=SET_32 gpbcon - 0x0800038a
vaddr=0x080003ab paddr=0x0000033b type=SET_32 gpbcon - 0x080003a7
vaddr=0x080003bd paddr=0x0000034d type=SET_32 gpbcon - 0x080003b9
vaddr=0x080003d3 paddr=0x00000363 type=SET_32 gpbcon - 0x080003c7
vaddr=0x080003e5 paddr=0x00000375 type=SET_32 gpbcon - 0x080003d9
vaddr=0x080003f6 paddr=0x00000386 type=SET_32 gpbcon - 0x080003ea
vaddr=0x08000413 paddr=0x000003a3 type=SET_32 gpbcon - 0x080003ff
vaddr=0x08000425 paddr=0x000003b5 type=SET_32 gpbcon - 0x08000411
vaddr=0x08000436 paddr=0x000003c6 type=SET_32 gpbcon - 0x08000422
vaddr=0x08000453 paddr=0x000003e3 type=SET_32 gpbcon - 0x08000447
vaddr=0x08000465 paddr=0x000003f5 type=SET_32 gpbcon - 0x08000459
vaddr=0x0800047b paddr=0x0000040b type=SET_32 gpbcon - 0x08000467
vaddr=0x0800048d paddr=0x0000041d type=SET_32 gpbcon - 0x08000479
vaddr=0x0800049d paddr=0x0000042d type=SET_32 gpbcon - 0x08000481
vaddr=0x080004af paddr=0x0000043f type=SET_32 gpbcon - 0x08000493
vaddr=0x080004c0 paddr=0x00000450 type=SET_32 gpbcon - 0x080004a4
vaddr=0x080004d6 paddr=0x00000466 type=SET_32 gpbcon - 0x080004ba
vaddr=0x080004e8 paddr=0x00000478 type=SET_32 gpbcon - 0x080004cc
vaddr=0x080004f8 paddr=0x00000488 type=SET_32 gpbcon - 0x080004d4
vaddr=0x0800050a paddr=0x0000049a type=SET_32 gpbcon - 0x080004e6
vaddr=0x0800051b paddr=0x000004ab type=SET_32 gpbcon - 0x080004f7
vaddr=0x08000531 paddr=0x000004c1 type=SET_32 gpbcon - 0x0800050d
vaddr=0x08000543 paddr=0x000004d3 type=SET_32 gpbcon - 0x0800051f
vaddr=0x08000553 paddr=0x000004e3 type=SET_32 gpbcon - 0x08000527
vaddr=0x08000565 paddr=0x000004f5 type=SET_32 gpbcon - 0x08000539
vaddr=0x08000576 paddr=0x00000506 type=SET_32 gpbcon - 0x0800054a
vaddr=0x0800058c paddr=0x0000051c type=SET_32 gpbcon - 0x08000560
vaddr=0x0800059e paddr=0x0000052e type=SET_32 gpbcon - 0x08000572
vaddr=0x080005ae paddr=0x0000053e type=SET_32 gpbcon - 0x0800057a
vaddr=0x080005c0 paddr=0x00000550 type=SET_32 gpbcon - 0x0800058c
vaddr=0x080005d1 paddr=0x00000561 type=SET_32 gpbcon - 0x0800059d
vaddr=0x080005e7 paddr=0x00000577 type=SET_32 gpbcon - 0x080005b3
vaddr=0x080005f9 paddr=0x00000589 type=SET_32 gpbcon - 0x080005c5
vaddr=0x08000609 paddr=0x00000599 type=SET_32 gpbcon - 0x080005cd
vaddr=0x0800061b paddr=0x000005ab type=SET_32 gpbcon - 0x080005df
vaddr=0x0800062c paddr=0x000005bc type=SET_32 gpbcon - 0x080005f0
vaddr=0x08000642 paddr=0x000005d2 type=SET_32 gpbcon - 0x080005fe
vaddr=0x08000654 paddr=0x000005e4 type=SET_32 gpbcon - 0x08000610
vaddr=0x08000665 paddr=0x000005f5 type=SET_32 gpbcon - 0x08000621
vaddr=0x0800067b paddr=0x0000060b type=SET_32 gpbcon - 0x0800063f
vaddr=0x0800068d paddr=0x0000061d type=SET_32 gpbcon - 0x08000651
vaddr=0x0800069d paddr=0x0000062d type=SET_32 gpbcon - 0x08000649
vaddr=0x080006af paddr=0x0000063f type=SET_32 gpbcon - 0x0800065b
vaddr=0x080006c2 paddr=0x00000652 type=SET_32 gpbcon - 0x08000676
vaddr=0x080006d4 paddr=0x00000664 type=SET_32 gpbcon - 0x08000688
vaddr=0x080006e5 paddr=0x00000675 type=SET_32 gpbcon - 0x08000699
vaddr=0x080006fb paddr=0x0000068b type=SET_32 gpbcon - 0x080006af
vaddr=0x0800070d paddr=0x0000069d type=SET_32 gpbcon - 0x080006c1
vaddr=0x0800071d paddr=0x000006ad type=SET_32 gpbcon - 0x080006d9
vaddr=0x0800072f paddr=0x000006bf type=SET_32 gpbcon - 0x080006eb
vaddr=0x08000753 paddr=0x000006e3 type=SET_32 0x00000080
vaddr=0x0800075e paddr=0x000006ee type=SET_32 gpbcon
vaddr=0x08000774 paddr=0x00000704 type=SET_32
vaddr=0x0800077b paddr=0x0000070b type=SET_32 0x000000ba
vaddr=0x08000794 paddr=0x00000724 type=SET_32 __register_chrdev - 0x08000798
vaddr=0x0800079b paddr=0x0000072b type=SET_32 __this_module
vaddr=0x080007a2 paddr=0x00000732 type=SET_32 0x00000080
vaddr=0x080007a9 paddr=0x00000739 type=SET_32 0x000000c2
vaddr=0x080007af paddr=0x0000073f type=SET_32 major - 0x080007b3
vaddr=0x080007b4 paddr=0x00000744 type=SET_32 __class_create - 0x080007b8
vaddr=0x080007bb paddr=0x0000074b type=SET_32 - 0x080006df
vaddr=0x080007c1 paddr=0x00000751 type=SET_32 minor - 0x080007c9
vaddr=0x080007d3 paddr=0x00000763 type=SET_32 - 0x080006f7
vaddr=0x080007d9 paddr=0x00000769 type=SET_32 major - 0x080007dd
vaddr=0x080007ef paddr=0x0000077f type=SET_32 0x000000cd
vaddr=0x080007f4 paddr=0x00000784 type=SET_32 device_create - 0x080007f8
vaddr=0x080007ff paddr=0x0000078f type=SET_32 0x00000080
vaddr=0x08000805 paddr=0x00000795 type=SET_32 minor - 0x08000809
vaddr=0x08000813 paddr=0x000007a3 type=SET_32 minor - 0x08000817
vaddr=0x08000824 paddr=0x000007b4 type=SET_32 ioremap_nocache - 0x08000828
vaddr=0x08000835 paddr=0x000007c5 type=SET_32 gpbcon - 0x08000839
vaddr=0x0800083a paddr=0x000007ca type=SET_32 ioremap_nocache - 0x0800083e
vaddr=0x0800084b paddr=0x000007db type=SET_32 gpbcon - 0x08000847
vaddr=0x08000850 paddr=0x000007e0 type=SET_32 ioremap_nocache - 0x08000854
vaddr=0x08000861 paddr=0x000007f1 type=SET_32 gpbcon - 0x08000855
vaddr=0x08000866 paddr=0x000007f6 type=SET_32 ioremap_nocache - 0x0800086a
vaddr=0x08000877 paddr=0x00000807 type=SET_32 gpbcon - 0x08000863
vaddr=0x0800087c paddr=0x0000080c type=SET_32 ioremap_nocache - 0x08000880
vaddr=0x0800088d paddr=0x0000081d type=SET_32 gpbcon - 0x08000871
vaddr=0x08000892 paddr=0x00000822 type=SET_32 ioremap_nocache - 0x08000896
vaddr=0x080008a3 paddr=0x00000833 type=SET_32 gpbcon - 0x0800087f
vaddr=0x080008a8 paddr=0x00000838 type=SET_32 ioremap_nocache - 0x080008ac
vaddr=0x080008b9 paddr=0x00000849 type=SET_32 gpbcon - 0x0800088d
vaddr=0x080008be paddr=0x0000084e type=SET_32 ioremap_nocache - 0x080008c2
vaddr=0x080008cf paddr=0x0000085f type=SET_32 gpbcon - 0x0800089b
vaddr=0x080008d4 paddr=0x00000864 type=SET_32 ioremap_nocache - 0x080008d8
vaddr=0x080008e5 paddr=0x00000875 type=SET_32 gpbcon - 0x080008a9
vaddr=0x080008ea paddr=0x0000087a type=SET_32 ioremap_nocache - 0x080008ee
vaddr=0x080008fb paddr=0x0000088b type=SET_32 gpbcon - 0x080008b7
vaddr=0x08000900 paddr=0x00000890 type=SET_32 ioremap_nocache - 0x08000904
vaddr=0x08000911 paddr=0x000008a1 type=SET_32 gpbcon - 0x080008c5
vaddr=0x08000916 paddr=0x000008a6 type=SET_32 ioremap_nocache - 0x0800091a
vaddr=0x0800091d paddr=0x000008ad type=SET_32 gpbcon - 0x080008c9
vaddr=0x08000934 paddr=0x000008c4 type=SET_32 0x000000ba
vaddr=0x0800094a paddr=0x000008da type=SET_32 major - 0x0800094e
vaddr=0x0800094f paddr=0x000008df type=SET_32 __unregister_chrdev - 0x08000953
vaddr=0x08000955 paddr=0x000008e5 type=SET_32 minor - 0x0800095d
vaddr=0x08000966 paddr=0x000008f6 type=SET_32 0x00000080
vaddr=0x0800096b paddr=0x000008fb type=SET_32 device_unregister - 0x0800096f
vaddr=0x08000971 paddr=0x00000901 type=SET_32 minor - 0x08000975
vaddr=0x0800097d paddr=0x0000090d type=SET_32 minor - 0x08000981
vaddr=0x08000986 paddr=0x00000916 type=SET_32 - 0x080008aa
vaddr=0x0800098d paddr=0x0000091d type=SET_32 gpbcon
vaddr=0x08000992 paddr=0x00000922 type=SET_32 class_destroy - 0x08000996
vaddr=0x080009a8 paddr=0x00000938 type=SET_32 iounmap - 0x080009ac
vaddr=0x080009af paddr=0x0000093f type=SET_32 gpbcon 0x00000060
vaddr=0x08000ae0 paddr=0x00000000 type=SET_64 __this_module
vaddr=0x08000af8 paddr=0x00000018 type=SET_64 0x00000010
vaddr=0x08000b50 paddr=0x00000070 type=SET_64
vaddr=0x08000d30 paddr=0x00000150 type=SET_64 init_module
vaddr=0x08000df0 paddr=0x00000210 type=SET_64 cleanup_module

155 relocations

[0x08000070]> afx @ 0x08000080
C 0x080000a0 -> 0x080000a5
d 0x08000340 -> 0x08000347
d 0x08000352 -> 0x08000359
c 0x08000360 -> 0x08000320
d 0x08000323 -> 0x0800032a
d 0x08000300 -> 0x08000307
d 0x08000312 -> 0x08000319
d 0x080003a8 -> 0x080003af
d 0x080003ba -> 0x080003c1
c 0x080003c8 -> 0x08000388
d 0x0800038b -> 0x08000392
d 0x08000368 -> 0x0800036f
d 0x0800037a -> 0x08000381
d 0x080003d0 -> 0x080003d7
d 0x080003e2 -> 0x080003e9
d 0x080003f3 -> 0x080003fa
c 0x08000404 -> 0x08000334
d 0x08000450 -> 0x08000457
d 0x08000462 -> 0x08000469
c 0x08000470 -> 0x080003f0
d 0x08000410 -> 0x08000417
d 0x08000422 -> 0x08000429
d 0x08000433 -> 0x0800043a
c 0x08000444 -> 0x08000334
d 0x08000478 -> 0x0800047f
d 0x0800048a -> 0x08000491
c 0x08000498 -> 0x08000430
d 0x0800049a -> 0x080004a1
d 0x080004ac -> 0x080004b3
d 0x080004bd -> 0x080004c4
c 0x080004ce -> 0x08000334
d 0x080004d3 -> 0x080004da
d 0x080004e5 -> 0x080004ec
c 0x080004f3 -> 0x080004ba
d 0x080004f5 -> 0x080004fc
d 0x08000507 -> 0x0800050e
d 0x08000518 -> 0x0800051f
c 0x08000529 -> 0x08000334
d 0x0800052e -> 0x08000535
d 0x08000540 -> 0x08000547
c 0x0800054e -> 0x08000515
d 0x08000550 -> 0x08000557
d 0x08000562 -> 0x08000569
d 0x08000573 -> 0x0800057a
c 0x08000584 -> 0x08000334
d 0x08000589 -> 0x08000590
d 0x0800059b -> 0x080005a2
c 0x080005a9 -> 0x08000570
d 0x080005ab -> 0x080005b2
d 0x080005bd -> 0x080005c4
d 0x080005ce -> 0x080005d5
c 0x080005df -> 0x08000334
C 0x08000208 -> 0x0800020d
d 0x080005e4 -> 0x080005eb
d 0x080005f6 -> 0x080005fd
c 0x08000604 -> 0x080005cb
C 0x0800021f -> 0x08000224
d 0x08000606 -> 0x0800060d
d 0x08000618 -> 0x0800061f
d 0x08000629 -> 0x08000630
c 0x0800063a -> 0x08000334
C 0x08000236 -> 0x0800023b
d 0x08000678 -> 0x0800067f
d 0x0800068a -> 0x08000691
c 0x08000698 -> 0x08000626
C 0x0800024d -> 0x08000252
d 0x0800063f -> 0x08000646
d 0x08000651 -> 0x08000658
d 0x08000662 -> 0x08000669
c 0x08000673 -> 0x08000334
C 0x08000264 -> 0x08000269
d 0x0800071a -> 0x08000721
d 0x0800072c -> 0x08000733
c 0x0800073a -> 0x0800065f
C 0x0800027b -> 0x08000280
d 0x080006f8 -> 0x080006ff
d 0x0800070a -> 0x08000711
c 0x08000718 -> 0x080006df
d 0x080006e2 -> 0x080006e9
c 0x080006f3 -> 0x08000334
C 0x08000292 -> 0x08000297
d 0x080006bf -> 0x080006c6
d 0x080006d1 -> 0x080006d8
C 0x080002a9 -> 0x080002ae
d 0x0800069a -> 0x080006a1
d 0x080006ac -> 0x080006b3
c 0x080006ba -> 0x080002e9
d 0x080002ec -> 0x080002f3
c 0x080002fd -> 0x08000334
C 0x080002c0 -> 0x080002c5
d 0x080002c9 -> 0x080002d0
d 0x080002db -> 0x080002e2
[0x08000070]> pd 600
Do you want to print 880 lines? (y/N)
            ;-- section..text:
            ;-- rip:
/ (fcn) entry0 8
|   entry0 ();
|           0x08000070      55             push rbp                    ; [02] m-r-x section size 2381 named .text
|           0x08000071      31c0           xor eax, eax
|           0x08000073      4889e5         mov rbp, rsp
|           0x08000076      5d             pop rbp
\           0x08000077      c3             ret
            0x08000078      0f1f84000000.  nop dword [rax + rax]
/ (fcn) sym.led_drv_write 1693
|   sym.led_drv_write (int arg_18h);
|           ; var int local_1ch @ rbp-0x1c
|           ; var int local_14h @ rbp-0x14
|           ; arg int arg_18h @ rsp+0x18
|           0x08000080      55             push rbp
|           0x08000081      4889e5         mov rbp, rsp
|           0x08000084      53             push rbx
|           0x08000085      488d6424e8     lea rsp, qword [rsp - 0x18]
|           0x0800008a      488d5de4       lea rbx, qword [local_1ch]
|           0x0800008e      488d3b         lea rdi, qword [rbx]
|           0x08000091      48c745e40000.  mov qword [local_1ch], 0
|           0x08000099      c745ec000000.  mov dword [local_14h], 0
(reloc._copy_from_user_161)
|           0x080000a0      e800000000     call 0x80000a5                ; RELOC 32 _copy_from_user
|              ; CALL XREF from 0x080000a0 (sym.led_drv_write)
|           0x080000a5      b907000000     mov ecx, 7
|           0x080000aa      48c7c7000000.  mov rdi, 0                    ; RELOC 32
|           0x080000b1      488d33         lea rsi, qword [rbx]
|           0x080000b4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
|       ,=< 0x080000b6      0f8484020000   je 0x8000340
|       |   0x080000bc      b908000000     mov ecx, 8
|       |   0x080000c1      48c7c7000000.  mov rdi, 0                    ; RELOC 32
|       |   0x080000c8      488d33         lea rsi, qword [rbx]
|       |   0x080000cb      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
|      ,==< 0x080000cd      0f842d020000   je 0x8000300
|      ||   0x080000d3      b907000000     mov ecx, 7
|      ||   0x080000d8      48c7c7000000.  mov rdi, 0                    ; RELOC 32
|      ||   0x080000df      488d33         lea rsi, qword [rbx]
|      ||   0x080000e2      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
|     ,===< 0x080000e4      0f84be020000   je 0x80003a8
|     |||   0x080000ea      b908000000     mov ecx, 8
|     |||   0x080000ef      48c7c7000000.  mov rdi, 0                    ; RELOC 32
|     |||   0x080000f6      488d33         lea rsi, qword [rbx]
|     |||   0x080000f9      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
|    ,====< 0x080000fb      0f8467020000   je 0x8000368
|    ||||   0x08000101      b907000000     mov ecx, 7
|    ||||   0x08000106      48c7c7000000.  mov rdi, 0                    ; RELOC 32
|    ||||   0x0800010d      488d33         lea rsi, qword [rbx]
|    ||||   0x08000110      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
|   ,=====< 0x08000112      0f84b8020000   je 0x80003d0
|   |||||   0x08000118      b908000000     mov ecx, 8
|   |||||   0x0800011d      48c7c7000000.  mov rdi, 0                    ; RELOC 32
|   |||||   0x08000124      488d33         lea rsi, qword [rbx]
|   |||||   0x08000127      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
|  ,======< 0x08000129      0f8421030000   je 0x8000450
|  ||||||   0x0800012f      b907000000     mov ecx, 7
|  ||||||   0x08000134      48c7c7000000.  mov rdi, 0                    ; RELOC 32
|  ||||||   0x0800013b      488d33         lea rsi, qword [rbx]
|  ||||||   0x0800013e      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ,=======< 0x08000140      0f84ca020000   je 0x8000410
| |||||||   0x08000146      b908000000     mov ecx, 8
| |||||||   0x0800014b      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x08000152      488d33         lea rsi, qword [rbx]
| |||||||   0x08000155      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x08000157      0f841b030000   je 0x8000478
| |||||||   0x0800015d      b907000000     mov ecx, 7
| |||||||   0x08000162      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x08000169      488d33         lea rsi, qword [rbx]
| |||||||   0x0800016c      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x0800016e      0f8426030000   je 0x800049a
| |||||||   0x08000174      b908000000     mov ecx, 8
| |||||||   0x08000179      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x08000180      488d33         lea rsi, qword [rbx]
| |||||||   0x08000183      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x08000185      0f8448030000   je 0x80004d3
| |||||||   0x0800018b      b907000000     mov ecx, 7
| |||||||   0x08000190      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x08000197      488d33         lea rsi, qword [rbx]
| |||||||   0x0800019a      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x0800019c      0f8453030000   je 0x80004f5
| |||||||   0x080001a2      b908000000     mov ecx, 8
| |||||||   0x080001a7      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x080001ae      488d33         lea rsi, qword [rbx]
| |||||||   0x080001b1      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x080001b3      0f8475030000   je 0x800052e
| |||||||   0x080001b9      b907000000     mov ecx, 7
| |||||||   0x080001be      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x080001c5      488d33         lea rsi, qword [rbx]
| |||||||   0x080001c8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x080001ca      0f8480030000   je 0x8000550
| |||||||   0x080001d0      b908000000     mov ecx, 8
| |||||||   0x080001d5      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x080001dc      488d33         lea rsi, qword [rbx]
| |||||||   0x080001df      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x080001e1      0f84a2030000   je 0x8000589
| |||||||   0x080001e7      b907000000     mov ecx, 7
| |||||||   0x080001ec      48c7c7000000.  mov rdi, 0                    ; RELOC 32
| |||||||   0x080001f3      488d33         lea rsi, qword [rbx]
| |||||||   0x080001f6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
| ========< 0x080001f8      0f84ad030000   je 0x80005ab
| |||||||   0x080001fe      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x08000205      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_9)
| |||||||   0x08000208      e800000000     call 0x800020d                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x08000208 (sym.led_drv_write)
| |||||||   0x0800020d      85c0           test eax, eax
| ========< 0x0800020f      0f84cf030000   je 0x80005e4
| |||||||   0x08000215      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x0800021c      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_32)
| |||||||   0x0800021f      e800000000     call 0x8000224                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x0800021f (sym.led_drv_write)
| |||||||   0x08000224      85c0           test eax, eax
| ========< 0x08000226      0f84da030000   je 0x8000606
| |||||||   0x0800022c      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x08000233      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_55)
| |||||||   0x08000236      e800000000     call 0x800023b                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x08000236 (sym.led_drv_write)
| |||||||   0x0800023b      85c0           test eax, eax
| ========< 0x0800023d      0f8435040000   je 0x8000678
| |||||||   0x08000243      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x0800024a      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_78)
| |||||||   0x0800024d      e800000000     call 0x8000252                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x0800024d (sym.led_drv_write)
| |||||||   0x08000252      85c0           test eax, eax
| ========< 0x08000254      0f84e5030000   je 0x800063f
| |||||||   0x0800025a      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x08000261      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_101)
| |||||||   0x08000264      e800000000     call 0x8000269                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x08000264 (sym.led_drv_write)
| |||||||   0x08000269      85c0           test eax, eax
| ========< 0x0800026b      0f84a9040000   je 0x800071a
| |||||||   0x08000271      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x08000278      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_124)
| |||||||   0x0800027b      e800000000     call 0x8000280                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x0800027b (sym.led_drv_write)
| |||||||   0x08000280      85c0           test eax, eax
| ========< 0x08000282      0f8470040000   je 0x80006f8
| |||||||   0x08000288      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x0800028f      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_147)
| |||||||   0x08000292      e800000000     call 0x8000297                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x08000292 (sym.led_drv_write)
| |||||||   0x08000297      85c0           test eax, eax
| ========< 0x08000299      0f8420040000   je 0x80006bf
| |||||||   0x0800029f      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x080002a6      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_170)
| |||||||   0x080002a9      e800000000     call 0x80002ae                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x080002a9 (sym.led_drv_write)
| |||||||   0x080002ae      85c0           test eax, eax
| ========< 0x080002b0      0f84e4030000   je 0x800069a
| |||||||   0x080002b6      48c7c6000000.  mov rsi, 0                    ; RELOC 32
| |||||||   0x080002bd      488d3b         lea rdi, qword [rbx]
(reloc.strcmp_193)
| |||||||   0x080002c0      e800000000     call 0x80002c5                ; RELOC 32 strcmp
| |||||||      ; CALL XREF from 0x080002c0 (sym.led_drv_write)
| |||||||   0x080002c5      85c0           test eax, eax
| ========< 0x080002c7      756b           jne 0x8000334
(reloc.gpbcon_204)
| |||||||   0x080002c9      488b15000000.  mov rdx, qword [0x080002d0] ; [0x80002d0:8]=0x1111110125028b48  ; RELOC 32 gpbcon
| |||||||      ; DATA XREF from 0x080002c9 (sym.led_drv_write)
| |||||||   0x080002d0      488b02         mov rax, qword [rdx]
| |||||||   0x080002d3      2501111111     and eax, 0x11111101
| |||||||   0x080002d8      488902         mov qword [rdx], rax
(reloc.gpbcon_222)
| |||||||   0x080002db      488b15000000.  mov rdx, qword [0x080002e2] ; [0x80002e2:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
| |||||||      ; DATA XREF from 0x080002db (sym.led_drv_write)
| |||||||   0x080002e2      488b02         mov rax, qword [rdx]
| |||||||   0x080002e5      4883c801       or rax, 1
| |||||||      ; JMP XREF from 0x080006ba (sym.led_drv_write)
| --------> 0x080002e9      488902         mov qword [rdx], rax
(reloc.gpbcon_239)
| |||||||   0x080002ec      488b15000000.  mov rdx, qword [0x080002f3] ; [0x80002f3:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
| |||||||      ; DATA XREF from 0x080002ec (sym.led_drv_write)
| |||||||   0x080002f3      488b02         mov rax, qword [rdx]
| |||||||   0x080002f6      4883c810       or rax, 0x10
| |||||||   0x080002fa      488902         mov qword [rdx], rax
| ========< 0x080002fd      eb35           jmp 0x8000334
  |||||||   0x080002ff      90             nop
(reloc.gpbcon_3)
| |||||`--> 0x08000300      488b15000000.  mov rdx, qword [0x08000307] ; [0x8000307:8]=0x1111110125028b48  ; RELOC 32 gpbcon
| ||||| |      ; DATA XREF from 0x08000300 (sym.led_drv_write)
| ||||| |   0x08000307      488b02         mov rax, qword [rdx]
| ||||| |   0x0800030a      2501111111     and eax, 0x11111101
| ||||| |   0x0800030f      488902         mov qword [rdx], rax
(reloc.gpbcon_21)
| ||||| |   0x08000312      488b15000000.  mov rdx, qword [0x08000319] ; [0x8000319:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
| ||||| |      ; DATA XREF from 0x08000312 (sym.led_drv_write)
| ||||| |   0x08000319      488b02         mov rax, qword [rdx]
| ||||| |   0x0800031c      4883c801       or rax, 1
| ||||| |      ; JMP XREF from 0x08000360 (sym.led_drv_write)
| |||||.--> 0x08000320      488902         mov qword [rdx], rax
(reloc.gpbcon_38)
| |||||:|   0x08000323      488b15000000.  mov rdx, qword [0x0800032a] ; [0x800032a:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
| |||||:|      ; DATA XREF from 0x08000323 (sym.led_drv_write)
| |||||:|   0x0800032a      488b02         mov rax, qword [rdx]
| |||||:|   0x0800032d      4883c810       or rax, 0x10
| |||||:|   0x08000331      488902         mov qword [rdx], rax
| |||||:|      ; XREFS: JMP 0x08000404  JMP 0x08000444  JMP 0x080004ce  JMP 0x08000529  JMP 0x08000584  JMP 0x080005df  JMP 0x0800063a  JMP 0x08000673  JMP 0x080006f3  JMP 0x080002fd
| --------> 0x08000334      488d642418     lea rsp, qword [arg_18h]    ; 0x18 ; 24
| |||||:|   0x08000339      31c0           xor eax, eax
| |||||:|   0x0800033b      5b             pop rbx
| |||||:|   0x0800033c      5d             pop rbp
| |||||:|   0x0800033d      c3             ret
  |||||:|   0x0800033e      6690           nop
| |||||:`-> 0x08000340      488b15000000.  mov rdx, qword [0x08000347] ; [0x8000347:8]=0x1111110125028b48  ; RELOC 32 gpbcon
| |||||:       ; DATA XREF from 0x08000340 (sym.led_drv_write)
| |||||:    0x08000347      488b02         mov rax, qword [rdx]
| |||||:    0x0800034a      2501111111     and eax, 0x11111101
| |||||:    0x0800034f      488902         mov qword [rdx], rax
(reloc.gpbcon_85)
| |||||:    0x08000352      488b15000000.  mov rdx, qword [0x08000359] ; [0x8000359:8]=0xebfee08348028b48  ; RELOC 32 gpbcon
| |||||:       ; DATA XREF from 0x08000352 (sym.led_drv_write)
| |||||:    0x08000359      488b02         mov rax, qword [rdx]
| |||||:    0x0800035c      4883e0fe       and rax, 0xfffffffffffffffe
| |||||`==< 0x08000360      ebbe           jmp 0x8000320
  |||||     0x08000362      660f1f440000   nop word [rax + rax]
(reloc.gpbcon_107)
| |||`----> 0x08000368      488b15000000.  mov rdx, qword [0x0800036f] ; [0x800036f:8]=0x1111110125028b48  ; RELOC 32 gpbcon
| ||| |        ; DATA XREF from 0x08000368 (sym.led_drv_write)
| ||| |     0x0800036f      488b02         mov rax, qword [rdx]
| ||| |     0x08000372      2501111111     and eax, 0x11111101
| ||| |     0x08000377      488902         mov qword [rdx], rax
(reloc.gpbcon_125)
| ||| |     0x0800037a      488b15000000.  mov rdx, qword [0x08000381] ; [0x8000381:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
| ||| |        ; DATA XREF from 0x0800037a (sym.led_drv_write)
| ||| |     0x08000381      488b02         mov rax, qword [rdx]
| ||| |     0x08000384      4883e0fe       and rax, 0xfffffffffffffffe
| ||| |        ; JMP XREF from 0x080003c8 (sym.led_drv_write)
| ||| | .-> 0x08000388      488902         mov qword [rdx], rax
(reloc.gpbcon_142)
| ||| | :   0x0800038b      488b15000000.  mov rdx, qword [0x08000392] ; [0x8000392:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
| ||| | :      ; DATA XREF from 0x0800038b (sym.led_drv_write)
| ||| | :   0x08000392      488b02         mov rax, qword [rdx]
| ||| | :   0x08000395      4883c810       or rax, 0x10
| ||| | :   0x08000399      488902         mov qword [rdx], rax
| ||| | :   0x0800039c      488d642418     lea rsp, qword [arg_18h]    ; 0x18 ; 24
| ||| | :   0x080003a1      31c0           xor eax, eax
| ||| | :   0x080003a3      5b             pop rbx
| ||| | :   0x080003a4      5d             pop rbp
| ||| | :   0x080003a5      c3             ret
  ||| | :   0x080003a6      6690           nop
(reloc.gpbcon_171)
| ||| `---> 0x080003a8      488b15000000.  mov rdx, qword [0x080003af] ; [0x80003af:8]=0x1111110125028b48  ; RELOC 32 gpbcon
| |||   :      ; DATA XREF from 0x080003a8 (sym.led_drv_write)
| |||   :   0x080003af      488b02         mov rax, qword [rdx]
| |||   :   0x080003b2      2501111111     and eax, 0x11111101
| |||   :   0x080003b7      488902         mov qword [rdx], rax
(reloc.gpbcon_189)
| |||   :   0x080003ba      488b15000000.  mov rdx, qword [0x080003c1] ; [0x80003c1:8]=0xeb01c88348028b48  ; RELOC 32 gpbcon
| |||   :      ; DATA XREF from 0x080003ba (sym.led_drv_write)
| |||   :   0x080003c1      488b02         mov rax, qword [rdx]
| |||   :   0x080003c4      4883c801       or rax, 1
| |||   `=< 0x080003c8      ebbe           jmp 0x8000388
  |||       0x080003ca      660f1f440000   nop word [rax + rax]
(reloc.gpbcon_211)
| ||`-----> 0x080003d0      488b15000000.  mov rdx, qword [0x080003d7] ; [0x80003d7:8]=0x1111110125028b48  ; RELOC 32 gpbcon
| ||           ; DATA XREF from 0x080003d0 (sym.led_drv_write)
| ||        0x080003d7      488b02         mov rax, qword [rdx]
| ||        0x080003da      2501111111     and eax, 0x11111101
| ||        0x080003df      488902         mov qword [rdx], rax
| ||        0x080003e2      488b15000000.  mov rdx, qword [0x080003e9] ; [0x80003e9:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
| ||           ; DATA XREF from 0x080003e2 (sym.led_drv_write)
| ||        0x080003e9      488b02         mov rax, qword [rdx]
| ||        0x080003ec      4883e0fe       and rax, 0xfffffffffffffffe
| ||           ; JMP XREF from 0x08000470 (sym.led_drv_write)
| ||    .-> 0x080003f0      488902         mov qword [rdx], rax
(reloc.gpbcon_246)
| ||    :   0x080003f3      488b15000000.  mov rdx, qword [0x080003fa] ; [0x80003fa:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
| ||    :      ; DATA XREF from 0x080003f3 (sym.led_drv_write)
| ||    :   0x080003fa      488b02         mov rax, qword [rdx]
| ||    :   0x080003fd      4883c810       or rax, 0x10
| ||    :   0x08000401      488902         mov qword [rdx], rax
| ========< 0x08000404      e92bffffff     jmp 0x8000334
  ||    :   0x08000409      0f1f80000000.  nop dword [rax]
(reloc.gpbcon_19)
| `-------> 0x08000410      488b15000000.  mov rdx, qword [0x08000417] ; [0x8000417:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|  |    :      ; DATA XREF from 0x08000410 (sym.led_drv_write)
|  |    :   0x08000417      488b02         mov rax, qword [rdx]
|  |    :   0x0800041a      2501111111     and eax, 0x11111101
|  |    :   0x0800041f      488902         mov qword [rdx], rax
(reloc.gpbcon_37)
|  |    :   0x08000422      488b15000000.  mov rdx, qword [0x08000429] ; [0x8000429:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
|  |    :      ; DATA XREF from 0x08000422 (sym.led_drv_write)
|  |    :   0x08000429      488b02         mov rax, qword [rdx]
|  |    :   0x0800042c      4883c801       or rax, 1
|  |    :      ; JMP XREF from 0x08000498 (sym.led_drv_write)
|  |   .--> 0x08000430      488902         mov qword [rdx], rax
(reloc.gpbcon_54)
|  |   ::   0x08000433      488b15000000.  mov rdx, qword [0x0800043a] ; [0x800043a:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
|  |   ::      ; DATA XREF from 0x08000433 (sym.led_drv_write)
|  |   ::   0x0800043a      488b02         mov rax, qword [rdx]
|  |   ::   0x0800043d      4883c810       or rax, 0x10
|  |   ::   0x08000441      488902         mov qword [rdx], rax
| ========< 0x08000444      e9ebfeffff     jmp 0x8000334
   |   ::   0x08000449      0f1f80000000.  nop dword [rax]
|  `------> 0x08000450      488b15000000.  mov rdx, qword [0x08000457] ; [0x8000457:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x08000450 (sym.led_drv_write)
|      ::   0x08000457      488b02         mov rax, qword [rdx]
|      ::   0x0800045a      2501111111     and eax, 0x11111101
|      ::   0x0800045f      488902         mov qword [rdx], rax
|      ::   0x08000462      488b15000000.  mov rdx, qword [0x08000469] ; [0x8000469:8]=0xe901c88348028b48  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x08000462 (sym.led_drv_write)
|      ::   0x08000469      488b02         mov rax, qword [rdx]
|      ::   0x0800046c      4883c801       or rax, 1
|      :`=< 0x08000470      e97bffffff     jmp 0x80003f0
       :    0x08000475      0f1f00         nop dword [rax]
| --------> 0x08000478      488b15000000.  mov rdx, qword [0x0800047f] ; [0x800047f:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x08000478 (sym.led_drv_write)
|      :    0x0800047f      488b02         mov rax, qword [rdx]
|      :    0x08000482      2501111111     and eax, 0x11111101
|      :    0x08000487      488902         mov qword [rdx], rax
|      :    0x0800048a      488b15000000.  mov rdx, qword [0x08000491] ; [0x8000491:8]=0xebfee08348028b48  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x0800048a (sym.led_drv_write)
|      :    0x08000491      488b02         mov rax, qword [rdx]
|      :    0x08000494      4883e0fe       and rax, 0xfffffffffffffffe
|      `==< 0x08000498      eb96           jmp 0x8000430
| --------> 0x0800049a      488b15000000.  mov rdx, qword [0x080004a1] ; [0x80004a1:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x0800049a (sym.led_drv_write)
|           0x080004a1      488b02         mov rax, qword [rdx]
|           0x080004a4      2501111111     and eax, 0x11111101
|           0x080004a9      488902         mov qword [rdx], rax
|           0x080004ac      488b15000000.  mov rdx, qword [0x080004b3] ; [0x80004b3:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x080004ac (sym.led_drv_write)
|           0x080004b3      488b02         mov rax, qword [rdx]
|           0x080004b6      4883e0fe       and rax, 0xfffffffffffffffe
|              ; JMP XREF from 0x080004f3 (sym.led_drv_write)
|       .-> 0x080004ba      488902         mov qword [rdx], rax
|       :   0x080004bd      488b15000000.  mov rdx, qword [0x080004c4] ; [0x80004c4:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x080004bd (sym.led_drv_write)
|       :   0x080004c4      488b02         mov rax, qword [rdx]
|       :   0x080004c7      4883c810       or rax, 0x10
|       :   0x080004cb      488902         mov qword [rdx], rax
| ========< 0x080004ce      e961feffff     jmp 0x8000334
(reloc.gpbcon_214)
| --------> 0x080004d3      488b15000000.  mov rdx, qword [0x080004da] ; [0x80004da:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x080004d3 (sym.led_drv_write)
|       :   0x080004da      488b02         mov rax, qword [rdx]
|       :   0x080004dd      2501111111     and eax, 0x11111101
|       :   0x080004e2      488902         mov qword [rdx], rax
(reloc.gpbcon_232)
|       :   0x080004e5      488b15000000.  mov rdx, qword [0x080004ec] ; [0x80004ec:8]=0xeb01c88348028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x080004e5 (sym.led_drv_write)
|       :   0x080004ec      488b02         mov rax, qword [rdx]
|       :   0x080004ef      4883c801       or rax, 1
|       `=< 0x080004f3      ebc5           jmp 0x80004ba
(reloc.gpbcon_248)
| --------> 0x080004f5      488b15000000.  mov rdx, qword [0x080004fc] ; [0x80004fc:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x080004f5 (sym.led_drv_write)
|           0x080004fc      488b02         mov rax, qword [rdx]
|           0x080004ff      2501111111     and eax, 0x11111101
|           0x08000504      488902         mov qword [rdx], rax
(reloc.gpbcon_10)
|           0x08000507      488b15000000.  mov rdx, qword [0x0800050e] ; [0x800050e:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x08000507 (sym.led_drv_write)
|           0x0800050e      488b02         mov rax, qword [rdx]
|           0x08000511      4883c801       or rax, 1
|              ; JMP XREF from 0x0800054e (sym.led_drv_write)
|       .-> 0x08000515      488902         mov qword [rdx], rax
|       :   0x08000518      488b15000000.  mov rdx, qword [0x0800051f] ; [0x800051f:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x08000518 (sym.led_drv_write)
|       :   0x0800051f      488b02         mov rax, qword [rdx]
|       :   0x08000522      4883c810       or rax, 0x10
|       :   0x08000526      488902         mov qword [rdx], rax
| ========< 0x08000529      e906feffff     jmp 0x8000334
(reloc.gpbcon_49)
| --------> 0x0800052e      488b15000000.  mov rdx, qword [0x08000535] ; [0x8000535:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x0800052e (sym.led_drv_write)
|       :   0x08000535      488b02         mov rax, qword [rdx]
|       :   0x08000538      2501111111     and eax, 0x11111101
|       :   0x0800053d      488902         mov qword [rdx], rax
(reloc.gpbcon_67)
|       :   0x08000540      488b15000000.  mov rdx, qword [0x08000547] ; [0x8000547:8]=0xebfee08348028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x08000540 (sym.led_drv_write)
|       :   0x08000547      488b02         mov rax, qword [rdx]
|       :   0x0800054a      4883e0fe       and rax, 0xfffffffffffffffe
|       `=< 0x0800054e      ebc5           jmp 0x8000515
(reloc.gpbcon_83)
| --------> 0x08000550      488b15000000.  mov rdx, qword [0x08000557] ; [0x8000557:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x08000550 (sym.led_drv_write)
|           0x08000557      488b02         mov rax, qword [rdx]
|           0x0800055a      2501111111     and eax, 0x11111101
|           0x0800055f      488902         mov qword [rdx], rax
|           0x08000562      488b15000000.  mov rdx, qword [0x08000569] ; [0x8000569:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x08000562 (sym.led_drv_write)
|           0x08000569      488b02         mov rax, qword [rdx]
|           0x0800056c      4883e0fe       and rax, 0xfffffffffffffffe
|              ; JMP XREF from 0x080005a9 (sym.led_drv_write)
|       .-> 0x08000570      488902         mov qword [rdx], rax
(reloc.gpbcon_118)
|       :   0x08000573      488b15000000.  mov rdx, qword [0x0800057a] ; [0x800057a:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x08000573 (sym.led_drv_write)
|       :   0x0800057a      488b02         mov rax, qword [rdx]
|       :   0x0800057d      4883c810       or rax, 0x10
|       :   0x08000581      488902         mov qword [rdx], rax
| ========< 0x08000584      e9abfdffff     jmp 0x8000334
(reloc.gpbcon_140)
| --------> 0x08000589      488b15000000.  mov rdx, qword [0x08000590] ; [0x8000590:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x08000589 (sym.led_drv_write)
|       :   0x08000590      488b02         mov rax, qword [rdx]
|       :   0x08000593      2501111111     and eax, 0x11111101
|       :   0x08000598      488902         mov qword [rdx], rax
(reloc.gpbcon_158)
|       :   0x0800059b      488b15000000.  mov rdx, qword [0x080005a2] ; [0x80005a2:8]=0xeb01c88348028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x0800059b (sym.led_drv_write)
|       :   0x080005a2      488b02         mov rax, qword [rdx]
|       :   0x080005a5      4883c801       or rax, 1
|       `=< 0x080005a9      ebc5           jmp 0x8000570
(reloc.gpbcon_174)
| --------> 0x080005ab      488b15000000.  mov rdx, qword [0x080005b2] ; [0x80005b2:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x080005ab (sym.led_drv_write)
|           0x080005b2      488b02         mov rax, qword [rdx]
|           0x080005b5      2501111111     and eax, 0x11111101
|           0x080005ba      488902         mov qword [rdx], rax
(reloc.gpbcon_192)
|           0x080005bd      488b15000000.  mov rdx, qword [0x080005c4] ; [0x80005c4:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x080005bd (sym.led_drv_write)
|           0x080005c4      488b02         mov rax, qword [rdx]
|           0x080005c7      4883c801       or rax, 1
|              ; JMP XREF from 0x08000604 (sym.led_drv_write)
|       .-> 0x080005cb      488902         mov qword [rdx], rax
(reloc.gpbcon_209)
|       :   0x080005ce      488b15000000.  mov rdx, qword [0x080005d5] ; [0x80005d5:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x080005ce (sym.led_drv_write)
|       :   0x080005d5      488b02         mov rax, qword [rdx]
|       :   0x080005d8      4883c810       or rax, 0x10
|       :   0x080005dc      488902         mov qword [rdx], rax
| ========< 0x080005df      e950fdffff     jmp 0x8000334
(reloc.gpbcon_231)
| --------> 0x080005e4      488b15000000.  mov rdx, qword [0x080005eb] ; [0x80005eb:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x080005e4 (sym.led_drv_write)
|       :   0x080005eb      488b02         mov rax, qword [rdx]
|       :   0x080005ee      2501111111     and eax, 0x11111101
|       :   0x080005f3      488902         mov qword [rdx], rax
(reloc.gpbcon_249)
|       :   0x080005f6      488b15000000.  mov rdx, qword [0x080005fd] ; [0x80005fd:8]=0xebfee08348028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x080005f6 (sym.led_drv_write)
|       :   0x080005fd      488b02         mov rax, qword [rdx]
|       :   0x08000600      4883e0fe       and rax, 0xfffffffffffffffe
|       `=< 0x08000604      ebc5           jmp 0x80005cb
(reloc.gpbcon_9)
| --------> 0x08000606      488b15000000.  mov rdx, qword [0x0800060d] ; [0x800060d:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x08000606 (sym.led_drv_write)
|           0x0800060d      488b02         mov rax, qword [rdx]
|           0x08000610      2501111111     and eax, 0x11111101
|           0x08000615      488902         mov qword [rdx], rax
(reloc.gpbcon_27)
|           0x08000618      488b15000000.  mov rdx, qword [0x0800061f] ; [0x800061f:8]=0x48fee08348028b48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x08000618 (sym.led_drv_write)
|           0x0800061f      488b02         mov rax, qword [rdx]
|           0x08000622      4883e0fe       and rax, 0xfffffffffffffffe
|              ; JMP XREF from 0x08000698 (sym.led_drv_write)
|       .-> 0x08000626      488902         mov qword [rdx], rax
(reloc.gpbcon_44)
|       :   0x08000629      488b15000000.  mov rdx, qword [0x08000630] ; [0x8000630:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x08000629 (sym.led_drv_write)
|       :   0x08000630      488b02         mov rax, qword [rdx]
|       :   0x08000633      4883c810       or rax, 0x10
|       :   0x08000637      488902         mov qword [rdx], rax
| ========< 0x0800063a      e9f5fcffff     jmp 0x8000334
(reloc.gpbcon_66)
| --------> 0x0800063f      488b15000000.  mov rdx, qword [0x08000646] ; [0x8000646:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x0800063f (sym.led_drv_write)
|       :   0x08000646      488b02         mov rax, qword [rdx]
|       :   0x08000649      2501111111     and eax, 0x11111101
|       :   0x0800064e      488902         mov qword [rdx], rax
(reloc.gpbcon_84)
|       :   0x08000651      488b15000000.  mov rdx, qword [0x08000658] ; [0x8000658:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
|       :      ; DATA XREF from 0x08000651 (sym.led_drv_write)
|       :   0x08000658      488b02         mov rax, qword [rdx]
|       :   0x0800065b      4883c801       or rax, 1
|       :      ; JMP XREF from 0x0800073a (sym.led_drv_write)
|      .--> 0x0800065f      488902         mov qword [rdx], rax
(reloc.gpbcon_101)
|      ::   0x08000662      488b15000000.  mov rdx, qword [0x08000669] ; [0x8000669:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x08000662 (sym.led_drv_write)
|      ::   0x08000669      488b02         mov rax, qword [rdx]
|      ::   0x0800066c      4883c810       or rax, 0x10
|      ::   0x08000670      488902         mov qword [rdx], rax
| ========< 0x08000673      e9bcfcffff     jmp 0x8000334
(reloc.gpbcon_123)
| --------> 0x08000678      488b15000000.  mov rdx, qword [0x0800067f] ; [0x800067f:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x08000678 (sym.led_drv_write)
|      ::   0x0800067f      488b02         mov rax, qword [rdx]
|      ::   0x08000682      2501111111     and eax, 0x11111101
|      ::   0x08000687      488902         mov qword [rdx], rax
|      ::   0x0800068a      488b15000000.  mov rdx, qword [0x08000691] ; [0x8000691:8]=0xeb01c88348028b48  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x0800068a (sym.led_drv_write)
|      ::   0x08000691      488b02         mov rax, qword [rdx]
|      ::   0x08000694      4883c801       or rax, 1
|      :`=< 0x08000698      eb8c           jmp 0x8000626
(reloc.gpbcon_157)
| --------> 0x0800069a      488b15000000.  mov rdx, qword [0x080006a1] ; [0x80006a1:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x0800069a (sym.led_drv_write)
|      :    0x080006a1      488b02         mov rax, qword [rdx]
|      :    0x080006a4      2501111111     and eax, 0x11111101
|      :    0x080006a9      488902         mov qword [rdx], rax
|      :    0x080006ac      488b15000000.  mov rdx, qword [0x080006b3] ; [0x80006b3:8]=0xe9fee08348028b48  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x080006ac (sym.led_drv_write)
|      :    0x080006b3      488b02         mov rax, qword [rdx]
|      :    0x080006b6      4883e0fe       and rax, 0xfffffffffffffffe
| ========< 0x080006ba      e92afcffff     jmp 0x80002e9
(reloc.gpbcon_194)
| --------> 0x080006bf      488b15000000.  mov rdx, qword [0x080006c6] ; [0x80006c6:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x080006bf (sym.led_drv_write)
|      :    0x080006c6      488b02         mov rax, qword [rdx]
|      :    0x080006c9      2501111111     and eax, 0x11111101
|      :    0x080006ce      488902         mov qword [rdx], rax
(reloc.gpbcon_212)
|      :    0x080006d1      488b15000000.  mov rdx, qword [0x080006d8] ; [0x80006d8:8]=0x4801c88348028b48  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x080006d1 (sym.led_drv_write)
|      :    0x080006d8      488b02         mov rax, qword [rdx]
|      :    0x080006db      4883c801       or rax, 1
|      :       ; JMP XREF from 0x08000718 (sym.led_drv_write)
|      :.-> 0x080006df      488902         mov qword [rdx], rax
|      ::   0x080006e2      488b15000000.  mov rdx, qword [0x080006e9] ; [0x80006e9:8]=0x4810c88348028b48  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x080006e2 (sym.led_drv_write)
|      ::   0x080006e9      488b02         mov rax, qword [rdx]
|      ::   0x080006ec      4883c810       or rax, 0x10
|      ::   0x080006f0      488902         mov qword [rdx], rax
| ========< 0x080006f3      e93cfcffff     jmp 0x8000334
| --------> 0x080006f8      488b15000000.  mov rdx, qword [0x080006ff] ; [0x80006ff:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x080006f8 (sym.led_drv_write)
|      ::   0x080006ff      488b02         mov rax, qword [rdx]
|      ::   0x08000702      2501111111     and eax, 0x11111101
|      ::   0x08000707      488902         mov qword [rdx], rax
(reloc.gpbcon_13)
|      ::   0x0800070a      488b15000000.  mov rdx, qword [0x08000711] ; [0x8000711:8]=0xebfee08348028b48  ; RELOC 32 gpbcon
|      ::      ; DATA XREF from 0x0800070a (sym.led_drv_write)
|      ::   0x08000711      488b02         mov rax, qword [rdx]
|      ::   0x08000714      4883e0fe       and rax, 0xfffffffffffffffe
|      :`=< 0x08000718      ebc5           jmp 0x80006df
| --------> 0x0800071a      488b15000000.  mov rdx, qword [0x08000721] ; [0x8000721:8]=0x1111110125028b48  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x0800071a (sym.led_drv_write)
|      :    0x08000721      488b02         mov rax, qword [rdx]
|      :    0x08000724      2501111111     and eax, 0x11111101
|      :    0x08000729      488902         mov qword [rdx], rax
(reloc.gpbcon_47)
|      :    0x0800072c      488b15000000.  mov rdx, qword [0x08000733] ; [0x8000733:8]=0xe9fee08348028b48  ; RELOC 32 gpbcon
|      :       ; DATA XREF from 0x0800072c (sym.led_drv_write)
|      :    0x08000733      488b02         mov rax, qword [rdx]
|      :    0x08000736      4883e0fe       and rax, 0xfffffffffffffffe
\      `==< 0x0800073a      e920ffffff     jmp 0x800065f
            0x0800073f      90             nop
\           ;-- init_module:
/ (fcn) sym.led_drv_init 489
|   sym.led_drv_init ();
|           ; var int local_8h @ rsp+0x8
|           0x08000740      31c0           xor eax, eax
|           0x08000742      66666666662e.  nop word cs:[rax + rax]
|       .-> 0x08000750      48c780000000.  mov qword [rax], 0            ; RELOC 32
(reloc.gpbcon_94)
|       :   0x0800075b      48c780000000.  mov qword [rax], 0            ; RELOC 32 gpbcon
|       :   0x08000766      488d4008       lea rax, qword [rax + 8]    ; 8
|       :   0x0800076a      4883f860       cmp rax, 0x60               ; '`' ; 96
|       `=< 0x0800076e      75e0           jne 0x8000750
|           0x08000770      55             push rbp
|           0x08000771      49c7c0000000.  mov r8, 0                     ; RELOC 32
|           0x08000778      48c7c1000000.  mov rcx, 0                    ; RELOC 32
|           0x0800077f      4889e5         mov rbp, rsp
|           0x08000782      ba00010000     mov edx, 0x100              ; 256
|           0x08000787      53             push rbx
|           0x08000788      31f6           xor esi, esi
|           0x0800078a      31ff           xor edi, edi
|           0x0800078c      488d6424f8     lea rsp, qword [rsp - 8]
|           0x08000791      31db           xor ebx, ebx
(reloc.__register_chrdev_148)
|           0x08000793      e800000000     call 0x8000798                ; RELOC 32 __register_chrdev
(reloc.__this_module_155)
|              ; CALL XREF from 0x08000793 (sym.led_drv_init)
|           0x08000798      48c7c7000000.  mov rdi, 0                    ; RELOC 32 __this_module
|           0x0800079f      48c7c2000000.  mov rdx, 0                    ; RELOC 32
|           0x080007a6      48c7c6000000.  mov rsi, 0                    ; RELOC 32
(reloc.major_175)
|           0x080007ad      890500000000   mov dword [0x080007b3], eax ; [0x80007b3:4]=232  ; RELOC 32 major
(reloc.__class_create_180)
|              ; DATA XREF from 0x080007ad (sym.led_drv_init)
|           0x080007b3      e800000000     call 0x80007b8                ; RELOC 32 __class_create
|              ; CALL XREF from 0x080007b3 (sym.led_drv_init)
|           0x080007b8      488905000000.  mov qword [0x080007bf], rax ; [0x80007bf:8]=0x5c7  ; RELOC 32
(reloc.minor_193)
|              ; DATA XREF from 0x080007b8 (sym.led_drv_init)
|           0x080007bf      c70500000000.  mov dword [0x080007c9], 0   ; [0x80007c9:4]=0xeb388d48  ; RELOC 32 minor
|              ; DATA XREF from 0x080007bf (sym.led_drv_init)
|           0x080007c9      488d38         lea rdi, qword [rax]
|       ,=< 0x080007cc      eb09           jmp 0x80007d7
        |   0x080007ce      6690           nop
|      .--> 0x080007d0      488b3d000000.  mov rdi, qword [0x080007d7] ; [0x80007d7:8]=0x8d4400000000158b  ; RELOC 32
(reloc.major_217)
|      :|      ; JMP XREF from 0x080007cc (sym.led_drv_init)
|      :|      ; DATA XREF from 0x080007d0 (sym.led_drv_init)
|      :`-> 0x080007d7      8b1500000000   mov edx, dword [0x080007dd] ; [0x80007dd:4]=0x14b8d44  ; RELOC 32 major
|      :       ; DATA XREF from 0x080007d7 (sym.led_drv_init)
|      :    0x080007dd      448d4b01       lea r9d, dword [rbx + 1]    ; 1
|      :    0x080007e1      c1e214         shl edx, 0x14
|      :    0x080007e4      31c9           xor ecx, ecx
|      :    0x080007e6      09da           or edx, ebx
|      :    0x080007e8      31f6           xor esi, esi
|      :    0x080007ea      31c0           xor eax, eax
|      :    0x080007ec      49c7c0000000.  mov r8, 0                     ; RELOC 32
(reloc.device_create_244)
|      :    0x080007f3      e800000000     call 0x80007f8                ; RELOC 32 device_create
|      :       ; CALL XREF from 0x080007f3 (sym.led_drv_init)
|      :    0x080007f8      4863db         movsxd rbx, ebx
|      :    0x080007fb      488904dd0000.  mov qword [rbx*8], rax        ; RELOC 32
(reloc.minor_5)
|      :    0x08000803      8b0500000000   mov eax, dword [0x08000809] ; [0x8000809:4]=0xc383c389  ; RELOC 32 minor
|      :       ; DATA XREF from 0x08000803 (sym.led_drv_init)
|      :    0x08000809      89c3           mov ebx, eax
|      :    0x0800080b      83c301         add ebx, 1
|      :    0x0800080e      83fb0b         cmp ebx, 0xb                ; 11
(reloc.minor_19)
|      :    0x08000811      891d00000000   mov dword [0x08000817], ebx ; [0x8000817:4]=0x10beb776  ; RELOC 32 minor
|      |       ; DATA XREF from 0x08000811 (sym.led_drv_init)
|      `==< 0x08000817      76b7           jbe 0x80007d0
|           0x08000819      be10000000     mov esi, 0x10               ; 16
|           0x0800081e      bfb8d1d0fe     mov edi, 0xfed0d1b8
(reloc.ioremap_nocache_36)
|           0x08000823      e800000000     call 0x8000828                ; RELOC 32 ioremap_nocache
|              ; CALL XREF from 0x08000823 (sym.led_drv_init)
|           0x08000828      be10000000     mov esi, 0x10               ; 16
|           0x0800082d      bf28d0d0fe     mov edi, 0xfed0d028
(reloc.gpbcon_53)
|           0x08000832      488905000000.  mov qword [0x08000839], rax ; [0x8000839:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_58)
|              ; DATA XREF from 0x08000832 (sym.led_drv_init)
|           0x08000839      e800000000     call 0x800083e                ; RELOC 32 ioremap_nocache
|              ; CALL XREF from 0x08000839 (sym.led_drv_init)
|           0x0800083e      be10000000     mov esi, 0x10               ; 16
|           0x08000843      bfb8d0d0fe     mov edi, 0xfed0d0b8
(reloc.gpbcon_75)
|           0x08000848      488905000000.  mov qword [0x0800084f], rax ; [0x800084f:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_80)
|              ; DATA XREF from 0x08000848 (sym.led_drv_init)
|           0x0800084f      e800000000     call 0x8000854                ; RELOC 32 ioremap_nocache
|              ; CALL XREF from 0x0800084f (sym.led_drv_init)
|           0x08000854      be10000000     mov esi, 0x10               ; 16
|           0x08000859      bfd8d0d0fe     mov edi, 0xfed0d0d8
(reloc.gpbcon_97)
|           0x0800085e      488905000000.  mov qword [0x08000865], rax ; [0x8000865:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_102)
|              ; DATA XREF from 0x0800085e (sym.led_drv_init)
|           0x08000865      e800000000     call 0x800086a                ; RELOC 32 ioremap_nocache
|              ; CALL XREF from 0x08000865 (sym.led_drv_init)
|           0x0800086a      be10000000     mov esi, 0x10               ; 16
|           0x0800086f      bf88d0d0fe     mov edi, 0xfed0d088
(reloc.gpbcon_119)
|           0x08000874      488905000000.  mov qword [0x0800087b], rax ; [0x800087b:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_124)
|              ; DATA XREF from 0x08000874 (sym.led_drv_init)
|           0x0800087b      e800000000     call 0x8000880                ; RELOC 32 ioremap_nocache
|              ; CALL XREF from 0x0800087b (sym.led_drv_init)
|           0x08000880      be10000000     mov esi, 0x10               ; 16
|           0x08000885      bfa8d0d0fe     mov edi, 0xfed0d0a8
|           0x0800088a      488905000000.  mov qword [0x08000891], rax ; [0x8000891:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_146)
|              ; DATA XREF from 0x0800088a (sym.led_drv_init)
|           0x08000891      e800000000     call 0x8000896                ; RELOC 32 ioremap_nocache
|              ; CALL XREF from 0x08000891 (sym.led_drv_init)
|           0x08000896      be10000000     mov esi, 0x10               ; 16
|           0x0800089b      bf48d0d0fe     mov edi, 0xfed0d048
(reloc.gpbcon_163)
|           0x080008a0      488905000000.  mov qword [0x080008a7], rax ; [0x80008a7:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_168)
|              ; DATA XREF from 0x080008a0 (sym.led_drv_init)
|           0x080008a7      e800000000     call 0x80008ac                ; RELOC 32 ioremap_nocache
|              ; CALL XREF from 0x080008a7 (sym.led_drv_init)
|           0x080008ac      be10000000     mov esi, 0x10               ; 16
|           0x080008b1      bf68d0d0fe     mov edi, 0xfed0d068
(reloc.gpbcon_185)
|           0x080008b6      488905000000.  mov qword [0x080008bd], rax ; [0x80008bd:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_190)
|              ; DATA XREF from 0x080008b6 (sym.led_drv_init)
|           0x080008bd      e800000000     call 0x80008c2                ; RELOC 32 ioremap_nocache
|              ; CALL XREF from 0x080008bd (sym.led_drv_init)
|           0x080008c2      be10000000     mov esi, 0x10               ; 16
|           0x080008c7      bf18d0d0fe     mov edi, 0xfed0d018
(reloc.gpbcon_207)
|           0x080008cc      488905000000.  mov qword [0x080008d3], rax ; [0x80008d3:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_212)
|              ; DATA XREF from 0x080008cc (sym.led_drv_init)
|           0x080008d3      e800000000     call 0x80008d8                ; RELOC 32 ioremap_nocache
|              ; CALL XREF from 0x080008d3 (sym.led_drv_init)
|           0x080008d8      be10000000     mov esi, 0x10               ; 16
|           0x080008dd      bf38d0d0fe     mov edi, 0xfed0d038
(reloc.gpbcon_229)
|           0x080008e2      488905000000.  mov qword [0x080008e9], rax ; [0x80008e9:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_234)
|              ; DATA XREF from 0x080008e2 (sym.led_drv_init)
|           0x080008e9      e800000000     call 0x80008ee                ; RELOC 32 ioremap_nocache
|              ; CALL XREF from 0x080008e9 (sym.led_drv_init)
|           0x080008ee      be10000000     mov esi, 0x10               ; 16
|           0x080008f3      bf58d0d0fe     mov edi, 0xfed0d058
(reloc.gpbcon_251)
|           0x080008f8      488905000000.  mov qword [0x080008ff], rax ; [0x80008ff:8]=0x10be00000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_0)
|              ; DATA XREF from 0x080008f8 (sym.led_drv_init)
|           0x080008ff      e800000000     call 0x8000904                ; RELOC 32 ioremap_nocache
|              ; CALL XREF from 0x080008ff (sym.led_drv_init)
|           0x08000904      be10000000     mov esi, 0x10               ; 16
|           0x08000909      bf98d0d0fe     mov edi, 0xfed0d098
(reloc.gpbcon_17)
|           0x0800090e      488905000000.  mov qword [0x08000915], rax ; [0x8000915:8]=0x5894800000000e8  ; RELOC 32 gpbcon
(reloc.ioremap_nocache_22)
|              ; DATA XREF from 0x0800090e (sym.led_drv_init)
|           0x08000915      e800000000     call 0x800091a                ; RELOC 32 ioremap_nocache
(reloc.gpbcon_29)
|              ; CALL XREF from 0x08000915 (sym.led_drv_init)
|           0x0800091a      488905000000.  mov qword [0x08000921], rax ; [0x8000921:8]=0x5bc0310824648d48  ; RELOC 32 gpbcon
|              ; DATA XREF from 0x0800091a (sym.led_drv_init)
|           0x08000921      488d642408     lea rsp, qword [local_8h]   ; 8
|           0x08000926      31c0           xor eax, eax
|           0x08000928      5b             pop rbx
|           0x08000929      5d             pop rbp
\           0x0800092a      c3             ret
            0x0800092b      0f1f440000     nop dword [rax + rax]
\           ;-- cleanup_module:
/ (fcn) sym.led_drv_exit 141
|   sym.led_drv_exit ();
|           ; var int local_8h @ rsp+0x8
|              ; CALL XREF from 0x0800094e (sym.led_drv_exit)
|              ; CALL XREF from 0x0800096a (sym.led_drv_exit)
|              ; CALL XREF from 0x08000991 (sym.led_drv_exit)
|              ; CALL XREF from 0x080009a7 (sym.led_drv_exit)
|           0x08000930      55             push rbp
|           0x08000931      48c7c1000000.  mov rcx, 0                    ; RELOC 32
|           0x08000938      ba00010000     mov edx, 0x100              ; 256
|           0x0800093d      4889e5         mov rbp, rsp
|           0x08000940      31f6           xor esi, esi
|           0x08000942      53             push rbx
|           0x08000943      488d6424f8     lea rsp, qword [rsp - 8]
(reloc.major_74)
|           0x08000948      8b3d00000000   mov edi, dword [0x0800094e] ; [0x800094e:4]=232  ; RELOC 32 major
(reloc.__unregister_chrdev_79)
|              ; DATA XREF from 0x08000948 (sym.led_drv_exit)
|           0x0800094e      e800000000     call 0x8000953                ; RELOC 32 __unregister_chrdev
(reloc.minor_85)
|              ; CALL XREF from 0x0800094e (sym.led_drv_exit)
|           0x08000953      c70500000000.  mov dword [0x0800095d], 0   ; [0x800095d:4]=0x4890c031  ; RELOC 32 minor
|              ; DATA XREF from 0x08000953 (sym.led_drv_exit)
|           0x0800095d      31c0           xor eax, eax
|           0x0800095f      90             nop
|       .-> 0x08000960      4898           cdqe
|       :   0x08000962      488b3cc50000.  mov rdi, qword [rax*8]        ; RELOC 32
(reloc.device_unregister_107)
|       :   0x0800096a      e800000000     call 0x800096f                ; RELOC 32 device_unregister
(reloc.minor_113)
|       :      ; CALL XREF from 0x0800096a (sym.led_drv_exit)
|       :   0x0800096f      8b0500000000   mov eax, dword [0x08000975] ; [0x8000975:4]=0x8301c083  ; RELOC 32 minor
|       :      ; DATA XREF from 0x0800096f (sym.led_drv_exit)
|       :   0x08000975      83c001         add eax, 1
|       :   0x08000978      83f80b         cmp eax, 0xb                ; 11
(reloc.minor_125)
|       :   0x0800097b      890500000000   mov dword [0x08000981], eax ; [0x8000981:4]=0x8b48dd76  ; RELOC 32 minor
|       |      ; DATA XREF from 0x0800097b (sym.led_drv_exit)
|       `=< 0x08000981      76dd           jbe 0x8000960
|           0x08000983      488b3d000000.  mov rdi, qword [0x0800098a] ; [0x800098a:8]=0xe800000000c3c748  ; RELOC 32
(reloc.gpbcon_141)
|              ; DATA XREF from 0x08000983 (sym.led_drv_exit)
|           0x0800098a      48c7c3000000.  mov rbx, 0                    ; RELOC 32 gpbcon
(reloc.class_destroy_146)
|           0x08000991      e800000000     call 0x8000996                ; RELOC 32 class_destroy
|              ; CALL XREF from 0x08000991 (sym.led_drv_exit)
|           0x08000996      662e0f1f8400.  nop word cs:[rax + rax]
|       .-> 0x080009a0      488b3b         mov rdi, qword [rbx]
|       :   0x080009a3      488d5b08       lea rbx, qword [rbx + 8]    ; 8
(reloc.iounmap_168)
|       :   0x080009a7      e800000000     call 0x80009ac                ; RELOC 32 iounmap
(reloc.gpbcon_175)
|       :      ; CALL XREF from 0x080009a7 (sym.led_drv_exit)
|       :   0x080009ac      4881fb000000.  cmp rbx, 0                    ; RELOC 32 gpbcon
|       `=< 0x080009b3      75eb           jne 0x80009a0
|           0x080009b5      488d642408     lea rsp, qword [local_8h]   ; 8
|           0x080009ba      5b             pop rbx
|           0x080009bb      5d             pop rbp
\           0x080009bc      c3             ret
            ;-- str.led1on:
            ;-- section_end..text:
            ;-- section..rodata.str1.1:
            0x080009bd     .string "led1on" ; len=7                    ; [04] m-r-- section size 214 named .rodata.str1.1
            ;-- str.led1off:
            0x080009c4     .string "led1off" ; len=8
            ;-- str.led2on:
            0x080009cc     .string "led2on" ; len=7
            ;-- str.led2off:
            0x080009d3     .string "led2off" ; len=8
            ;-- str.led3on:
            0x080009db     .string "led3on" ; len=7
            ;-- str.led3off:
            0x080009e2     .string "led3off" ; len=8
            ;-- str.led4on:
            0x080009ea     .string "led4on" ; len=7
            ;-- str.led4off:
            0x080009f1     .string "led4off" ; len=8
            ;-- str.led5on:
            0x080009f9     .string "led5on" ; len=7
            ;-- str.led5off:
            0x08000a00     .string "led5off" ; len=8
            ;-- str.led6on:
            0x08000a08     .string "led6on" ; len=7
            ;-- str.led6off:
            0x08000a0f     .string "led6off" ; len=8
            ;-- str.led7on:
            0x08000a17     .string "led7on" ; len=7
            ;-- str.led7off:
            0x08000a1e     .string "led7off" ; len=8
            ;-- str.led8on:
            0x08000a26     .string "led8on" ; len=7
            ;-- str.led8off:
            0x08000a2d     .string "led8off" ; len=8
            ;-- str.led9on:
            0x08000a35     .string "led9on" ; len=7
            ;-- str.led9off:
            0x08000a3c     .string "led9off" ; len=8
            ;-- str.led10on:
            0x08000a44     .string "led10on" ; len=8
            ;-- str.led10off:
            0x08000a4c     .string "led10off" ; len=9
            ;-- str.led11on:
            0x08000a55     .string "led11on" ; len=8
            ;-- str.led11off:
            0x08000a5d     .string "led11off" ; len=9
            ;-- str.led12on:
            0x08000a66     .string "led12on" ; len=8
            ;-- str.led12off:
            0x08000a6e     .string "led12off" ; len=9
            ;-- str.led_drv:
            0x08000a77     .string "led_drv" ; len=8
            ;-- str.leddrv_drv:
            0x08000a7f     .string "leddrv_drv" ; len=11
            ;-- str.leddrv_d:
            0x08000a8a     .string "leddrv%d" ; len=9
            ;-- section_end..rodata.str1.1:
            ;-- section..modinfo:
            ;-- __UNIQUE_ID_license0:
            0x08000a93      6c             insb byte [rdi], dx         ; [05] m-r-- section size 52 named .modinfo
            0x08000a94      6963656e7365.  imul esp, dword [rbx + 0x65], 0x3d65736e
        |   0x08000a9b      4750           push r8
        |   0x08000a9d  ~   4c00646570     add byte [rbp + 0x70], r12b
        |   ;-- __module_depends:
       ,==< 0x08000a9f      64657065       jo 0x8000b08
       ||   0x08000aa3      6e             outsb dx, byte [rsi]
      ,===< 0x08000aa4      64733d         jae 0x8000ae4
      |||   0x08000aa7  ~   007665         add byte [rsi + 0x65], dh
      |||   ;-- __UNIQUE_ID_vermagic0:
      |||   0x08000aa8      7665           jbe 0x8000b0f
     ,====< 0x08000aaa      726d           jb 0x8000b19
     ||||   0x08000aac      61             invalid
     ||||   0x08000aad      6769633d342e.  imul esp, dword [ebx + 0x3d], 0x2e302e34
     ||||   0x08000ab5      3020           xor byte [rax], ah
     ||||   0x08000ab7      53             push rbx
     ||||   0x08000ab8      4d50           push r8
     ||||   0x08000aba      206d6f         and byte [rbp + 0x6f], ch
     ||||   0x08000abd      645f           pop rdi
    ,=====< 0x08000abf      756e           jne 0x8000b2f
    |||||   0x08000ac1      6c             insb byte [rdi], dx
    |||||   0x08000ac2      6f             outsd dx, dword [rsi]
    |||||   0x08000ac3      61             invalid
    |||||   0x08000ac4      642000         and byte fs:[rax], al
    |||||   ;-- section_end..modinfo:
    |||||   0x08000ac7      ff             invalid
    |||||   0x08000ac8      ff             invalid
    |||||   0x08000ac9      ff             invalid
    |||||   0x08000aca      ff             invalid
    |||||   0x08000acb      ff             invalid
    |||||   0x08000acc      ff             invalid
    |||||   0x08000acd      ff             invalid
    |||||   0x08000ace      ff             invalid
    |||||   0x08000acf      ff             invalid
    |||||   0x08000ad0      ff             invalid
    |||||   0x08000ad1      ff             invalid
    |||||   0x08000ad2      ff             invalid
    |||||   0x08000ad3      ff             invalid
    |||||   0x08000ad4      ff             invalid
[0x08000070]>

[0x08000070]> ax
                     reloc.gpbcon_54+132 0x80004ba ->  code jmp -> 0x80004f3 reloc.gpbcon_232+11
              reloc.ioremap_nocache_36+4 0x8000828 -> code call -> 0x8000823 reloc.minor_19+16
                      reloc.gpbcon_54+33 0x8000457 ->  data mem -> 0x8000450 reloc.gpbcon_54+26
              reloc.ioremap_nocache_58+4 0x800083e -> code call -> 0x8000839 reloc.gpbcon_53+4
              reloc.ioremap_nocache_22+4 0x800091a -> code call -> 0x8000915 reloc.gpbcon_17+4
                      reloc.gpbcon_101+4 0x8000669 ->  data mem -> 0x8000662 reloc.gpbcon_84+14
                       reloc.gpbcon_38+4 0x800032a ->  data mem -> 0x8000323 reloc.gpbcon_21+14
                      reloc.gpbcon_54+51 0x8000469 ->  data mem -> 0x8000462 reloc.gpbcon_54+44
                      reloc.gpbcon_163+4 0x80008a7 ->  data mem -> 0x80008a0 reloc.ioremap_nocache_146+14
                     reloc.gpbcon_222+11 0x80002e9 ->  code jmp -> 0x80006ba reloc.gpbcon_157+29
                      reloc.gpbcon_207+4 0x80008d3 ->  data mem -> 0x80008cc reloc.ioremap_nocache_190+14
                      reloc.gpbcon_185+4 0x80008bd ->  data mem -> 0x80008b6 reloc.ioremap_nocache_168+14
                      reloc.gpbcon_83+29 0x8000570 ->  code jmp -> 0x80005a9 reloc.gpbcon_158+11
                      reloc.strcmp_193+4 0x80002c5 -> code call -> 0x80002c0 reloc.strcmp_170+22
                      reloc.minor_193+22 0x80007d7 ->  code jmp -> 0x80007cc reloc.minor_193+11
                      reloc.gpbcon_38+14 0x8000334 ->  code jmp -> 0x80004ce reloc.gpbcon_54+152
                       reloc.minor_193+8 0x80007c9 ->  data mem -> 0x80007bf reloc.__class_create_180+11
                      reloc.strcmp_170+4 0x80002ae -> code call -> 0x80002a9 reloc.strcmp_147+22
                       reloc.major_175+4 0x80007b3 ->  data mem -> 0x80007ad reloc.__this_module_155+18
             reloc.__class_create_180+11 0x80007bf ->  data mem -> 0x80007b8 reloc.__class_create_180+4
                     reloc.gpbcon_211+22 0x80003e9 ->  data mem -> 0x80003e2 reloc.gpbcon_211+15
               reloc.ioremap_nocache_0+4 0x8000904 -> code call -> 0x80008ff reloc.gpbcon_251+4
                     reloc.gpbcon_54+125 0x80004b3 ->  data mem -> 0x80004ac reloc.gpbcon_54+118
             reloc.ioremap_nocache_212+4 0x80008d8 -> code call -> 0x80008d3 reloc.gpbcon_207+4
                     reloc.gpbcon_157+22 0x80006b3 ->  data mem -> 0x80006ac reloc.gpbcon_157+15
                      reloc.gpbcon_209+4 0x80005d5 ->  data mem -> 0x80005ce reloc.gpbcon_192+14
                      reloc.gpbcon_211+4 0x80003d7 ->  data mem -> 0x80003d0 reloc.gpbcon_189+19
                       reloc.major_217+4 0x80007dd ->  data mem -> 0x80007d7 reloc.minor_193+22
                      reloc.minor_193+22 0x80007d7 ->  data mem -> 0x80007d0 reloc.minor_193+15
             reloc.ioremap_nocache_234+4 0x80008ee -> code call -> 0x80008e9 reloc.gpbcon_229+4
                      reloc.gpbcon_192+4 0x80005c4 ->  data mem -> 0x80005bd reloc.gpbcon_174+15
                     reloc.gpbcon_54+142 0x80004c4 ->  data mem -> 0x80004bd reloc.gpbcon_54+135
                      reloc.gpbcon_246+4 0x80003fa ->  data mem -> 0x80003f3 reloc.gpbcon_211+32
                      reloc.strcmp_101+4 0x8000269 -> code call -> 0x8000264 reloc.strcmp_78+22
                      reloc.gpbcon_171+4 0x80003af ->  data mem -> 0x80003a8 reloc.gpbcon_142+26
             reloc.ioremap_nocache_190+4 0x80008c2 -> code call -> 0x80008bd reloc.gpbcon_185+4
                      reloc.gpbcon_38+14 0x8000334 ->  code jmp -> 0x8000444 reloc.gpbcon_54+14
                       reloc.strcmp_78+4 0x8000252 -> code call -> 0x800024d reloc.strcmp_55+22
                      reloc.gpbcon_239+4 0x80002f3 ->  data mem -> 0x80002ec reloc.gpbcon_222+14
             reloc.ioremap_nocache_168+4 0x80008ac -> code call -> 0x80008a7 reloc.gpbcon_163+4
                      reloc.gpbcon_194+4 0x80006c6 ->  data mem -> 0x80006bf reloc.gpbcon_157+34
                      reloc.gpbcon_189+4 0x80003c1 ->  data mem -> 0x80003ba reloc.gpbcon_171+15
                       reloc.minor_125+4 0x8000981 ->  data mem -> 0x800097b reloc.minor_113+10
                      reloc.gpbcon_10+11 0x8000515 ->  code jmp -> 0x800054e reloc.gpbcon_67+11
                      reloc.gpbcon_232+4 0x80004ec ->  data mem -> 0x80004e5 reloc.gpbcon_214+15
                     reloc.gpbcon_212+21 0x80006e9 ->  data mem -> 0x80006e2 reloc.gpbcon_212+14
                        reloc.minor_85+8 0x800095d ->  data mem -> 0x8000953 reloc.__unregister_chrdev_79+4
                      reloc.gpbcon_119+4 0x800087b ->  data mem -> 0x8000874 reloc.ioremap_nocache_102+14
                      reloc.gpbcon_21+11 0x8000320 ->  code jmp -> 0x8000360 reloc.gpbcon_85+11
                      reloc.gpbcon_174+4 0x80005b2 ->  data mem -> 0x80005ab reloc.gpbcon_158+13
                       reloc.minor_113+4 0x8000975 ->  data mem -> 0x800096f reloc.device_unregister_107+4
                      reloc.gpbcon_248+4 0x80004fc ->  data mem -> 0x80004f5 reloc.gpbcon_232+13
                      reloc.gpbcon_249+4 0x80005fd ->  data mem -> 0x80005f6 reloc.gpbcon_231+15
                      reloc.strcmp_124+4 0x8000280 -> code call -> 0x800027b reloc.strcmp_101+22
                     reloc.iounmap_168+4 0x80009ac -> code call -> 0x80009a7 reloc.class_destroy_146+21
                        reloc.major_74+4 0x800094e ->  data mem -> 0x8000948 sym.led_drv_exit+24
                      reloc.gpbcon_158+4 0x80005a2 ->  data mem -> 0x800059b reloc.gpbcon_140+15
                       reloc.gpbcon_29+4 0x8000921 ->  data mem -> 0x800091a reloc.ioremap_nocache_22+4
                      reloc.gpbcon_231+4 0x80005eb ->  data mem -> 0x80005e4 reloc.gpbcon_209+19
                      reloc.gpbcon_38+14 0x8000334 ->  code jmp -> 0x8000404 reloc.gpbcon_246+14
                     reloc.gpbcon_123+22 0x8000691 ->  data mem -> 0x800068a reloc.gpbcon_123+15
                       reloc.strcmp_55+4 0x800023b -> code call -> 0x8000236 reloc.strcmp_32+22
                       reloc.gpbcon_17+4 0x8000915 ->  data mem -> 0x800090e reloc.ioremap_nocache_0+14
                      reloc.gpbcon_84+11 0x800065f ->  code jmp -> 0x800073a reloc.gpbcon_47+11
                      reloc.gpbcon_212+4 0x80006d8 ->  data mem -> 0x80006d1 reloc.gpbcon_194+15
                      reloc.gpbcon_214+4 0x80004da ->  data mem -> 0x80004d3 reloc.gpbcon_54+157
                       reloc.strcmp_32+4 0x8000224 -> code call -> 0x800021f reloc.strcmp_9+22
                      reloc.gpbcon_38+14 0x8000334 ->  code jmp -> 0x8000673 reloc.gpbcon_101+14
                     reloc.gpbcon_211+29 0x80003f0 ->  code jmp -> 0x8000470 reloc.gpbcon_54+58
                      reloc.gpbcon_157+4 0x80006a1 ->  data mem -> 0x800069a reloc.gpbcon_123+31
                       reloc.gpbcon_97+4 0x8000865 ->  data mem -> 0x800085e reloc.ioremap_nocache_80+14
                        reloc.strcmp_9+4 0x800020d -> code call -> 0x8000208 reloc._copy_from_user_161+359
                       reloc.gpbcon_53+4 0x8000839 ->  data mem -> 0x8000832 reloc.ioremap_nocache_36+14
                      reloc.gpbcon_38+14 0x8000334 ->  code jmp -> 0x8000529 reloc.gpbcon_10+31
                     reloc.gpbcon_212+43 0x80006ff ->  data mem -> 0x80006f8 reloc.gpbcon_212+36
                       reloc.gpbcon_75+4 0x800084f ->  data mem -> 0x8000848 reloc.ioremap_nocache_58+14
                      reloc.gpbcon_222+4 0x80002e2 ->  data mem -> 0x80002db reloc.gpbcon_204+15
                      reloc.gpbcon_140+4 0x8000590 ->  data mem -> 0x8000589 reloc.gpbcon_118+19
                      reloc.gpbcon_204+4 0x80002d0 ->  data mem -> 0x80002c9 reloc.strcmp_193+8
                      reloc.gpbcon_13+20 0x8000721 ->  data mem -> 0x800071a reloc.gpbcon_13+13
                     reloc.gpbcon_192+11 0x80005cb ->  code jmp -> 0x8000604 reloc.gpbcon_249+11
                        reloc.minor_19+4 0x8000817 ->  data mem -> 0x8000811 reloc.minor_5+12
                      reloc.gpbcon_54+91 0x8000491 ->  data mem -> 0x800048a reloc.gpbcon_54+84
                      reloc.gpbcon_142+4 0x8000392 ->  data mem -> 0x800038b reloc.gpbcon_125+14
           reloc.__register_chrdev_148+4 0x8000798 -> code call -> 0x8000793 reloc.gpbcon_94+53
                       reloc.gpbcon_13+4 0x8000711 ->  data mem -> 0x800070a reloc.gpbcon_212+54
                     reloc.gpbcon_212+11 0x80006df ->  code jmp -> 0x8000718 reloc.gpbcon_13+11
                     reloc.gpbcon_54+107 0x80004a1 ->  data mem -> 0x800049a reloc.gpbcon_54+100
                      reloc.gpbcon_38+14 0x8000334 ->  code jmp -> 0x800063a reloc.gpbcon_44+14
             reloc.ioremap_nocache_146+4 0x8000896 -> code call -> 0x8000891 reloc.ioremap_nocache_124+21
                         reloc.minor_5+4 0x8000809 ->  data mem -> 0x8000803 reloc.device_create_244+15
                       reloc.gpbcon_66+4 0x8000646 ->  data mem -> 0x800063f reloc.gpbcon_44+19
                       reloc.gpbcon_27+4 0x800061f ->  data mem -> 0x8000618 reloc.gpbcon_9+15
                      reloc.gpbcon_38+14 0x8000334 ->  code jmp -> 0x8000584 reloc.gpbcon_118+14
          reloc.__unregister_chrdev_79+4 0x8000953 -> code call -> 0x800094e reloc.major_74+4
              reloc.ioremap_nocache_80+4 0x8000854 -> code call -> 0x800084f reloc.gpbcon_75+4
               reloc.class_destroy_146+4 0x8000996 -> code call -> 0x8000991 reloc.gpbcon_141+4
                     reloc.gpbcon_125+11 0x8000388 ->  code jmp -> 0x80003c8 reloc.gpbcon_189+11
              reloc.__class_create_180+4 0x80007b8 -> code call -> 0x80007b3 reloc.major_175+4
                      reloc.gpbcon_10+21 0x800051f ->  data mem -> 0x8000518 reloc.gpbcon_10+14
                       reloc.gpbcon_54+4 0x800043a ->  data mem -> 0x8000433 reloc.gpbcon_37+14
                       reloc.gpbcon_85+4 0x8000359 ->  data mem -> 0x8000352 reloc.gpbcon_38+44
                       reloc.gpbcon_47+4 0x8000733 ->  data mem -> 0x800072c reloc.gpbcon_13+31
                      reloc.strcmp_147+4 0x8000297 -> code call -> 0x8000292 reloc.strcmp_124+22
                       reloc.gpbcon_49+4 0x8000535 ->  data mem -> 0x800052e reloc.gpbcon_10+36
                      reloc.gpbcon_37+11 0x8000430 ->  code jmp -> 0x8000498 reloc.gpbcon_54+98
                      reloc.gpbcon_38+33 0x8000347 ->  data mem -> 0x8000340 reloc.gpbcon_38+26
                      reloc.minor_125+13 0x800098a ->  data mem -> 0x8000983 reloc.minor_125+6
                       reloc.gpbcon_10+4 0x800050e ->  data mem -> 0x8000507 reloc.gpbcon_248+15
                        reloc.gpbcon_9+4 0x800060d ->  data mem -> 0x8000606 reloc.gpbcon_249+13
                      reloc.gpbcon_38+14 0x8000334 ->  code jmp -> 0x80006f3 reloc.gpbcon_212+31
             reloc.ioremap_nocache_102+4 0x800086a -> code call -> 0x8000865 reloc.gpbcon_97+4
                      reloc.gpbcon_38+14 0x8000334 ->  code jmp -> 0x80005df reloc.gpbcon_209+14
                       reloc.gpbcon_19+4 0x8000417 ->  data mem -> 0x8000410 reloc.gpbcon_246+26
                       reloc.gpbcon_84+4 0x8000658 ->  data mem -> 0x8000651 reloc.gpbcon_66+15
                      reloc.gpbcon_118+4 0x800057a ->  data mem -> 0x8000573 reloc.gpbcon_83+32
            reloc.ioremap_nocache_124+21 0x8000891 ->  data mem -> 0x800088a reloc.ioremap_nocache_124+14
                       reloc.gpbcon_44+4 0x8000630 ->  data mem -> 0x8000629 reloc.gpbcon_27+14
                      reloc.gpbcon_107+4 0x800036f ->  data mem -> 0x8000368 reloc.gpbcon_85+19
             reloc._copy_from_user_161+4 0x80000a5 -> code call -> 0x80000a0 sym.led_drv_write+32
                       reloc.gpbcon_37+4 0x8000429 ->  data mem -> 0x8000422 reloc.gpbcon_19+15
                      reloc.gpbcon_83+22 0x8000569 ->  data mem -> 0x8000562 reloc.gpbcon_83+15
                      reloc.gpbcon_229+4 0x80008e9 ->  data mem -> 0x80008e2 reloc.ioremap_nocache_212+14
                      reloc.gpbcon_125+4 0x8000381 ->  data mem -> 0x800037a reloc.gpbcon_107+15
                      reloc.gpbcon_38+14 0x8000334 ->  code jmp -> 0x80002fd reloc.gpbcon_239+14
                      reloc.gpbcon_54+73 0x800047f ->  data mem -> 0x8000478 reloc.gpbcon_54+66
                      reloc.gpbcon_123+4 0x800067f ->  data mem -> 0x8000678 reloc.gpbcon_101+19
               reloc.device_create_244+4 0x80007f8 -> code call -> 0x80007f3 reloc.major_217+26
           reloc.device_unregister_107+4 0x800096f -> code call -> 0x800096a reloc.minor_85+21
                       reloc.gpbcon_83+4 0x8000557 ->  data mem -> 0x8000550 reloc.gpbcon_67+13
                       reloc.gpbcon_21+4 0x8000319 ->  data mem -> 0x8000312 reloc.gpbcon_3+15
                      reloc.gpbcon_251+4 0x80008ff ->  data mem -> 0x80008f8 reloc.ioremap_nocache_234+14
                      reloc.gpbcon_27+11 0x8000626 ->  code jmp -> 0x8000698 reloc.gpbcon_123+29
             reloc.ioremap_nocache_124+4 0x8000880 -> code call -> 0x800087b reloc.gpbcon_119+4
                        reloc.gpbcon_3+4 0x8000307 ->  data mem -> 0x8000300 reloc.gpbcon_239+17
                       reloc.gpbcon_67+4 0x8000547 ->  data mem -> 0x8000540 reloc.gpbcon_49+15
[0x08000070]>
$ r2 -e io.cache=true led_drv.ko
Warning: Cannot initialize program headers
Warning: Cannot initialize dynamic strings
Warning: Cannot initialize dynamic section
[0x08000070]> pd 800
Do you want to print 852 lines? (y/N)

            ;-- entry0:
            ;-- section..text:
            ;-- led_drv_open:
            ;-- rip:
            0x08000070      55             push rbp                    ; [02] m-r-x section size 2381 named .text
            0x08000071      31c0           xor eax, eax
            0x08000073      4889e5         mov rbp, rsp
            0x08000076      5d             pop rbp
            0x08000077      c3             ret
            0x08000078      0f1f84000000.  nop dword [rax + rax]

            ;-- led_drv_write:
            0x08000080      55             push rbp
            0x08000081      4889e5         mov rbp, rsp
            0x08000084      53             push rbx
            0x08000085      488d6424e8     lea rsp, qword [rsp - 0x18]
            0x0800008a      488d5de4       lea rbx, qword [rbp - 0x1c]
            0x0800008e      488d3b         lea rdi, qword [rbx]
            0x08000091      48c745e40000.  mov qword [rbp - 0x1c], 0
            0x08000099      c745ec000000.  mov dword [rbp - 0x14], 0
            0x080000a0      e822260000     call reloc._copy_from_user_199
            0x080000a5      b907000000     mov ecx, 7
            0x080000aa      48c7c7cb2600.  mov rdi, 0x80026cb
            0x080000b1      488d33         lea rsi, qword [rbx]
            0x080000b4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
        ,=< 0x080000b6      0f8484020000   je 0x8000340
        |   0x080000bc      b908000000     mov ecx, 8
        |   0x080000c1      48c7c7d62600.  mov rdi, 0x80026d6
        |   0x080000c8      488d33         lea rsi, qword [rbx]
        |   0x080000cb      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
       ,==< 0x080000cd      0f842d020000   je 0x8000300
       ||   0x080000d3      b907000000     mov ecx, 7
       ||   0x080000d8      48c7c7e22600.  mov rdi, 0x80026e2
       ||   0x080000df      488d33         lea rsi, qword [rbx]
       ||   0x080000e2      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
      ,===< 0x080000e4      0f84be020000   je 0x80003a8
      |||   0x080000ea      b908000000     mov ecx, 8
      |||   0x080000ef      48c7c7ed2600.  mov rdi, 0x80026ed
      |||   0x080000f6      488d33         lea rsi, qword [rbx]
      |||   0x080000f9      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
     ,====< 0x080000fb      0f8467020000   je 0x8000368
     ||||   0x08000101      b907000000     mov ecx, 7
     ||||   0x08000106      48c7c7f92600.  mov rdi, 0x80026f9
     ||||   0x0800010d      488d33         lea rsi, qword [rbx]
     ||||   0x08000110      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
    ,=====< 0x08000112      0f84b8020000   je 0x80003d0
    |||||   0x08000118      b908000000     mov ecx, 8
    |||||   0x0800011d      48c7c7042700.  mov rdi, 0x8002704
    |||||   0x08000124      488d33         lea rsi, qword [rbx]
    |||||   0x08000127      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
   ,======< 0x08000129      0f8421030000   je 0x8000450
   ||||||   0x0800012f      b907000000     mov ecx, 7
   ||||||   0x08000134      48c7c7102700.  mov rdi, 0x8002710
   ||||||   0x0800013b      488d33         lea rsi, qword [rbx]
   ||||||   0x0800013e      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ,=======< 0x08000140      0f84ca020000   je 0x8000410
  |||||||   0x08000146      b908000000     mov ecx, 8
  |||||||   0x0800014b      48c7c71b2700.  mov rdi, reloc.strcmp_27    ; 0x800271b
  |||||||   0x08000152      488d33         lea rsi, qword [rbx]
  |||||||   0x08000155      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x08000157      0f841b030000   je 0x8000478
  |||||||   0x0800015d      b907000000     mov ecx, 7
  |||||||   0x08000162      48c7c7272700.  mov rdi, 0x8002727
  |||||||   0x08000169      488d33         lea rsi, qword [rbx]
  |||||||   0x0800016c      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x0800016e      0f8426030000   je 0x800049a
  |||||||   0x08000174      b908000000     mov ecx, 8
  |||||||   0x08000179      48c7c7322700.  mov rdi, 0x8002732
  |||||||   0x08000180      488d33         lea rsi, qword [rbx]
  |||||||   0x08000183      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x08000185      0f8448030000   je 0x80004d3
  |||||||   0x0800018b      b907000000     mov ecx, 7
  |||||||   0x08000190      48c7c73e2700.  mov rdi, 0x800273e
  |||||||   0x08000197      488d33         lea rsi, qword [rbx]
  |||||||   0x0800019a      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x0800019c      0f8453030000   je 0x80004f5
  |||||||   0x080001a2      b908000000     mov ecx, 8
  |||||||   0x080001a7      48c7c7492700.  mov rdi, 0x8002749
  |||||||   0x080001ae      488d33         lea rsi, qword [rbx]
  |||||||   0x080001b1      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x080001b3      0f8475030000   je 0x800052e
  |||||||   0x080001b9      b907000000     mov ecx, 7
  |||||||   0x080001be      48c7c7552700.  mov rdi, 0x8002755
  |||||||   0x080001c5      488d33         lea rsi, qword [rbx]
  |||||||   0x080001c8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x080001ca      0f8480030000   je 0x8000550
  |||||||   0x080001d0      b908000000     mov ecx, 8
  |||||||   0x080001d5      48c7c7602700.  mov rdi, 0x8002760
  |||||||   0x080001dc      488d33         lea rsi, qword [rbx]
  |||||||   0x080001df      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x080001e1      0f84a2030000   je 0x8000589
  |||||||   0x080001e7      b907000000     mov ecx, 7
  |||||||   0x080001ec      48c7c76c2700.  mov rdi, 0x800276c
  |||||||   0x080001f3      488d33         lea rsi, qword [rbx]
  |||||||   0x080001f6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi] ; [0x2700000000:1]=255 ; 167503724544
  ========< 0x080001f8      0f84ad030000   je 0x80005ab
  |||||||   0x080001fe      48c7c6772700.  mov rsi, reloc.device_create_119 ; 0x8002777
  |||||||   0x08000205      488d3b         lea rdi, qword [rbx]
  |||||||   0x08000208      e8fe240000     call reloc.strcmp_11
  |||||||   0x0800020d      85c0           test eax, eax
  ========< 0x0800020f      0f84cf030000   je 0x80005e4
  |||||||   0x08000215      48c7c6872700.  mov rsi, reloc.ioremap_nocache_135 ; 0x8002787
  |||||||   0x0800021c      488d3b         lea rdi, qword [rbx]
  |||||||   0x0800021f      e8ef240000     call reloc.strcmp_19
  |||||||   0x08000224      85c0           test eax, eax
  ========< 0x08000226      0f84da030000   je 0x8000606
  |||||||   0x0800022c      48c7c6962700.  mov rsi, 0x8002796
  |||||||   0x08000233      488d3b         lea rdi, qword [rbx]
  |||||||   0x08000236      e8e0240000     call reloc.strcmp_27
  |||||||   0x0800023b      85c0           test eax, eax
  ========< 0x0800023d      0f8435040000   je 0x8000678
  |||||||   0x08000243      48c7c6a62700.  mov rsi, 0x80027a6
  |||||||   0x0800024a      488d3b         lea rdi, qword [rbx]
  |||||||   0x0800024d      e8d1240000     call reloc.strcmp_35
  |||||||   0x08000252      85c0           test eax, eax
  ========< 0x08000254      0f84e5030000   je 0x800063f
  |||||||   0x0800025a      48c7c6b62700.  mov rsi, 0x80027b6
  |||||||   0x08000261      488d3b         lea rdi, qword [rbx]
  |||||||   0x08000264      e8c2240000     call reloc.strcmp_43
  |||||||   0x08000269      85c0           test eax, eax
  ========< 0x0800026b      0f84a9040000   je 0x800071a
  |||||||   0x08000271      48c7c6c72700.  mov rsi, reloc.iounmap_199  ; 0x80027c7
  |||||||   0x08000278      488d3b         lea rdi, qword [rbx]
  |||||||   0x0800027b      e8b3240000     call reloc.strcmp_51
  |||||||   0x08000280      85c0           test eax, eax
  ========< 0x08000282      0f8470040000   je 0x80006f8
  |||||||   0x08000288      48c7c6d72700.  mov rsi, 0x80027d7
  |||||||   0x0800028f      488d3b         lea rdi, qword [rbx]
  |||||||   0x08000292      e8a4240000     call reloc.strcmp_59
  |||||||   0x08000297      85c0           test eax, eax
  ========< 0x08000299      0f8420040000   je 0x80006bf
  |||||||   0x0800029f      48c7c6e82700.  mov rsi, 0x80027e8
  |||||||   0x080002a6      488d3b         lea rdi, qword [rbx]
  |||||||   0x080002a9      e895240000     call reloc.strcmp_67
  |||||||   0x080002ae      85c0           test eax, eax
  ========< 0x080002b0      0f84e4030000   je 0x800069a
  |||||||   0x080002b6      48c7c6f82700.  mov rsi, 0x80027f8
  |||||||   0x080002bd      488d3b         lea rdi, qword [rbx]
  |||||||   0x080002c0      e886240000     call reloc.strcmp_75
  |||||||   0x080002c5      85c0           test eax, eax
  ========< 0x080002c7      756b           jne 0x8000334
  |||||||   0x080002c9      488b15a80b00.  mov rdx, qword [0x08000e78] ; [0x8000e78:8]=-1
  |||||||   0x080002d0      488b02         mov rax, qword [rdx]
  |||||||   0x080002d3      2501111111     and eax, 0x11111101
  |||||||   0x080002d8      488902         mov qword [rdx], rax
  |||||||   0x080002db      488b15960b00.  mov rdx, qword [0x08000e78] ; [0x8000e78:8]=-1
  |||||||   0x080002e2      488b02         mov rax, qword [rdx]
  |||||||   0x080002e5      4883c801       or rax, 1
  --------> 0x080002e9      488902         mov qword [rdx], rax
  |||||||   0x080002ec      488b15850b00.  mov rdx, qword [0x08000e78] ; [0x8000e78:8]=-1
  |||||||   0x080002f3      488b02         mov rax, qword [rdx]
  |||||||   0x080002f6      4883c810       or rax, 0x10
  |||||||   0x080002fa      488902         mov qword [rdx], rax
  ========< 0x080002fd      eb35           jmp 0x8000334
  |||||||   0x080002ff      90             nop
  |||||`--> 0x08000300      488b15190b00.  mov rdx, qword [obj.gpbcon] ; [0x8000e20:8]=0
  ||||| |   0x08000307      488b02         mov rax, qword [rdx]
  ||||| |   0x0800030a      2501111111     and eax, 0x11111101
  ||||| |   0x0800030f      488902         mov qword [rdx], rax
  ||||| |   0x08000312      488b15070b00.  mov rdx, qword [obj.gpbcon] ; [0x8000e20:8]=0
  ||||| |   0x08000319      488b02         mov rax, qword [rdx]
  ||||| |   0x0800031c      4883c801       or rax, 1
  |||||.--> 0x08000320      488902         mov qword [rdx], rax
  |||||:|   0x08000323      488b15f60a00.  mov rdx, qword [obj.gpbcon] ; [0x8000e20:8]=0
  |||||:|   0x0800032a      488b02         mov rax, qword [rdx]
  |||||:|   0x0800032d      4883c810       or rax, 0x10
  |||||:|   0x08000331      488902         mov qword [rdx], rax
  --------> 0x08000334      488d642418     lea rsp, qword [rsp + 0x18] ; 24
  |||||:|   0x08000339      31c0           xor eax, eax
  |||||:|   0x0800033b      5b             pop rbx
  |||||:|   0x0800033c      5d             pop rbp
  |||||:|   0x0800033d      c3             ret
  |||||:|   0x0800033e      6690           nop
  |||||:`-> 0x08000340      488b15d90a00.  mov rdx, qword [obj.gpbcon] ; [0x8000e20:8]=0
  |||||:    0x08000347      488b02         mov rax, qword [rdx]
  |||||:    0x0800034a      2501111111     and eax, 0x11111101
  |||||:    0x0800034f      488902         mov qword [rdx], rax
  |||||:    0x08000352      488b15c70a00.  mov rdx, qword [obj.gpbcon] ; [0x8000e20:8]=0
  |||||:    0x08000359      488b02         mov rax, qword [rdx]
  |||||:    0x0800035c      4883e0fe       and rax, 0xfffffffffffffffe
  |||||`==< 0x08000360      ebbe           jmp 0x8000320
  |||||     0x08000362      660f1f440000   nop word [rax + rax]
  |||`----> 0x08000368      488b15b90a00.  mov rdx, qword [0x08000e28] ; [0x8000e28:8]=0
  ||| |     0x0800036f      488b02         mov rax, qword [rdx]
  ||| |     0x08000372      2501111111     and eax, 0x11111101
  ||| |     0x08000377      488902         mov qword [rdx], rax
  ||| |     0x0800037a      488b15a70a00.  mov rdx, qword [0x08000e28] ; [0x8000e28:8]=0
  ||| |     0x08000381      488b02         mov rax, qword [rdx]
  ||| |     0x08000384      4883e0fe       and rax, 0xfffffffffffffffe
  ||| | .-> 0x08000388      488902         mov qword [rdx], rax
  ||| | :   0x0800038b      488b15960a00.  mov rdx, qword [0x08000e28] ; [0x8000e28:8]=0
  ||| | :   0x08000392      488b02         mov rax, qword [rdx]
  ||| | :   0x08000395      4883c810       or rax, 0x10
  ||| | :   0x08000399      488902         mov qword [rdx], rax
  ||| | :   0x0800039c      488d642418     lea rsp, qword [rsp + 0x18] ; 24
  ||| | :   0x080003a1      31c0           xor eax, eax
  ||| | :   0x080003a3      5b             pop rbx
  ||| | :   0x080003a4      5d             pop rbp
  ||| | :   0x080003a5      c3             ret
  ||| | :   0x080003a6      6690           nop
  ||| `---> 0x080003a8      488b15790a00.  mov rdx, qword [0x08000e28] ; [0x8000e28:8]=0
  |||   :   0x080003af      488b02         mov rax, qword [rdx]
  |||   :   0x080003b2      2501111111     and eax, 0x11111101
  |||   :   0x080003b7      488902         mov qword [rdx], rax
  |||   :   0x080003ba      488b15670a00.  mov rdx, qword [0x08000e28] ; [0x8000e28:8]=0
  |||   :   0x080003c1      488b02         mov rax, qword [rdx]
  |||   :   0x080003c4      4883c801       or rax, 1
  |||   `=< 0x080003c8      ebbe           jmp 0x8000388
  |||       0x080003ca      660f1f440000   nop word [rax + rax]
  ||`-----> 0x080003d0      488b15590a00.  mov rdx, qword [0x08000e30] ; [0x8000e30:8]=0
  ||        0x080003d7      488b02         mov rax, qword [rdx]
  ||        0x080003da      2501111111     and eax, 0x11111101
  ||        0x080003df      488902         mov qword [rdx], rax
  ||        0x080003e2      488b15470a00.  mov rdx, qword [0x08000e30] ; [0x8000e30:8]=0
  ||        0x080003e9      488b02         mov rax, qword [rdx]
  ||        0x080003ec      4883e0fe       and rax, 0xfffffffffffffffe
  ||    .-> 0x080003f0      488902         mov qword [rdx], rax
  ||    :   0x080003f3      488b15360a00.  mov rdx, qword [0x08000e30] ; [0x8000e30:8]=0
  ||    :   0x080003fa      488b02         mov rax, qword [rdx]
  ||    :   0x080003fd      4883c810       or rax, 0x10
  ||    :   0x08000401      488902         mov qword [rdx], rax
  ========< 0x08000404      e92bffffff     jmp 0x8000334
  ||    :   0x08000409      0f1f80000000.  nop dword [rax]
  `-------> 0x08000410      488b15210a00.  mov rdx, qword [0x08000e38] ; [0x8000e38:8]=0
   |    :   0x08000417      488b02         mov rax, qword [rdx]
   |    :   0x0800041a      2501111111     and eax, 0x11111101
   |    :   0x0800041f      488902         mov qword [rdx], rax
   |    :   0x08000422      488b150f0a00.  mov rdx, qword [0x08000e38] ; [0x8000e38:8]=0
   |    :   0x08000429      488b02         mov rax, qword [rdx]
   |    :   0x0800042c      4883c801       or rax, 1
   |   .--> 0x08000430      488902         mov qword [rdx], rax
   |   ::   0x08000433      488b15fe0900.  mov rdx, qword [0x08000e38] ; [0x8000e38:8]=0
   |   ::   0x0800043a      488b02         mov rax, qword [rdx]
   |   ::   0x0800043d      4883c810       or rax, 0x10
   |   ::   0x08000441      488902         mov qword [rdx], rax
  ========< 0x08000444      e9ebfeffff     jmp 0x8000334
   |   ::   0x08000449      0f1f80000000.  nop dword [rax]
   `------> 0x08000450      488b15d90900.  mov rdx, qword [0x08000e30] ; [0x8000e30:8]=0
       ::   0x08000457      488b02         mov rax, qword [rdx]
       ::   0x0800045a      2501111111     and eax, 0x11111101
       ::   0x0800045f      488902         mov qword [rdx], rax
       ::   0x08000462      488b15c70900.  mov rdx, qword [0x08000e30] ; [0x8000e30:8]=0
       ::   0x08000469      488b02         mov rax, qword [rdx]
       ::   0x0800046c      4883c801       or rax, 1
       :`=< 0x08000470      e97bffffff     jmp 0x80003f0
       :    0x08000475      0f1f00         nop dword [rax]
  --------> 0x08000478      488b15b90900.  mov rdx, qword [0x08000e38] ; [0x8000e38:8]=0
       :    0x0800047f      488b02         mov rax, qword [rdx]
       :    0x08000482      2501111111     and eax, 0x11111101
       :    0x08000487      488902         mov qword [rdx], rax
       :    0x0800048a      488b15a70900.  mov rdx, qword [0x08000e38] ; [0x8000e38:8]=0
       :    0x08000491      488b02         mov rax, qword [rdx]
       :    0x08000494      4883e0fe       and rax, 0xfffffffffffffffe
       `==< 0x08000498      eb96           jmp 0x8000430
  --------> 0x0800049a      488b159f0900.  mov rdx, qword [0x08000e40] ; [0x8000e40:8]=0
            0x080004a1      488b02         mov rax, qword [rdx]
            0x080004a4      2501111111     and eax, 0x11111101
            0x080004a9      488902         mov qword [rdx], rax
            0x080004ac      488b158d0900.  mov rdx, qword [0x08000e40] ; [0x8000e40:8]=0
            0x080004b3      488b02         mov rax, qword [rdx]
            0x080004b6      4883e0fe       and rax, 0xfffffffffffffffe
        .-> 0x080004ba      488902         mov qword [rdx], rax
        :   0x080004bd      488b157c0900.  mov rdx, qword [0x08000e40] ; [0x8000e40:8]=0
        :   0x080004c4      488b02         mov rax, qword [rdx]
        :   0x080004c7      4883c810       or rax, 0x10
        :   0x080004cb      488902         mov qword [rdx], rax
  ========< 0x080004ce      e961feffff     jmp 0x8000334
  --------> 0x080004d3      488b15660900.  mov rdx, qword [0x08000e40] ; [0x8000e40:8]=0
        :   0x080004da      488b02         mov rax, qword [rdx]
        :   0x080004dd      2501111111     and eax, 0x11111101
        :   0x080004e2      488902         mov qword [rdx], rax
        :   0x080004e5      488b15540900.  mov rdx, qword [0x08000e40] ; [0x8000e40:8]=0
        :   0x080004ec      488b02         mov rax, qword [rdx]
        :   0x080004ef      4883c801       or rax, 1
        `=< 0x080004f3      ebc5           jmp 0x80004ba
  --------> 0x080004f5      488b154c0900.  mov rdx, qword [0x08000e48] ; [0x8000e48:8]=0
            0x080004fc      488b02         mov rax, qword [rdx]
            0x080004ff      2501111111     and eax, 0x11111101
            0x08000504      488902         mov qword [rdx], rax
            0x08000507      488b153a0900.  mov rdx, qword [0x08000e48] ; [0x8000e48:8]=0
            0x0800050e      488b02         mov rax, qword [rdx]
            0x08000511      4883c801       or rax, 1
        .-> 0x08000515      488902         mov qword [rdx], rax
        :   0x08000518      488b15290900.  mov rdx, qword [0x08000e48] ; [0x8000e48:8]=0
        :   0x0800051f      488b02         mov rax, qword [rdx]
        :   0x08000522      4883c810       or rax, 0x10
        :   0x08000526      488902         mov qword [rdx], rax
  ========< 0x08000529      e906feffff     jmp 0x8000334
  --------> 0x0800052e      488b15130900.  mov rdx, qword [0x08000e48] ; [0x8000e48:8]=0
        :   0x08000535      488b02         mov rax, qword [rdx]
        :   0x08000538      2501111111     and eax, 0x11111101
        :   0x0800053d      488902         mov qword [rdx], rax
        :   0x08000540      488b15010900.  mov rdx, qword [0x08000e48] ; [0x8000e48:8]=0
        :   0x08000547      488b02         mov rax, qword [rdx]
        :   0x0800054a      4883e0fe       and rax, 0xfffffffffffffffe
        `=< 0x0800054e      ebc5           jmp 0x8000515
  --------> 0x08000550      488b15f90800.  mov rdx, qword [0x08000e50] ; [0x8000e50:8]=0xffffffff00000000
            0x08000557      488b02         mov rax, qword [rdx]
            0x0800055a      2501111111     and eax, 0x11111101
            0x0800055f      488902         mov qword [rdx], rax
            0x08000562      488b15e70800.  mov rdx, qword [0x08000e50] ; [0x8000e50:8]=0xffffffff00000000
            0x08000569      488b02         mov rax, qword [rdx]
            0x0800056c      4883e0fe       and rax, 0xfffffffffffffffe
        .-> 0x08000570      488902         mov qword [rdx], rax
        :   0x08000573      488b15d60800.  mov rdx, qword [0x08000e50] ; [0x8000e50:8]=0xffffffff00000000
        :   0x0800057a      488b02         mov rax, qword [rdx]
        :   0x0800057d      4883c810       or rax, 0x10
        :   0x08000581      488902         mov qword [rdx], rax
  ========< 0x08000584      e9abfdffff     jmp 0x8000334
  --------> 0x08000589      488b15c00800.  mov rdx, qword [0x08000e50] ; [0x8000e50:8]=0xffffffff00000000
        :   0x08000590      488b02         mov rax, qword [rdx]
        :   0x08000593      2501111111     and eax, 0x11111101
        :   0x08000598      488902         mov qword [rdx], rax
        :   0x0800059b      488b15ae0800.  mov rdx, qword [0x08000e50] ; [0x8000e50:8]=0xffffffff00000000
        :   0x080005a2      488b02         mov rax, qword [rdx]
        :   0x080005a5      4883c801       or rax, 1
        `=< 0x080005a9      ebc5           jmp 0x8000570
  --------> 0x080005ab      488b15a60800.  mov rdx, qword [0x08000e58] ; [0x8000e58:8]=-1
            0x080005b2      488b02         mov rax, qword [rdx]
            0x080005b5      2501111111     and eax, 0x11111101
            0x080005ba      488902         mov qword [rdx], rax
            0x080005bd      488b15940800.  mov rdx, qword [0x08000e58] ; [0x8000e58:8]=-1
            0x080005c4      488b02         mov rax, qword [rdx]
            0x080005c7      4883c801       or rax, 1
        .-> 0x080005cb      488902         mov qword [rdx], rax
        :   0x080005ce      488b15830800.  mov rdx, qword [0x08000e58] ; [0x8000e58:8]=-1
        :   0x080005d5      488b02         mov rax, qword [rdx]
        :   0x080005d8      4883c810       or rax, 0x10
        :   0x080005dc      488902         mov qword [rdx], rax
  ========< 0x080005df      e950fdffff     jmp 0x8000334
  --------> 0x080005e4      488b156d0800.  mov rdx, qword [0x08000e58] ; [0x8000e58:8]=-1
        :   0x080005eb      488b02         mov rax, qword [rdx]
        :   0x080005ee      2501111111     and eax, 0x11111101
        :   0x080005f3      488902         mov qword [rdx], rax
        :   0x080005f6      488b155b0800.  mov rdx, qword [0x08000e58] ; [0x8000e58:8]=-1
        :   0x080005fd      488b02         mov rax, qword [rdx]
        :   0x08000600      4883e0fe       and rax, 0xfffffffffffffffe
        `=< 0x08000604      ebc5           jmp 0x80005cb
  --------> 0x08000606      488b15530800.  mov rdx, qword [0x08000e60] ; [0x8000e60:8]=-1
            0x0800060d      488b02         mov rax, qword [rdx]
            0x08000610      2501111111     and eax, 0x11111101
            0x08000615      488902         mov qword [rdx], rax
            0x08000618      488b15410800.  mov rdx, qword [0x08000e60] ; [0x8000e60:8]=-1
            0x0800061f      488b02         mov rax, qword [rdx]
            0x08000622      4883e0fe       and rax, 0xfffffffffffffffe
        .-> 0x08000626      488902         mov qword [rdx], rax
        :   0x08000629      488b15300800.  mov rdx, qword [0x08000e60] ; [0x8000e60:8]=-1
        :   0x08000630      488b02         mov rax, qword [rdx]
        :   0x08000633      4883c810       or rax, 0x10
        :   0x08000637      488902         mov qword [rdx], rax
  ========< 0x0800063a      e9f5fcffff     jmp 0x8000334
  --------> 0x0800063f      488b15220800.  mov rdx, qword [0x08000e68] ; [0x8000e68:8]=-1
        :   0x08000646      488b02         mov rax, qword [rdx]
        :   0x08000649      2501111111     and eax, 0x11111101
        :   0x0800064e      488902         mov qword [rdx], rax
        :   0x08000651      488b15100800.  mov rdx, qword [0x08000e68] ; [0x8000e68:8]=-1
        :   0x08000658      488b02         mov rax, qword [rdx]
        :   0x0800065b      4883c801       or rax, 1
       .--> 0x0800065f      488902         mov qword [rdx], rax
       ::   0x08000662      488b15ff0700.  mov rdx, qword [0x08000e68] ; [0x8000e68:8]=-1
       ::   0x08000669      488b02         mov rax, qword [rdx]
       ::   0x0800066c      4883c810       or rax, 0x10
       ::   0x08000670      488902         mov qword [rdx], rax
  ========< 0x08000673      e9bcfcffff     jmp 0x8000334
  --------> 0x08000678      488b15e10700.  mov rdx, qword [0x08000e60] ; [0x8000e60:8]=-1
       ::   0x0800067f      488b02         mov rax, qword [rdx]
       ::   0x08000682      2501111111     and eax, 0x11111101
       ::   0x08000687      488902         mov qword [rdx], rax
       ::   0x0800068a      488b15cf0700.  mov rdx, qword [0x08000e60] ; [0x8000e60:8]=-1
       ::   0x08000691      488b02         mov rax, qword [rdx]
       ::   0x08000694      4883c801       or rax, 1
       :`=< 0x08000698      eb8c           jmp 0x8000626
  --------> 0x0800069a      488b15d70700.  mov rdx, qword [0x08000e78] ; [0x8000e78:8]=-1
       :    0x080006a1      488b02         mov rax, qword [rdx]
       :    0x080006a4      2501111111     and eax, 0x11111101
       :    0x080006a9      488902         mov qword [rdx], rax
       :    0x080006ac      488b15c50700.  mov rdx, qword [0x08000e78] ; [0x8000e78:8]=-1
       :    0x080006b3      488b02         mov rax, qword [rdx]
       :    0x080006b6      4883e0fe       and rax, 0xfffffffffffffffe
  ========< 0x080006ba      e92afcffff     jmp 0x80002e9
  --------> 0x080006bf      488b15aa0700.  mov rdx, qword [0x08000e70] ; [0x8000e70:8]=-1
       :    0x080006c6      488b02         mov rax, qword [rdx]
       :    0x080006c9      2501111111     and eax, 0x11111101
       :    0x080006ce      488902         mov qword [rdx], rax
       :    0x080006d1      488b15980700.  mov rdx, qword [0x08000e70] ; [0x8000e70:8]=-1
       :    0x080006d8      488b02         mov rax, qword [rdx]
       :    0x080006db      4883c801       or rax, 1
       :.-> 0x080006df      488902         mov qword [rdx], rax
       ::   0x080006e2      488b15870700.  mov rdx, qword [0x08000e70] ; [0x8000e70:8]=-1
       ::   0x080006e9      488b02         mov rax, qword [rdx]
       ::   0x080006ec      4883c810       or rax, 0x10
       ::   0x080006f0      488902         mov qword [rdx], rax
  ========< 0x080006f3      e93cfcffff     jmp 0x8000334
  --------> 0x080006f8      488b15710700.  mov rdx, qword [0x08000e70] ; [0x8000e70:8]=-1
       ::   0x080006ff      488b02         mov rax, qword [rdx]
       ::   0x08000702      2501111111     and eax, 0x11111101
       ::   0x08000707      488902         mov qword [rdx], rax
       ::   0x0800070a      488b155f0700.  mov rdx, qword [0x08000e70] ; [0x8000e70:8]=-1
       ::   0x08000711      488b02         mov rax, qword [rdx]
       ::   0x08000714      4883e0fe       and rax, 0xfffffffffffffffe
       :`=< 0x08000718      ebc5           jmp 0x80006df
  --------> 0x0800071a      488b15470700.  mov rdx, qword [0x08000e68] ; [0x8000e68:8]=-1
       :    0x08000721      488b02         mov rax, qword [rdx]
       :    0x08000724      2501111111     and eax, 0x11111101
       :    0x08000729      488902         mov qword [rdx], rax
       :    0x0800072c      488b15350700.  mov rdx, qword [0x08000e68] ; [0x8000e68:8]=-1
       :    0x08000733      488b02         mov rax, qword [rdx]
       :    0x08000736      4883e0fe       and rax, 0xfffffffffffffffe
       `==< 0x0800073a      e920ffffff     jmp 0x800065f
            0x0800073f      90             nop

            ;-- reloc.init_module_64:
            ;-- led_drv_init:
            ;-- init_module:
            0x08000740      .qword 0x2e6666666666c031                    ; RELOC 64 init_module
            0x08000748      0f1f84000000.  nop dword [rax + rax]
        .-> 0x08000750      48c780cf2700.  mov qword [rax + 0x80027cf], 0 ; [0x80027cf:8]=-1
        :   0x0800075b      48c780200e00.  mov qword [rax + obj.gpbcon], 0 ; [0x8000e20:8]=0
        :   0x08000766      488d4008       lea rax, qword [rax + 8]    ; 8
        :   0x0800076a      4883f860       cmp rax, 0x60               ; '`' ; 96
        `=< 0x0800076e      75e0           jne 0x8000750
            0x08000770      55             push rbp
            0x08000771      49c7c0532700.  mov r8, 0x8002753
            0x08000778      48c7c1112800.  mov rcx, 0x8002811
            0x0800077f      4889e5         mov rbp, rsp
            0x08000782      ba00010000     mov edx, 0x100              ; 256
            0x08000787      53             push rbx
            0x08000788      31f6           xor esi, esi
            0x0800078a      31ff           xor edi, edi
            0x0800078c      488d6424f8     lea rsp, qword [rsp - 8]
            0x08000791      31db           xor ebx, ebx
            0x08000793      e8c31f0000     call reloc.__register_chrdev_91
            0x08000798      48c7c7e00b00.  mov rdi, obj.__this_module  ; 0x8000be0
            0x0800079f      48c7c2df2700.  mov rdx, 0x80027df
            0x080007a6      48c7c6252800.  mov rsi, 0x8002825
            0x080007ad      890551060000   mov dword [obj.major], eax  ; [0x8000e04:4]=0
            0x080007b3      e8af1f0000     call reloc.__class_create_103
            0x080007b8      4889058c2000.  mov qword [0x0800284b], rax ; [0x800284b:8]=-1
            0x080007bf      c70537060000.  mov dword [obj.minor], 0    ; [0x8000e00:4]=0
            0x080007c9      488d38         lea rdi, qword [rax]
        ,=< 0x080007cc      eb09           jmp 0x80007d7
        |   0x080007ce      6690           nop
       .--> 0x080007d0      488b3d782000.  mov rdi, qword [0x0800284f] ; [0x800284f:8]=-1
       :`-> 0x080007d7      8b1527060000   mov edx, dword [obj.major]  ; [0x8000e04:4]=0
       :    0x080007dd      448d4b01       lea r9d, dword [rbx + 1]    ; 1
       :    0x080007e1      c1e214         shl edx, 0x14
       :    0x080007e4      31c9           xor ecx, ecx
       :    0x080007e6      09da           or edx, ebx
       :    0x080007e8      31f6           xor esi, esi
       :    0x080007ea      31c0           xor eax, eax
       :    0x080007ec      49c7c0402800.  mov r8, 0x8002840
       :    0x080007f3      e87f1f0000     call reloc.device_create_119
       :    0x080007f8      4863db         movsxd rbx, ebx
       :    0x080007fb      488904ddfb27.  mov qword [rbx*8 + 0x80027fb], rax ; [0x80027fb:8]=-1
       :    0x08000803      8b05f7050000   mov eax, dword [obj.minor]  ; [0x8000e00:4]=0
       :    0x08000809      89c3           mov ebx, eax
       :    0x0800080b      83c301         add ebx, 1
       :    0x0800080e      83fb0b         cmp ebx, 0xb                ; 11
       :    0x08000811      891de9050000   mov dword [obj.minor], ebx  ; [0x8000e00:4]=0
       `==< 0x08000817      76b7           jbe 0x80007d0
            0x08000819      be10000000     mov esi, 0x10               ; 16
            0x0800081e      bfb8d1d0fe     mov edi, 0xfed0d1b8
            0x08000823      e8571f0000     call reloc.ioremap_nocache_127
            0x08000828      be10000000     mov esi, 0x10               ; 16
            0x0800082d      bf28d0d0fe     mov edi, 0xfed0d028
            0x08000832      488905e70500.  mov qword [obj.gpbcon], rax ; [0x8000e20:8]=0
# resource_size_t gpbcon[];
# gpbcon[0] = ioremap_nocache(0xfed0d1b8, 16);
            0x08000839      e8451f0000     call reloc.ioremap_nocache_131
            0x0800083e      be10000000     mov esi, 0x10               ; 16
            0x08000843      bfb8d0d0fe     mov edi, 0xfed0d0b8
            0x08000848      488905d90500.  mov qword [0x08000e28], rax ; [0x8000e28:8]=0
# gpbcon[1] = ioremap_nocache(0xfed0d028, 16);
            0x0800084f      e8331f0000     call reloc.ioremap_nocache_135
            0x08000854      be10000000     mov esi, 0x10               ; 16
            0x08000859      bfd8d0d0fe     mov edi, 0xfed0d0d8
            0x0800085e      488905cb0500.  mov qword [0x08000e30], rax ; [0x8000e30:8]=0
# gpbcon[2] = ioremap_nocache(0xfed0d0b8, 16);
            0x08000865      e8211f0000     call reloc.ioremap_nocache_139
            0x0800086a      be10000000     mov esi, 0x10               ; 16
            0x0800086f      bf88d0d0fe     mov edi, 0xfed0d088
            0x08000874      488905bd0500.  mov qword [0x08000e38], rax ; [0x8000e38:8]=0
# gpbcon[3] = ioremap_nocache(0xfed0d0d8, 16);
            0x0800087b      e80f1f0000     call reloc.ioremap_nocache_143
            0x08000880      be10000000     mov esi, 0x10               ; 16
            0x08000885      bfa8d0d0fe     mov edi, 0xfed0d0a8
            0x0800088a      488905af0500.  mov qword [0x08000e40], rax ; [0x8000e40:8]=0
# gpbcon[4] = ioremap_nocache(0xfed0d088, 16);
            0x08000891      e8fd1e0000     call reloc.ioremap_nocache_147
            0x08000896      be10000000     mov esi, 0x10               ; 16
            0x0800089b      bf48d0d0fe     mov edi, 0xfed0d048
            0x080008a0      488905a10500.  mov qword [0x08000e48], rax ; [0x8000e48:8]=0
# gpbcon[5] = ioremap_nocache(0xfed0d0a8, 16);
            0x080008a7      e8eb1e0000     call reloc.ioremap_nocache_151
            0x080008ac      be10000000     mov esi, 0x10               ; 16
            0x080008b1      bf68d0d0fe     mov edi, 0xfed0d068
            0x080008b6      488905930500.  mov qword [0x08000e50], rax ; [0x8000e50:8]=0xffffffff00000000
# gpbcon[6] = ioremap_nocache(0xfed0d048, 16);
            0x080008bd      e8d91e0000     call reloc.ioremap_nocache_155
            0x080008c2      be10000000     mov esi, 0x10               ; 16
            0x080008c7      bf18d0d0fe     mov edi, 0xfed0d018
            0x080008cc      488905850500.  mov qword [0x08000e58], rax ; [0x8000e58:8]=-1
# gpbcon[7] = ioremap_nocache(0xfed0d068, 16);
            0x080008d3      e8c71e0000     call reloc.ioremap_nocache_159
            0x080008d8      be10000000     mov esi, 0x10               ; 16
            0x080008dd      bf38d0d0fe     mov edi, 0xfed0d038
            0x080008e2      488905770500.  mov qword [0x08000e60], rax ; [0x8000e60:8]=-1
# gpbcon[8] = ioremap_nocache(0xfed0d018, 16);
            0x080008e9      e8b51e0000     call reloc.ioremap_nocache_163
            0x080008ee      be10000000     mov esi, 0x10               ; 16
            0x080008f3      bf58d0d0fe     mov edi, 0xfed0d058
            0x080008f8      488905690500.  mov qword [0x08000e68], rax ; [0x8000e68:8]=-1
# gpbcon[9] = ioremap_nocache(0xfed0d038, 16);
            0x080008ff      e8a31e0000     call reloc.ioremap_nocache_167
            0x08000904      be10000000     mov esi, 0x10               ; 16
            0x08000909      bf98d0d0fe     mov edi, 0xfed0d098
            0x0800090e      4889055b0500.  mov qword [0x08000e70], rax ; [0x8000e70:8]=-1
# gpbcon[10] = ioremap_nocache(0xfed0d058, 16);
            0x08000915      e8911e0000     call reloc.ioremap_nocache_171
            0x0800091a      488905570500.  mov qword [0x08000e78], rax ; [0x8000e78:8]=-1
# gpbcon[11] = ioremap_nocache(0xfed0d098, 16);
            0x08000921      488d642408     lea rsp, qword [rsp + 8]    ; 8
            0x08000926      31c0           xor eax, eax
            0x08000928      5b             pop rbx
            0x08000929      5d             pop rbp
            0x0800092a      c3             ret
            0x0800092b      0f1f440000     nop dword [rax + rax]

            ;-- reloc.cleanup_module_48:
            ;-- led_drv_exit:
            ;-- cleanup_module:
            0x08000930      .qword 0x08002869c1c74855                    ; RELOC 64 cleanup_module
            0x08000938      ba00010000     mov edx, 0x100              ; 256
            0x0800093d      4889e5         mov rbp, rsp
            0x08000940      31f6           xor esi, esi
            0x08000942      53             push rbx
            0x08000943      488d6424f8     lea rsp, qword [rsp - 8]
            0x08000948      8b3db6040000   mov edi, dword [obj.major]  ; [0x8000e04:4]=0
            0x0800094e      e8601e0000     call reloc.__unregister_chrdev_179
            0x08000953      c705a3040000.  mov dword [obj.minor], 0    ; [0x8000e00:4]=0
            0x0800095d      31c0           xor eax, eax
            0x0800095f      90             nop
        .-> 0x08000960      4898           cdqe
        :   0x08000962      488b3cc53728.  mov rdi, qword [rax*8 + 0x8002837] ; [0x8002837:8]=-1
        :   0x0800096a      e84c1e0000     call reloc.device_unregister_187
        :   0x0800096f      8b058b040000   mov eax, dword [obj.minor]  ; [0x8000e00:4]=0
        :   0x08000975      83c001         add eax, 1
        :   0x08000978      83f80b         cmp eax, 0xb                ; 11
        :   0x0800097b      89057f040000   mov dword [obj.minor], eax  ; [0x8000e00:4]=0
        `=< 0x08000981      76dd           jbe 0x8000960
            0x08000983      488b3d151f00.  mov rdi, qword [0x0800289f] ; [0x800289f:8]=-1
            0x0800098a      48c7c3200e00.  mov rbx, obj.gpbcon         ; 0x8000e20
            0x08000991      e82d1e0000     call reloc.class_destroy_195
            0x08000996      662e0f1f8400.  nop word cs:[rax + rax]
        .-> 0x080009a0      488b3b         mov rdi, qword [rbx]
        :   0x080009a3      488d5b08       lea rbx, qword [rbx + 8]    ; 8
        :   0x080009a7      e81b1e0000     call reloc.iounmap_199
        :   0x080009ac      4881fb800e00.  cmp rbx, obj.leddrv_class_dev ; obj.__key.21056 ; 0x8000e80
        `=< 0x080009b3      75eb           jne 0x80009a0
            0x080009b5      488d642408     lea rsp, qword [rsp + 8]    ; 8
            0x080009ba      5b             pop rbx
            0x080009bb      5d             pop rbp
            0x080009bc      c3             ret

            ;-- str.led1on:
            ;-- section_end..text:
            ;-- section..rodata.str1.1:
            0x080009bd     .string "led1on" ; len=7                    ; [04] m-r-- section size 214 named .rodata.str1.1
            ;-- str.led1off:
            0x080009c4     .string "led1off" ; len=8
            ;-- str.led2on:
            0x080009cc     .string "led2on" ; len=7
            ;-- str.led2off:
            0x080009d3     .string "led2off" ; len=8
            ;-- str.led3on:
            0x080009db     .string "led3on" ; len=7
            ;-- str.led3off:
            0x080009e2     .string "led3off" ; len=8
            ;-- str.led4on:
            0x080009ea     .string "led4on" ; len=7
            ;-- str.led4off:
            0x080009f1     .string "led4off" ; len=8
            ;-- str.led5on:
            0x080009f9     .string "led5on" ; len=7
            ;-- str.led5off:
            0x08000a00     .string "led5off" ; len=8
            ;-- str.led6on:
            0x08000a08     .string "led6on" ; len=7
            ;-- str.led6off:
            0x08000a0f     .string "led6off" ; len=8
            ;-- str.led7on:
            0x08000a17     .string "led7on" ; len=7
            ;-- str.led7off:
            0x08000a1e     .string "led7off" ; len=8
            ;-- str.led8on:
            0x08000a26     .string "led8on" ; len=7
            ;-- str.led8off:
            0x08000a2d     .string "led8off" ; len=8
            ;-- str.led9on:
            0x08000a35     .string "led9on" ; len=7
            ;-- str.led9off:
            0x08000a3c     .string "led9off" ; len=8
            ;-- str.led10on:
            0x08000a44     .string "led10on" ; len=8
            ;-- str.led10off:
            0x08000a4c     .string "led10off" ; len=9
            ;-- str.led11on:
            0x08000a55     .string "led11on" ; len=8
            ;-- str.led11off:
            0x08000a5d     .string "led11off" ; len=9
            ;-- str.led12on:
            0x08000a66     .string "led12on" ; len=8
            ;-- str.led12off:
            0x08000a6e     .string "led12off" ; len=9
            ;-- str.led_drv:
            0x08000a77     .string "led_drv" ; len=8
            ;-- str.leddrv_drv:
            0x08000a7f     .string "leddrv_drv" ; len=11
            ;-- str.leddrv_d:
            0x08000a8a     .string "leddrv%d" ; len=9

            ;-- section_end..rodata.str1.1:
            ;-- section..modinfo:
            ;-- __UNIQUE_ID_license0:
            0x08000a93      6c             insb byte [rdi], dx         ; [05] m-r-- section size 52 named .modinfo
            0x08000a94      6963656e7365.  imul esp, dword [rbx + 0x65], 0x3d65736e
        |   0x08000a9b      4750           push r8
        |   0x08000a9d  ~   4c00646570     add byte [rbp + 0x70], r12b
        |   ;-- __module_depends:
       ,==< 0x08000a9f      64657065       jo 0x8000b08
       ||   0x08000aa3      6e             outsb dx, byte [rsi]
      ,===< 0x08000aa4      64733d         jae 0x8000ae4
      |||   0x08000aa7  ~   007665         add byte [rsi + 0x65], dh
      |||   ;-- __UNIQUE_ID_vermagic0:
      |||   0x08000aa8      7665           jbe 0x8000b0f
     ,====< 0x08000aaa      726d           jb 0x8000b19
     ||||   0x08000aac      61             invalid
     ||||   0x08000aad      6769633d342e.  imul esp, dword [ebx + 0x3d], 0x2e302e34
     ||||   0x08000ab5      3020           xor byte [rax], ah
     ||||   0x08000ab7      53             push rbx
     ||||   0x08000ab8      4d50           push r8
     ||||   0x08000aba      206d6f         and byte [rbp + 0x6f], ch
     ||||   0x08000abd      645f           pop rdi
    ,=====< 0x08000abf      756e           jne 0x8000b2f
    |||||   0x08000ac1      6c             insb byte [rdi], dx
    |||||   0x08000ac2      6f             outsd dx, dword [rsi]
    |||||   0x08000ac3      61             invalid
    |||||   0x08000ac4      642000         and byte fs:[rax], al
    |||||   ;-- section_end..modinfo:
    |||||   0x08000ac7      ff             invalid
    |||||   0x08000ac8      ff             invalid
    |||||   0x08000ac9      ff             invalid
    |||||   0x08000aca      ff             invalid
    |||||   0x08000acb      ff             invalid
    |||||   0x08000acc      ff             invalid
    |||||   0x08000acd      ff             invalid
    |||||   0x08000ace      ff             invalid
    |||||   0x08000acf      ff             invalid
    |||||   0x08000ad0      ff             invalid
    |||||   0x08000ad1      ff             invalid
    |||||   0x08000ad2      ff             invalid
    |||||   0x08000ad3      ff             invalid
    |||||   0x08000ad4      ff             invalid
    |||||   0x08000ad5      ff             invalid
    |||||   0x08000ad6      ff             invalid
    |||||   0x08000ad7      ff             invalid
    |||||   0x08000ad8      ff             invalid
    |||||   0x08000ad9      ff             invalid
    |||||   0x08000ada      ff             invalid
    |||||   0x08000adb      ff             invalid
    |||||   0x08000adc      ff             invalid
    |||||   0x08000add      ff             invalid
    |||||   0x08000ade      ff             invalid
    |||||   0x08000adf  ~   ffe0           jmp rax
    |||||   ;-- section..data:
    |||||   ;-- led_drv_fops:
    |||||   0x08000ae0      e00b           loopne 0x8000aed            ; [06] m-rw- section size 240 named .data
    |||||   0x08000ae2      0008           add byte [rax], cl
    ||`---> 0x08000ae4      0000           add byte [rax], al
    || ||   0x08000ae6      0000           add byte [rax], al
    || ||   0x08000ae8      0000           add byte [rax], al
    || ||   0x08000aea      0000           add byte [rax], al
    || ||   0x08000aec      0000           add byte [rax], al
    || ||   0x08000aee      0000           add byte [rax], al
    || ||   0x08000af0      0000           add byte [rax], al
    || ||   0x08000af2      0000           add byte [rax], al
    || ||   0x08000af4      0000           add byte [rax], al
    || ||   0x08000af6      0000           add byte [rax], al
    || ||   0x08000af8      db             invalid
    || ||   0x08000af9      27             invalid
    || ||   0x08000afa      0008           add byte [rax], cl
    || ||   0x08000afc      0000           add byte [rax], al
    || ||   0x08000afe      0000           add byte [rax], al
    || |    0x08000b00      0000           add byte [rax], al
    || |    0x08000b02      0000           add byte [rax], al
    || |    0x08000b04      0000           add byte [rax], al
    || |    0x08000b06      0000           add byte [rax], al
    || `--> 0x08000b08      0000           add byte [rax], al
    ||      0x08000b0a      0000           add byte [rax], al
    ||      0x08000b0c      0000           add byte [rax], al
    ||      0x08000b0e      0000           add byte [rax], al
    ||      0x08000b10      0000           add byte [rax], al
    ||      0x08000b12      0000           add byte [rax], al
    ||      0x08000b14      0000           add byte [rax], al
    ||      0x08000b16      0000           add byte [rax], al
    ||      0x08000b18      0000           add byte [rax], al
    |       0x08000b1a      0000           add byte [rax], al
    |       0x08000b1c      0000           add byte [rax], al
    |       0x08000b1e      0000           add byte [rax], al
    |       0x08000b20      0000           add byte [rax], al
    |       0x08000b22      0000           add byte [rax], al
    |       0x08000b24      0000           add byte [rax], al
    |       0x08000b26      0000           add byte [rax], al
    |       0x08000b28      0000           add byte [rax], al
    |       0x08000b2a      0000           add byte [rax], al
    |       0x08000b2c      0000           add byte [rax], al
    |       0x08000b2e      0000           add byte [rax], al
            0x08000b30      0000           add byte [rax], al
            0x08000b32      0000           add byte [rax], al
            0x08000b34      0000           add byte [rax], al
            0x08000b36      0000           add byte [rax], al
            0x08000b38      0000           add byte [rax], al
            0x08000b3a      0000           add byte [rax], al
            0x08000b3c      0000           add byte [rax], al
            0x08000b3e      0000           add byte [rax], al
            0x08000b40      0000           add byte [rax], al
            0x08000b42      0000           add byte [rax], al
            0x08000b44      0000           add byte [rax], al
            0x08000b46      0000           add byte [rax], al
            0x08000b48      0000           add byte [rax], al
            0x08000b4a      0000           add byte [rax], al
            0x08000b4c      0000           add byte [rax], al
            0x08000b4e      0000           add byte [rax], al
            0x08000b50      cf             iretd
            0x08000b51      27             invalid
            0x08000b52      0008           add byte [rax], cl
            0x08000b54      0000           add byte [rax], al
            0x08000b56      0000           add byte [rax], al
            0x08000b58      0000           add byte [rax], al
            0x08000b5a      0000           add byte [rax], al
            0x08000b5c      0000           add byte [rax], al
            0x08000b5e      0000           add byte [rax], al
            0x08000b60      0000           add byte [rax], al
            0x08000b62      0000           add byte [rax], al
            0x08000b64      0000           add byte [rax], al
            0x08000b66      0000           add byte [rax], al
            0x08000b68      0000           add byte [rax], al
            0x08000b6a      0000           add byte [rax], al
            0x08000b6c      0000           add byte [rax], al
            0x08000b6e      0000           add byte [rax], al
            0x08000b70      0000           add byte [rax], al
            0x08000b72      0000           add byte [rax], al
            0x08000b74      0000           add byte [rax], al
            0x08000b76      0000           add byte [rax], al
            0x08000b78      0000           add byte [rax], al
            0x08000b7a      0000           add byte [rax], al
            0x08000b7c      0000           add byte [rax], al
            0x08000b7e      0000           add byte [rax], al
            0x08000b80      0000           add byte [rax], al
            0x08000b82      0000           add byte [rax], al
            0x08000b84      0000           add byte [rax], al
            0x08000b86      0000           add byte [rax], al
            0x08000b88      0000           add byte [rax], al
            0x08000b8a      0000           add byte [rax], al
            0x08000b8c      0000           add byte [rax], al
            0x08000b8e      0000           add byte [rax], al
            0x08000b90      0000           add byte [rax], al
            0x08000b92      0000           add byte [rax], al
            0x08000b94      0000           add byte [rax], al
            0x08000b96      0000           add byte [rax], al
            0x08000b98      0000           add byte [rax], al
            0x08000b9a      0000           add byte [rax], al
            0x08000b9c      0000           add byte [rax], al
            0x08000b9e      0000           add byte [rax], al
            0x08000ba0      0000           add byte [rax], al
            0x08000ba2      0000           add byte [rax], al
            0x08000ba4      0000           add byte [rax], al
            0x08000ba6      0000           add byte [rax], al
            0x08000ba8      0000           add byte [rax], al
            0x08000baa      0000           add byte [rax], al
            0x08000bac      0000           add byte [rax], al
            0x08000bae      0000           add byte [rax], al
            0x08000bb0      0000           add byte [rax], al
            0x08000bb2      0000           add byte [rax], al
            0x08000bb4      0000           add byte [rax], al
            0x08000bb6      0000           add byte [rax], al
            0x08000bb8      0000           add byte [rax], al
            0x08000bba      0000           add byte [rax], al
            0x08000bbc      0000           add byte [rax], al
            0x08000bbe      0000           add byte [rax], al
            0x08000bc0      0000           add byte [rax], al
            0x08000bc2      0000           add byte [rax], al
            0x08000bc4      0000           add byte [rax], al
            0x08000bc6      0000           add byte [rax], al
            0x08000bc8      0000           add byte [rax], al
            0x08000bca      0000           add byte [rax], al
            0x08000bcc      0000           add byte [rax], al
            0x08000bce      0000           add byte [rax], al
            ;-- section_end..data:
            0x08000bd0      ff             invalid
            0x08000bd1      ff             invalid
            0x08000bd2      ff             invalid
            0x08000bd3      ff             invalid
            0x08000bd4      ff             invalid
            0x08000bd5      ff             invalid
            0x08000bd6      ff             invalid
            0x08000bd7      ff             invalid
            0x08000bd8      ff             invalid
            0x08000bd9      ff             invalid
            0x08000bda      ff             invalid
            0x08000bdb      ff             invalid
            0x08000bdc      ff             invalid
            0x08000bdd      ff             invalid
            0x08000bde      ff             invalid
            0x08000bdf  ~   ff00           inc dword [rax]               ; RELOC 32 __this_module
            ;-- section..gnu.linkonce.this_module:
            ;-- reloc.__this_module_224:
            ;-- __this_module:
            0x08000be0      .qword 0x0000000000000000 ; rax ; rbx ; rcx ; rdx ; rsi ; rdi ; r8 ; r9 ; r10 ; r11 ; r12 ; r13 ; r14 ; r15 ; rbp ; rflags ; rsp  ; RELOC 32 __this_module ; [08] m-rw- section size 544 named .gnu.linkonce.this_module
            0x08000be8      0000           add byte [rax], al
            0x08000bea      0000           add byte [rax], al
            0x08000bec      0000           add byte [rax], al
            0x08000bee      0000           add byte [rax], al
            0x08000bf0      0000           add byte [rax], al
            0x08000bf2      0000           add byte [rax], al
            0x08000bf4      0000           add byte [rax], al
            0x08000bf6      0000           add byte [rax], al
            0x08000bf8      6c             insb byte [rdi], dx
            0x08000bf9      65645f         pop rdi
        ,=< 0x08000bfc      647276         jb 0x8000c75
        |   0x08000bff      0000           add byte [rax], al
        |   0x08000c01      0000           add byte [rax], al
        |   0x08000c03      0000           add byte [rax], al
        |   0x08000c05      0000           add byte [rax], al
        |   0x08000c07      0000           add byte [rax], al
        |   0x08000c09      0000           add byte [rax], al
        |   0x08000c0b      0000           add byte [rax], al
        |   0x08000c0d      0000           add byte [rax], al
        |   0x08000c0f      0000           add byte [rax], al
        |   0x08000c11      0000           add byte [rax], al
        |   0x08000c13      0000           add byte [rax], al
        |   0x08000c15      0000           add byte [rax], al
        |   0x08000c17      0000           add byte [rax], al
        |   0x08000c19      0000           add byte [rax], al
        |   0x08000c1b      0000           add byte [rax], al
        |   0x08000c1d      0000           add byte [rax], al
        |   0x08000c1f      0000           add byte [rax], al
        |   0x08000c21      0000           add byte [rax], al
        |   0x08000c23      0000           add byte [rax], al
        |   0x08000c25      0000           add byte [rax], al
        |   0x08000c27      0000           add byte [rax], al
        |   0x08000c29      0000           add byte [rax], al
        |   0x08000c2b      0000           add byte [rax], al
        |   0x08000c2d      0000           add byte [rax], al
        |   0x08000c2f      0000           add byte [rax], al
        |   0x08000c31      0000           add byte [rax], al
        |   0x08000c33      0000           add byte [rax], al
        |   0x08000c35      0000           add byte [rax], al
        |   0x08000c37      0000           add byte [rax], al
        |   0x08000c39      0000           add byte [rax], al
        |   0x08000c3b      0000           add byte [rax], al
        |   0x08000c3d      0000           add byte [rax], al
        |   0x08000c3f      0000           add byte [rax], al
        |   0x08000c41      0000           add byte [rax], al
        |   0x08000c43      0000           add byte [rax], al
        |   0x08000c45      0000           add byte [rax], al
        |   0x08000c47      0000           add byte [rax], al
        |   0x08000c49      0000           add byte [rax], al
        |   0x08000c4b      0000           add byte [rax], al
        |   0x08000c4d      0000           add byte [rax], al
[0x08000070]>

[Jan 4 14:45] psmouse: version magic '4.15.18+ SMP mod_unload ' should be '4.15.0-42-generic SMP mod_unload '

These ioremap_nocache calls look OK.
gpbcon[0] = ioremap_nocache(0xfed0d1b8, 16);
gpbcon[1] = ioremap_nocache(0xfed0d028, 16);
gpbcon[2] = ioremap_nocache(0xfed0d0b8, 16);
gpbcon[3] = ioremap_nocache(0xfed0d0d8, 16);
gpbcon[4] = ioremap_nocache(0xfed0d088, 16);
gpbcon[5] = ioremap_nocache(0xfed0d0a8, 16);
gpbcon[6] = ioremap_nocache(0xfed0d048, 16);
gpbcon[7] = ioremap_nocache(0xfed0d068, 16);
gpbcon[8] = ioremap_nocache(0xfed0d018, 16);
gpbcon[9] = ioremap_nocache(0xfed0d038, 16);
gpbcon[10] = ioremap_nocache(0xfed0d058, 16);
gpbcon[11] = ioremap_nocache(0xfed0d098, 16);

Turning a light on looks like this-
u64 reg;
reg = readq(addr);
reg &= 0x11111101;
writeq(reg, addr);
reg = readq(addr);
reg |= 0x1;
writeq(reg, addr);
reg = readq(addr);
reg |= 0x10;
writeq(reg, addr);

Turning a light off looks like this-
u64 reg;
reg = readq(addr);
reg &= 0x11111101;
writeq(reg, addr);
reg = readq(addr);
reg &= ~0x1ul;
writeq(reg, addr);
reg = readq(addr);
reg |= 0x10;
writeq(reg, addr);

But in practice on and off is not so clear.
Lights 1, 3, 5, 7 turn green leds "off" for "on" for "HD1", "HD2", "HD3" and "HD4".
Lights 2, 4, 6, 8 turn red leds "off" for "off" for "HD1", "HD2", "HD3" and "HD4".
Lights 9 and 10 change nothing.
Light 11 turns a green led "off" for "on" for "LAN1".

mike@b2:~$ sudo modprobe leds-f4-220
mike@b2:~$ sudo bash -c 'echo -n led1off > /dev/leds'
mike@b2:~$ sudo bash -c 'echo -n led1off > /dev/leds'
mike@b2:~$ sudo bash -c 'echo -n led1on > /dev/leds'
mike@b2:~$ sudo bash -c 'echo -n led3off > /dev/leds'
mike@b2:~$ sudo bash -c 'echo -n led3off > /dev/leds'
mike@b2:~$ sudo bash -c 'echo -n led3on > /dev/leds'
mike@b2:~$ sudo bash -c 'echo -n led3off > /dev/leds'
mike@b2:~$ sudo bash -c 'echo -n led3off > /dev/leds'
mike@b2:~$ sudo bash -c 'echo -n led1off > /dev/leds'
mike@b2:~$ sudo bash -c 'echo -n led2off > /dev/leds'
mike@b2:~$ sudo bash -c 'echo -n led2on > /dev/leds'

